android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int mSeenPositionMin -> mSeenPositionMin
    int mSeenPositionMax -> mSeenPositionMax
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat from(android.content.Context) -> from
    boolean isFinished() -> isFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity() -> getCurrVelocity
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(android.widget.Scroller) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
cn.robotium.AppInfo -> cn.robotium.a:
    java.lang.String appLabel -> a
    android.graphics.drawable.Drawable appIcon -> b
    java.lang.String pkgName -> c
    int ppid -> d
    int uid -> e
    int getUid() -> a
    void setUid(int) -> a
    java.lang.String getAppLabel() -> b
    void setAppLabel(java.lang.String) -> a
    android.graphics.drawable.Drawable getAppIcon() -> c
    void setAppIcon(android.graphics.drawable.Drawable) -> a
    java.lang.String getPkgName() -> d
    void setPkgName(java.lang.String) -> b
    int getPid() -> e
    void setPid(int) -> b
cn.robotium.AppListInfo -> cn.robotium.b:
    android.content.Context context -> a
    cn.robotium.AppInfo getAppInfoBypkgName(java.lang.String) -> a
    java.util.List getUserApp() -> a
    java.util.List getSysApp() -> b
    java.util.List getPackagesInfo(android.content.Context) -> a
cn.robotium.CpuInfo -> cn.robotium.c:
    long idleCPU1 -> a
    long idleCPU2 -> b
    long totalCPU1 -> c
    long totalCPU2 -> d
    long idleCPU -> e
    long totalCPU -> f
    long processCPU -> g
    long processCPU1 -> h
    long processCPU2 -> i
    double resProcessCPU -> j
    int pid -> k
    long time -> l
    long interval -> m
    cn.robotium.utils.Sleeper sleeper -> n
    void getCpuUsage(cn.robotium.bean.TestRecordBean) -> a
    void calcPorcessTotalCpuUsage() -> a
    void getTotalCpuTime() -> b
    void getProcessCpuTime() -> c
cn.robotium.MemoryInfo -> cn.robotium.d:
    cn.robotium.utils.Sleeper sleeper -> a
    void calcMemory(int,long,long,android.content.Context,cn.robotium.bean.TestRecordBean) -> a
cn.robotium.MonkeyTest -> cn.robotium.e:
cn.robotium.NetInfo -> cn.robotium.f:
    int uid -> a
    long time -> b
    java.lang.String systemNetPath -> c
    long tcp_rcv -> d
    long tcp_snd -> e
    long trafficBegin -> f
    long trafficEnd -> g
    long tracffic -> h
    double trafficResult -> i
    cn.robotium.utils.Sleeper sleeper -> j
    void calcAppNetInfo(cn.robotium.bean.TestRecordBean) -> a
    void getNetInfo() -> a
cn.robotium.adapter.ExAdapter -> cn.robotium.a.a:
    java.lang.String[] generalsTypes -> a
    android.view.LayoutInflater infater -> b
    java.util.HashMap hh -> c
    android.content.Context context -> d
    android.widget.TextView getTextView() -> a
    int getGroupCount() -> getGroupCount
    java.lang.Object getGroup(int) -> getGroup
    long getGroupId(int) -> getGroupId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
cn.robotium.adapter.HistoryAdapter -> cn.robotium.a.b:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.robotium.adapter.HistoryAdapter$ViewCache -> cn.robotium.a.c:
    android.widget.ImageView appIcon -> b
    android.widget.TextView notReadCount -> c
    android.widget.TextView appLabel -> d
    android.widget.TextView date -> e
    cn.robotium.adapter.HistoryAdapter this$0 -> a
    void access$1(cn.robotium.adapter.HistoryAdapter$ViewCache,android.widget.ImageView) -> a
    void access$2(cn.robotium.adapter.HistoryAdapter$ViewCache,android.widget.TextView) -> a
    void access$3(cn.robotium.adapter.HistoryAdapter$ViewCache,android.widget.TextView) -> b
    void access$4(cn.robotium.adapter.HistoryAdapter$ViewCache,android.widget.TextView) -> c
    android.widget.ImageView access$5(cn.robotium.adapter.HistoryAdapter$ViewCache) -> a
    android.widget.TextView access$6(cn.robotium.adapter.HistoryAdapter$ViewCache) -> b
    android.widget.TextView access$7(cn.robotium.adapter.HistoryAdapter$ViewCache) -> c
    android.widget.TextView access$8(cn.robotium.adapter.HistoryAdapter$ViewCache) -> d
cn.robotium.adapter.ResultInfoAdapter -> cn.robotium.a.d:
    android.content.Context context -> a
    java.util.List list -> b
    android.view.LayoutInflater inflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.robotium.adapter.ResultInfoAdapter$ViewCache -> cn.robotium.a.e:
    android.widget.ImageView readIcon -> b
    android.widget.ImageView notreadIcon -> c
    android.widget.TextView app_test_type -> d
    android.widget.TextView app_test_time -> e
    cn.robotium.adapter.ResultInfoAdapter this$0 -> a
    void access$1(cn.robotium.adapter.ResultInfoAdapter$ViewCache,android.widget.ImageView) -> a
    void access$2(cn.robotium.adapter.ResultInfoAdapter$ViewCache,android.widget.ImageView) -> b
    void access$3(cn.robotium.adapter.ResultInfoAdapter$ViewCache,android.widget.TextView) -> a
    void access$4(cn.robotium.adapter.ResultInfoAdapter$ViewCache,android.widget.TextView) -> b
    android.widget.TextView access$5(cn.robotium.adapter.ResultInfoAdapter$ViewCache) -> a
    android.widget.ImageView access$6(cn.robotium.adapter.ResultInfoAdapter$ViewCache) -> b
    android.widget.ImageView access$7(cn.robotium.adapter.ResultInfoAdapter$ViewCache) -> c
    android.widget.TextView access$8(cn.robotium.adapter.ResultInfoAdapter$ViewCache) -> d
cn.robotium.bean.TestRecordBean -> cn.robotium.b.a:
    int test_id -> a
    java.lang.String pkgname -> b
    java.lang.String applabel -> c
    long test_duration -> d
    long test_refresh_rate -> e
    java.lang.String last_test_time -> f
    int test_type -> g
    java.lang.String test_result -> h
    java.lang.String cpu_max_use -> i
    java.lang.String cpu_avg_use -> j
    java.lang.String memory_max_use -> k
    java.lang.String memory_avg_use -> l
    java.lang.String net_total_use -> m
    java.lang.String test_bouts -> n
    java.lang.String throttle -> o
    java.lang.String ignoreCrashes -> p
    java.lang.String ignoreTimouts -> q
    int has_read -> r
    java.lang.String toString() -> toString
    int getTest_id() -> a
    void setTest_id(int) -> a
    java.lang.String getPkgname() -> b
    void setPkgname(java.lang.String) -> a
    java.lang.String getApplabel() -> c
    void setApplabel(java.lang.String) -> b
    long getTest_duration() -> d
    void setTest_duration(long) -> a
    long getTest_refresh_rate() -> e
    void setTest_refresh_rate(long) -> b
    java.lang.String getLast_test_time() -> f
    void setLast_test_time(java.lang.String) -> c
    int getTest_type() -> g
    void setTest_type(int) -> b
    java.lang.String getTest_result() -> h
    void setTest_result(java.lang.String) -> d
    java.lang.String getCpu_max_use() -> i
    void setCpu_max_use(java.lang.String) -> e
    java.lang.String getCpu_avg_use() -> j
    void setCpu_avg_use(java.lang.String) -> f
    java.lang.String getMemory_max_use() -> k
    void setMemory_max_use(java.lang.String) -> g
    java.lang.String getMemory_avg_use() -> l
    void setMemory_avg_use(java.lang.String) -> h
    java.lang.String getNet_total_use() -> m
    void setNet_total_use(java.lang.String) -> i
    int getHas_read() -> n
    void setHas_read(int) -> c
    java.lang.String getTest_bouts() -> o
    void setTest_bouts(java.lang.String) -> j
    java.lang.String getThrottle() -> p
    void setThrottle(java.lang.String) -> k
    java.lang.String getIgnoreCrashes() -> q
    void setIgnoreCrashes(java.lang.String) -> l
    java.lang.String getIgnoreTimouts() -> r
    void setIgnoreTimouts(java.lang.String) -> m
cn.robotium.database.DBHelper -> cn.robotium.c.a:
    cn.robotium.database.DBHelper dbhelper -> a
    android.database.sqlite.SQLiteDatabase database -> b
    cn.robotium.database.DBHelper getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void insertData(cn.robotium.bean.TestRecordBean) -> a
    java.util.List selectDataByPkgname(java.lang.String) -> a
    java.util.List selectDataGroupByName() -> a
    int getNotReadRecord(java.lang.String) -> b
    boolean deleteDataById(int) -> a
    boolean deleteDataByPkgname(java.lang.String) -> c
    void setHasRead(int) -> b
    void updateTestResult(int,java.lang.String) -> a
    void setBean(cn.robotium.bean.TestRecordBean,android.database.Cursor) -> a
cn.robotium.ui.AppManagerActivity -> cn.robotium.ui.AppManagerActivity:
    android.widget.ExpandableListView applist -> a
    android.widget.TextView titleTxt -> b
    android.widget.Button titleLeftbtn -> c
    android.widget.Button titleRightBtn -> d
    cn.robotium.adapter.ExAdapter adapter -> e
    java.util.HashMap hh -> f
    java.util.List sysList -> g
    java.util.List userList -> h
    cn.robotium.bean.TestRecordBean bean -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initTitleLayout() -> b
    void loadView() -> a
    void onClick(android.view.View) -> onClick
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
    void onResume() -> onResume
cn.robotium.ui.BaseActivity -> cn.robotium.ui.a:
    void onCreate(android.os.Bundle) -> onCreate
cn.robotium.ui.DetailResultInfoActivity -> cn.robotium.ui.DetailResultInfoActivity:
    android.widget.LinearLayout titleLayout -> a
    android.widget.TextView titleTxt -> b
    android.widget.Button titleLeftbtn -> c
    android.widget.Button titleRightBtn -> d
    cn.robotium.bean.TestRecordBean bean -> e
    android.content.Intent intent -> f
    android.widget.TextView app_label -> g
    android.widget.TextView test_duration -> h
    android.widget.TextView test_refresh_rate -> i
    android.widget.TextView cpu_avg_use -> j
    android.widget.TextView cpu_max_use -> k
    android.widget.TextView memory_avg_use -> l
    android.widget.TextView memory_max_use -> m
    android.widget.TextView net_total_use -> n
    android.widget.TextView test_result_report -> o
    android.widget.RelativeLayout avg_cpu_result -> p
    android.widget.RelativeLayout max_cpu_result -> q
    android.widget.RelativeLayout avg_memory_result -> r
    android.widget.RelativeLayout max_memory_result -> s
    android.widget.RelativeLayout net_total_result -> t
    void onCreate(android.os.Bundle) -> onCreate
    void initTitleLayout() -> a
    void initViewByType(cn.robotium.bean.TestRecordBean) -> a
    void initFixedView(cn.robotium.bean.TestRecordBean) -> b
    void onClick(android.view.View) -> onClick
cn.robotium.ui.HistoryActivity -> cn.robotium.ui.HistoryActivity:
    android.widget.LinearLayout titleLayout -> a
    android.widget.TextView titleTxt -> b
    android.widget.Button titleLeftbtn -> c
    android.widget.Button titleRightBtn -> d
    android.widget.ListView historyListView -> e
    cn.robotium.bean.TestRecordBean bean -> f
    android.content.Intent intent -> g
    java.util.List list -> h
    cn.robotium.adapter.HistoryAdapter adapter -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initTitleLayout() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    cn.robotium.bean.TestRecordBean access$0(cn.robotium.ui.HistoryActivity) -> a
    void access$1(cn.robotium.ui.HistoryActivity,java.util.List) -> a
    java.util.List access$2(cn.robotium.ui.HistoryActivity) -> b
    android.widget.ListView access$3(cn.robotium.ui.HistoryActivity) -> c
    void access$4(cn.robotium.ui.HistoryActivity,cn.robotium.adapter.HistoryAdapter) -> a
    cn.robotium.adapter.HistoryAdapter access$5(cn.robotium.ui.HistoryActivity) -> d
cn.robotium.ui.HistoryActivity$1 -> cn.robotium.ui.b:
    cn.robotium.ui.HistoryActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.robotium.ui.HistoryActivity$2 -> cn.robotium.ui.c:
    cn.robotium.ui.HistoryActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.robotium.ui.MainActivity -> cn.robotium.ui.MainActivity:
    android.widget.LinearLayout titleLayout -> c
    android.widget.RelativeLayout managerLayout -> d
    android.widget.RelativeLayout testLayout -> e
    android.widget.RelativeLayout historyLayout -> f
    android.widget.TextView titleTxt -> g
    android.widget.TextView appManagerTextView -> h
    android.widget.TextView testTypeTextView -> i
    long exitTime -> j
    java.lang.String pkgName -> k
    java.lang.String label -> l
    android.widget.Button startTesting -> m
    long testTime -> n
    long testInterval -> o
    int testType -> p
    cn.robotium.bean.TestRecordBean bean -> q
    android.os.Handler handler -> a
    java.lang.Runnable startThread -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initTitleLayout() -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void receiveFromApp(android.content.Intent) -> b
    void receviceFromTest(android.content.Intent) -> a
    void intent2Choose(java.lang.Class,java.lang.String) -> a
    void showNotification(java.lang.String) -> a
    void startCalc(long,long,int) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.Button access$0(cn.robotium.ui.MainActivity) -> a
    java.lang.String access$1(cn.robotium.ui.MainActivity) -> b
    long access$2(cn.robotium.ui.MainActivity) -> c
    long access$3(cn.robotium.ui.MainActivity) -> d
    int access$4(cn.robotium.ui.MainActivity) -> e
    java.lang.String access$5(cn.robotium.ui.MainActivity) -> f
cn.robotium.ui.MainActivity$1 -> cn.robotium.ui.d:
    cn.robotium.ui.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.robotium.ui.MainActivity$2 -> cn.robotium.ui.e:
    cn.robotium.ui.MainActivity this$0 -> a
    void run() -> run
cn.robotium.ui.MemoryParsActivity -> cn.robotium.ui.MemoryParsActivity:
    android.widget.LinearLayout titleLayout -> a
    android.widget.TextView titleTxt -> b
    android.widget.Button titleLeftbtn -> c
    android.widget.Button titleRightBtn -> d
    android.widget.RelativeLayout testTimeLayout -> e
    android.widget.RelativeLayout intervalTimeLayout -> f
    android.widget.EditText testTimeEditText -> g
    android.widget.EditText intervalTimeEditText -> h
    java.lang.String preMenu -> i
    long testTime -> j
    long testInterval -> k
    cn.robotium.bean.TestRecordBean bean -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void init() -> a
    void onClick(android.view.View) -> onClick
    void onSave(cn.robotium.bean.TestRecordBean) -> a
    void setIntent(android.content.Intent,boolean,cn.robotium.bean.TestRecordBean) -> a
cn.robotium.ui.MonkeyParsActivity -> cn.robotium.ui.MonkeyParsActivity:
    android.widget.LinearLayout titleLayout -> a
    android.widget.TextView titleTxt -> b
    android.widget.Button titleLeftbtn -> c
    android.widget.Button titleRightBtn -> d
    android.widget.RelativeLayout monekyLayout -> e
    android.widget.EditText testBoutsEditText -> f
    android.widget.EditText testThrottleEditeText -> g
    android.widget.RelativeLayout ignoreCrashesLayout -> h
    android.widget.RelativeLayout ignoreTimeOutLayout -> i
    cn.robotium.bean.TestRecordBean bean -> j
    android.widget.CheckBox ignoreCrhChk -> k
    android.widget.CheckBox ignoreTimeoutChk -> l
    java.lang.String isIgnoreCrhChk -> m
    java.lang.String isIgnoreTimeoutChk -> n
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void initData() -> b
    void setListener() -> c
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void onSave(cn.robotium.bean.TestRecordBean) -> a
cn.robotium.ui.ResultInfoActivity -> cn.robotium.ui.ResultInfoActivity:
    android.widget.LinearLayout titleLayout -> c
    android.widget.TextView titleTxt -> d
    android.widget.Button titleLeftbtn -> e
    android.widget.Button titleRightBtn -> f
    android.content.Intent intent -> g
    cn.robotium.bean.TestRecordBean bean -> h
    java.util.List list -> i
    android.widget.ListView reinfo_listView -> j
    cn.robotium.adapter.ResultInfoAdapter adapter -> k
    java.lang.String path -> l
    java.lang.String data -> m
    android.app.ProgressDialog dialogsss_export -> n
    android.os.Handler handler -> a
    java.lang.Runnable export -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initTitleLayout() -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void saveToXLS() -> a
    android.app.ProgressDialog access$0(cn.robotium.ui.ResultInfoActivity) -> a
    cn.robotium.bean.TestRecordBean access$1(cn.robotium.ui.ResultInfoActivity) -> b
    void access$2(cn.robotium.ui.ResultInfoActivity,java.util.List) -> a
    java.util.List access$3(cn.robotium.ui.ResultInfoActivity) -> c
    void access$4(cn.robotium.ui.ResultInfoActivity,cn.robotium.adapter.ResultInfoAdapter) -> a
    android.widget.ListView access$5(cn.robotium.ui.ResultInfoActivity) -> d
    cn.robotium.adapter.ResultInfoAdapter access$6(cn.robotium.ui.ResultInfoActivity) -> e
cn.robotium.ui.ResultInfoActivity$1 -> cn.robotium.ui.f:
    cn.robotium.ui.ResultInfoActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.robotium.ui.ResultInfoActivity$2 -> cn.robotium.ui.g:
    cn.robotium.ui.ResultInfoActivity this$0 -> a
    void run() -> run
cn.robotium.ui.ResultInfoActivity$3 -> cn.robotium.ui.h:
    cn.robotium.ui.ResultInfoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.robotium.ui.ResultInfoActivity$4 -> cn.robotium.ui.i:
    cn.robotium.ui.ResultInfoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.robotium.ui.TestTypeActivity -> cn.robotium.ui.TestTypeActivity:
    android.widget.TextView titleTxt -> a
    android.widget.TextView memoryTxt -> b
    android.widget.TextView cpuTxt -> c
    android.widget.TextView netTxt -> d
    android.widget.TextView monkeyTxt -> e
    android.widget.Button titleLeftbtn -> f
    android.widget.Button titleRightBtn -> g
    android.widget.RelativeLayout memoryLayout -> h
    android.widget.RelativeLayout cpuLayout -> i
    android.widget.RelativeLayout netLayout -> j
    android.widget.RelativeLayout monkeyLayout -> k
    long testTime -> l
    long intervalTime -> m
    int testType -> n
    java.lang.String memoryPars -> o
    java.lang.String cpuPars -> p
    java.lang.String netPars -> q
    java.lang.String monkeyPars -> r
    java.lang.String test_bouts -> s
    cn.robotium.bean.TestRecordBean bean -> t
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> b
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void receiver(cn.robotium.bean.TestRecordBean) -> a
    void setTextVaule() -> a
cn.robotium.utils.AndTimeUtils -> cn.robotium.d.a:
    java.lang.String getCurrentTimeToString() -> a
    java.lang.String getCurrentTimeForFile() -> b
cn.robotium.utils.FileUtil -> cn.robotium.d.b:
    void FileExist() -> a
    void exportXLS(java.util.List,java.lang.String,android.content.Context) -> a
cn.robotium.utils.Sleeper -> cn.robotium.d.c:
    int PAUSE -> a
    int MINIPAUSE -> b
    void sleep(int) -> a
cn.robotium.utils.VerifyUtil -> cn.robotium.d.d:
    boolean isNullEditText(android.widget.EditText,android.widget.EditText,android.content.Context,java.lang.String) -> a
jxl.BooleanCell -> jxl.BooleanCell:
    boolean getValue() -> getValue
jxl.BooleanFormulaCell -> jxl.BooleanFormulaCell:
jxl.Cell -> jxl.Cell:
    int getRow() -> getRow
    int getColumn() -> getColumn
    jxl.CellType getType() -> getType
    boolean isHidden() -> isHidden
    java.lang.String getContents() -> getContents
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
jxl.CellFeatures -> jxl.CellFeatures:
    java.lang.String getComment() -> getComment
    java.lang.String getDataValidationList() -> getDataValidationList
    jxl.Range getSharedDataValidationRange() -> getSharedDataValidationRange
jxl.CellFormat -> jxl.CellFormat:
jxl.CellReferenceHelper -> jxl.CellReferenceHelper:
    void getCellReference(int,int,java.lang.StringBuffer) -> getCellReference
    void getCellReference(int,boolean,int,boolean,java.lang.StringBuffer) -> getCellReference
    java.lang.String getCellReference(int,int) -> getCellReference
    int getColumn(java.lang.String) -> getColumn
    java.lang.String getColumnReference(int) -> getColumnReference
    int getRow(java.lang.String) -> getRow
    boolean isColumnRelative(java.lang.String) -> isColumnRelative
    boolean isRowRelative(java.lang.String) -> isRowRelative
    void getCellReference(int,int,int,jxl.Workbook,java.lang.StringBuffer) -> getCellReference
    void getCellReference(int,int,int,jxl.write.WritableWorkbook,java.lang.StringBuffer) -> getCellReference
    void getCellReference(int,int,boolean,int,boolean,jxl.Workbook,java.lang.StringBuffer) -> getCellReference
    java.lang.String getCellReference(int,int,int,jxl.Workbook) -> getCellReference
    java.lang.String getCellReference(int,int,int,jxl.write.WritableWorkbook) -> getCellReference
    java.lang.String getSheet(java.lang.String) -> getSheet
    java.lang.String getCellReference(jxl.Cell) -> getCellReference
    void getCellReference(jxl.Cell,java.lang.StringBuffer) -> getCellReference
jxl.CellType -> jxl.CellType:
    java.lang.String description -> description
    jxl.CellType EMPTY -> EMPTY
    jxl.CellType LABEL -> LABEL
    jxl.CellType NUMBER -> NUMBER
    jxl.CellType BOOLEAN -> BOOLEAN
    jxl.CellType ERROR -> ERROR
    jxl.CellType NUMBER_FORMULA -> NUMBER_FORMULA
    jxl.CellType DATE_FORMULA -> DATE_FORMULA
    jxl.CellType STRING_FORMULA -> STRING_FORMULA
    jxl.CellType BOOLEAN_FORMULA -> BOOLEAN_FORMULA
    jxl.CellType FORMULA_ERROR -> FORMULA_ERROR
    jxl.CellType DATE -> DATE
    java.lang.String toString() -> toString
jxl.CellView -> jxl.CellView:
    int dimension -> dimension
    int size -> size
    boolean depUsed -> depUsed
    boolean hidden -> hidden
    jxl.format.CellFormat format -> format
    boolean autosize -> autosize
    void setHidden(boolean) -> setHidden
    boolean isHidden() -> isHidden
    void setDimension(int) -> setDimension
    void setSize(int) -> setSize
    int getDimension() -> getDimension
    int getSize() -> getSize
    void setFormat(jxl.format.CellFormat) -> setFormat
    jxl.format.CellFormat getFormat() -> getFormat
    boolean depUsed() -> depUsed
    void setAutosize(boolean) -> setAutosize
    boolean isAutosize() -> isAutosize
jxl.DateCell -> jxl.DateCell:
    java.util.Date getDate() -> getDate
    boolean isTime() -> isTime
    java.text.DateFormat getDateFormat() -> getDateFormat
jxl.DateFormulaCell -> jxl.DateFormulaCell:
jxl.ErrorCell -> jxl.ErrorCell:
    int getErrorCode() -> getErrorCode
jxl.ErrorFormulaCell -> jxl.ErrorFormulaCell:
jxl.FormulaCell -> jxl.FormulaCell:
    java.lang.String getFormula() -> getFormula
jxl.HeaderFooter -> jxl.HeaderFooter:
    java.lang.String toString() -> toString
    jxl.HeaderFooter$Contents getRight() -> getRight
    jxl.HeaderFooter$Contents getCentre() -> getCentre
    jxl.HeaderFooter$Contents getLeft() -> getLeft
    void clear() -> clear
    jxl.biff.HeaderFooter$Contents createContents() -> createContents
    jxl.biff.HeaderFooter$Contents createContents(java.lang.String) -> createContents
    jxl.biff.HeaderFooter$Contents createContents(jxl.biff.HeaderFooter$Contents) -> createContents
jxl.HeaderFooter$Contents -> jxl.HeaderFooter$Contents:
    void append(java.lang.String) -> append
    void toggleBold() -> toggleBold
    void toggleUnderline() -> toggleUnderline
    void toggleItalics() -> toggleItalics
    void toggleStrikethrough() -> toggleStrikethrough
    void toggleDoubleUnderline() -> toggleDoubleUnderline
    void toggleSuperScript() -> toggleSuperScript
    void toggleSubScript() -> toggleSubScript
    void toggleOutline() -> toggleOutline
    void toggleShadow() -> toggleShadow
    void setFontName(java.lang.String) -> setFontName
    boolean setFontSize(int) -> setFontSize
    void appendPageNumber() -> appendPageNumber
    void appendTotalPages() -> appendTotalPages
    void appendDate() -> appendDate
    void appendTime() -> appendTime
    void appendWorkbookName() -> appendWorkbookName
    void appendWorkSheetName() -> appendWorkSheetName
    void clear() -> clear
    boolean empty() -> empty
jxl.Hyperlink -> jxl.Hyperlink:
    int getRow() -> getRow
    int getColumn() -> getColumn
    jxl.Range getRange() -> getRange
    boolean isFile() -> isFile
    boolean isURL() -> isURL
    boolean isLocation() -> isLocation
    int getLastRow() -> getLastRow
    int getLastColumn() -> getLastColumn
    java.net.URL getURL() -> getURL
    java.io.File getFile() -> getFile
jxl.Image -> jxl.Image:
    double getColumn() -> getColumn
    double getRow() -> getRow
    double getWidth() -> getWidth
    double getHeight() -> getHeight
    java.io.File getImageFile() -> getImageFile
    byte[] getImageData() -> getImageData
    double getWidth(jxl.common.LengthUnit) -> getWidth
    double getHeight(jxl.common.LengthUnit) -> getHeight
    int getImageWidth() -> getImageWidth
    int getImageHeight() -> getImageHeight
    double getHorizontalResolution(jxl.common.LengthUnit) -> getHorizontalResolution
    double getVerticalResolution(jxl.common.LengthUnit) -> getVerticalResolution
jxl.JXLException -> jxl.JXLException:
jxl.LabelCell -> jxl.LabelCell:
    java.lang.String getString() -> getString
jxl.NumberCell -> jxl.NumberCell:
    double getValue() -> getValue
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.NumberFormulaCell -> jxl.NumberFormulaCell:
jxl.Range -> jxl.Range:
    jxl.Cell getTopLeft() -> getTopLeft
    jxl.Cell getBottomRight() -> getBottomRight
    int getFirstSheetIndex() -> getFirstSheetIndex
    int getLastSheetIndex() -> getLastSheetIndex
jxl.Sheet -> jxl.Sheet:
    jxl.Cell getCell(int,int) -> getCell
    jxl.Cell getCell(java.lang.String) -> getCell
    int getRows() -> getRows
    int getColumns() -> getColumns
    jxl.Cell[] getRow(int) -> getRow
    jxl.Cell[] getColumn(int) -> getColumn
    java.lang.String getName() -> getName
    boolean isHidden() -> isHidden
    boolean isProtected() -> isProtected
    jxl.Cell findCell(java.lang.String) -> findCell
    jxl.Cell findCell(java.lang.String,int,int,int,int,boolean) -> findCell
    jxl.Cell findCell(java.util.regex.Pattern,int,int,int,int,boolean) -> findCell
    jxl.LabelCell findLabelCell(java.lang.String) -> findLabelCell
    jxl.Hyperlink[] getHyperlinks() -> getHyperlinks
    jxl.Range[] getMergedCells() -> getMergedCells
    jxl.SheetSettings getSettings() -> getSettings
    jxl.format.CellFormat getColumnFormat(int) -> getColumnFormat
    int getColumnWidth(int) -> getColumnWidth
    jxl.CellView getColumnView(int) -> getColumnView
    int getRowHeight(int) -> getRowHeight
    jxl.CellView getRowView(int) -> getRowView
    int getNumberOfImages() -> getNumberOfImages
    jxl.Image getDrawing(int) -> getDrawing
    int[] getRowPageBreaks() -> getRowPageBreaks
    int[] getColumnPageBreaks() -> getColumnPageBreaks
jxl.SheetSettings -> jxl.SheetSettings:
    jxl.format.PageOrientation orientation -> orientation
    jxl.format.PageOrder pageOrder -> pageOrder
    jxl.format.PaperSize paperSize -> paperSize
    boolean sheetProtected -> sheetProtected
    boolean hidden -> hidden
    boolean selected -> selected
    jxl.HeaderFooter header -> header
    double headerMargin -> headerMargin
    jxl.HeaderFooter footer -> footer
    double footerMargin -> footerMargin
    int scaleFactor -> scaleFactor
    int zoomFactor -> zoomFactor
    int pageStart -> pageStart
    int fitWidth -> fitWidth
    int fitHeight -> fitHeight
    int horizontalPrintResolution -> horizontalPrintResolution
    int verticalPrintResolution -> verticalPrintResolution
    double leftMargin -> leftMargin
    double rightMargin -> rightMargin
    double topMargin -> topMargin
    double bottomMargin -> bottomMargin
    boolean fitToPages -> fitToPages
    boolean showGridLines -> showGridLines
    boolean printGridLines -> printGridLines
    boolean printHeaders -> printHeaders
    boolean pageBreakPreviewMode -> pageBreakPreviewMode
    boolean displayZeroValues -> displayZeroValues
    java.lang.String password -> password
    int passwordHash -> passwordHash
    int defaultColumnWidth -> defaultColumnWidth
    int defaultRowHeight -> defaultRowHeight
    int horizontalFreeze -> horizontalFreeze
    int verticalFreeze -> verticalFreeze
    boolean verticalCentre -> verticalCentre
    boolean horizontalCentre -> horizontalCentre
    int copies -> copies
    boolean automaticFormulaCalculation -> automaticFormulaCalculation
    boolean recalculateFormulasBeforeSave -> recalculateFormulasBeforeSave
    int pageBreakPreviewMagnification -> pageBreakPreviewMagnification
    int normalMagnification -> normalMagnification
    jxl.Range printArea -> printArea
    jxl.Range printTitlesRow -> printTitlesRow
    jxl.Range printTitlesCol -> printTitlesCol
    jxl.Sheet sheet -> sheet
    jxl.format.PageOrientation DEFAULT_ORIENTATION -> DEFAULT_ORIENTATION
    jxl.format.PageOrder DEFAULT_ORDER -> DEFAULT_ORDER
    jxl.format.PaperSize DEFAULT_PAPER_SIZE -> DEFAULT_PAPER_SIZE
    double DEFAULT_HEADER_MARGIN -> DEFAULT_HEADER_MARGIN
    double DEFAULT_FOOTER_MARGIN -> DEFAULT_FOOTER_MARGIN
    int DEFAULT_PRINT_RESOLUTION -> DEFAULT_PRINT_RESOLUTION
    double DEFAULT_WIDTH_MARGIN -> DEFAULT_WIDTH_MARGIN
    double DEFAULT_HEIGHT_MARGIN -> DEFAULT_HEIGHT_MARGIN
    int DEFAULT_DEFAULT_COLUMN_WIDTH -> DEFAULT_DEFAULT_COLUMN_WIDTH
    int DEFAULT_ZOOM_FACTOR -> DEFAULT_ZOOM_FACTOR
    int DEFAULT_NORMAL_MAGNIFICATION -> DEFAULT_NORMAL_MAGNIFICATION
    int DEFAULT_PAGE_BREAK_PREVIEW_MAGNIFICATION -> DEFAULT_PAGE_BREAK_PREVIEW_MAGNIFICATION
    int DEFAULT_DEFAULT_ROW_HEIGHT -> DEFAULT_DEFAULT_ROW_HEIGHT
    void setOrientation(jxl.format.PageOrientation) -> setOrientation
    jxl.format.PageOrientation getOrientation() -> getOrientation
    jxl.format.PageOrder getPageOrder() -> getPageOrder
    void setPageOrder(jxl.format.PageOrder) -> setPageOrder
    void setPaperSize(jxl.format.PaperSize) -> setPaperSize
    jxl.format.PaperSize getPaperSize() -> getPaperSize
    boolean isProtected() -> isProtected
    void setProtected(boolean) -> setProtected
    void setHeaderMargin(double) -> setHeaderMargin
    double getHeaderMargin() -> getHeaderMargin
    void setFooterMargin(double) -> setFooterMargin
    double getFooterMargin() -> getFooterMargin
    void setHidden(boolean) -> setHidden
    boolean isHidden() -> isHidden
    void setSelected() -> setSelected
    void setSelected(boolean) -> setSelected
    boolean isSelected() -> isSelected
    void setScaleFactor(int) -> setScaleFactor
    int getScaleFactor() -> getScaleFactor
    void setPageStart(int) -> setPageStart
    int getPageStart() -> getPageStart
    void setFitWidth(int) -> setFitWidth
    int getFitWidth() -> getFitWidth
    void setFitHeight(int) -> setFitHeight
    int getFitHeight() -> getFitHeight
    void setHorizontalPrintResolution(int) -> setHorizontalPrintResolution
    int getHorizontalPrintResolution() -> getHorizontalPrintResolution
    void setVerticalPrintResolution(int) -> setVerticalPrintResolution
    int getVerticalPrintResolution() -> getVerticalPrintResolution
    void setRightMargin(double) -> setRightMargin
    double getRightMargin() -> getRightMargin
    void setLeftMargin(double) -> setLeftMargin
    double getLeftMargin() -> getLeftMargin
    void setTopMargin(double) -> setTopMargin
    double getTopMargin() -> getTopMargin
    void setBottomMargin(double) -> setBottomMargin
    double getBottomMargin() -> getBottomMargin
    double getDefaultWidthMargin() -> getDefaultWidthMargin
    double getDefaultHeightMargin() -> getDefaultHeightMargin
    boolean getFitToPages() -> getFitToPages
    void setFitToPages(boolean) -> setFitToPages
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    int getPasswordHash() -> getPasswordHash
    void setPasswordHash(int) -> setPasswordHash
    int getDefaultColumnWidth() -> getDefaultColumnWidth
    void setDefaultColumnWidth(int) -> setDefaultColumnWidth
    int getDefaultRowHeight() -> getDefaultRowHeight
    void setDefaultRowHeight(int) -> setDefaultRowHeight
    int getZoomFactor() -> getZoomFactor
    void setZoomFactor(int) -> setZoomFactor
    int getPageBreakPreviewMagnification() -> getPageBreakPreviewMagnification
    void setPageBreakPreviewMagnification(int) -> setPageBreakPreviewMagnification
    int getNormalMagnification() -> getNormalMagnification
    void setNormalMagnification(int) -> setNormalMagnification
    boolean getDisplayZeroValues() -> getDisplayZeroValues
    void setDisplayZeroValues(boolean) -> setDisplayZeroValues
    boolean getShowGridLines() -> getShowGridLines
    void setShowGridLines(boolean) -> setShowGridLines
    boolean getPageBreakPreviewMode() -> getPageBreakPreviewMode
    void setPageBreakPreviewMode(boolean) -> setPageBreakPreviewMode
    boolean getPrintGridLines() -> getPrintGridLines
    void setPrintGridLines(boolean) -> setPrintGridLines
    boolean getPrintHeaders() -> getPrintHeaders
    void setPrintHeaders(boolean) -> setPrintHeaders
    int getHorizontalFreeze() -> getHorizontalFreeze
    void setHorizontalFreeze(int) -> setHorizontalFreeze
    int getVerticalFreeze() -> getVerticalFreeze
    void setVerticalFreeze(int) -> setVerticalFreeze
    void setCopies(int) -> setCopies
    int getCopies() -> getCopies
    jxl.HeaderFooter getHeader() -> getHeader
    void setHeader(jxl.HeaderFooter) -> setHeader
    void setFooter(jxl.HeaderFooter) -> setFooter
    jxl.HeaderFooter getFooter() -> getFooter
    boolean isHorizontalCentre() -> isHorizontalCentre
    void setHorizontalCentre(boolean) -> setHorizontalCentre
    boolean isVerticalCentre() -> isVerticalCentre
    void setVerticalCentre(boolean) -> setVerticalCentre
    void setAutomaticFormulaCalculation(boolean) -> setAutomaticFormulaCalculation
    boolean getAutomaticFormulaCalculation() -> getAutomaticFormulaCalculation
    void setRecalculateFormulasBeforeSave(boolean) -> setRecalculateFormulasBeforeSave
    boolean getRecalculateFormulasBeforeSave() -> getRecalculateFormulasBeforeSave
    void setPrintArea(int,int,int,int) -> setPrintArea
    jxl.Range getPrintArea() -> getPrintArea
    void setPrintTitles(int,int,int,int) -> setPrintTitles
    void setPrintTitlesRow(int,int) -> setPrintTitlesRow
    void setPrintTitlesCol(int,int) -> setPrintTitlesCol
    jxl.Range getPrintTitlesRow() -> getPrintTitlesRow
    jxl.Range getPrintTitlesCol() -> getPrintTitlesCol
jxl.StringFormulaCell -> jxl.StringFormulaCell:
jxl.Workbook -> jxl.Workbook:
    java.lang.String VERSION -> VERSION
    jxl.Sheet[] getSheets() -> getSheets
    java.lang.String[] getSheetNames() -> getSheetNames
    jxl.Sheet getSheet(int) -> getSheet
    jxl.Sheet getSheet(java.lang.String) -> getSheet
    java.lang.String getVersion() -> getVersion
    int getNumberOfSheets() -> getNumberOfSheets
    jxl.Cell findCellByName(java.lang.String) -> findCellByName
    jxl.Cell getCell(java.lang.String) -> getCell
    jxl.Range[] findByName(java.lang.String) -> findByName
    java.lang.String[] getRangeNames() -> getRangeNames
    boolean isProtected() -> isProtected
    void parse() -> parse
    void close() -> close
    jxl.Workbook getWorkbook(java.io.File) -> getWorkbook
    jxl.Workbook getWorkbook(java.io.File,jxl.WorkbookSettings) -> getWorkbook
    jxl.Workbook getWorkbook(java.io.InputStream) -> getWorkbook
    jxl.Workbook getWorkbook(java.io.InputStream,jxl.WorkbookSettings) -> getWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.File) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.WorkbookSettings) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.Workbook) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.Workbook,jxl.WorkbookSettings) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.OutputStream,jxl.Workbook) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.OutputStream,jxl.Workbook,jxl.WorkbookSettings) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.OutputStream) -> createWorkbook
    jxl.write.WritableWorkbook createWorkbook(java.io.OutputStream,jxl.WorkbookSettings) -> createWorkbook
jxl.WorkbookSettings -> jxl.WorkbookSettings:
    jxl.common.Logger logger -> logger
    int initialFileSize -> initialFileSize
    int arrayGrowSize -> arrayGrowSize
    boolean drawingsDisabled -> drawingsDisabled
    boolean namesDisabled -> namesDisabled
    boolean formulaReferenceAdjustDisabled -> formulaReferenceAdjustDisabled
    boolean gcDisabled -> gcDisabled
    boolean rationalizationDisabled -> rationalizationDisabled
    boolean mergedCellCheckingDisabled -> mergedCellCheckingDisabled
    boolean propertySetsDisabled -> propertySetsDisabled
    boolean cellValidationDisabled -> cellValidationDisabled
    boolean ignoreBlankCells -> ignoreBlankCells
    boolean autoFilterDisabled -> autoFilterDisabled
    boolean useTemporaryFileDuringWrite -> useTemporaryFileDuringWrite
    java.io.File temporaryFileDuringWriteDirectory -> temporaryFileDuringWriteDirectory
    java.util.Locale locale -> locale
    jxl.biff.formula.FunctionNames functionNames -> functionNames
    java.lang.String encoding -> encoding
    int characterSet -> characterSet
    java.lang.String excelDisplayLanguage -> excelDisplayLanguage
    java.lang.String excelRegionalSettings -> excelRegionalSettings
    java.util.HashMap localeFunctionNames -> localeFunctionNames
    boolean refreshAll -> refreshAll
    boolean template -> template
    boolean excel9file -> excel9file
    boolean windowProtected -> windowProtected
    java.lang.String writeAccess -> writeAccess
    int hideobj -> hideobj
    int HIDEOBJ_HIDE_ALL -> HIDEOBJ_HIDE_ALL
    int HIDEOBJ_SHOW_PLACEHOLDERS -> HIDEOBJ_SHOW_PLACEHOLDERS
    int HIDEOBJ_SHOW_ALL -> HIDEOBJ_SHOW_ALL
    int DEFAULT_INITIAL_FILE_SIZE -> DEFAULT_INITIAL_FILE_SIZE
    int DEFAULT_ARRAY_GROW_SIZE -> DEFAULT_ARRAY_GROW_SIZE
    void setArrayGrowSize(int) -> setArrayGrowSize
    int getArrayGrowSize() -> getArrayGrowSize
    void setInitialFileSize(int) -> setInitialFileSize
    int getInitialFileSize() -> getInitialFileSize
    boolean getDrawingsDisabled() -> getDrawingsDisabled
    boolean getGCDisabled() -> getGCDisabled
    boolean getNamesDisabled() -> getNamesDisabled
    void setNamesDisabled(boolean) -> setNamesDisabled
    void setDrawingsDisabled(boolean) -> setDrawingsDisabled
    void setRationalization(boolean) -> setRationalization
    boolean getRationalizationDisabled() -> getRationalizationDisabled
    boolean getMergedCellCheckingDisabled() -> getMergedCellCheckingDisabled
    void setMergedCellChecking(boolean) -> setMergedCellChecking
    void setPropertySets(boolean) -> setPropertySets
    boolean getPropertySetsDisabled() -> getPropertySetsDisabled
    void setSuppressWarnings(boolean) -> setSuppressWarnings
    boolean getFormulaAdjust() -> getFormulaAdjust
    void setFormulaAdjust(boolean) -> setFormulaAdjust
    void setLocale(java.util.Locale) -> setLocale
    java.util.Locale getLocale() -> getLocale
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    jxl.biff.formula.FunctionNames getFunctionNames() -> getFunctionNames
    int getCharacterSet() -> getCharacterSet
    void setCharacterSet(int) -> setCharacterSet
    void setGCDisabled(boolean) -> setGCDisabled
    void setIgnoreBlanks(boolean) -> setIgnoreBlanks
    boolean getIgnoreBlanks() -> getIgnoreBlanks
    void setCellValidationDisabled(boolean) -> setCellValidationDisabled
    boolean getCellValidationDisabled() -> getCellValidationDisabled
    java.lang.String getExcelDisplayLanguage() -> getExcelDisplayLanguage
    java.lang.String getExcelRegionalSettings() -> getExcelRegionalSettings
    void setExcelDisplayLanguage(java.lang.String) -> setExcelDisplayLanguage
    void setExcelRegionalSettings(java.lang.String) -> setExcelRegionalSettings
    boolean getAutoFilterDisabled() -> getAutoFilterDisabled
    void setAutoFilterDisabled(boolean) -> setAutoFilterDisabled
    boolean getUseTemporaryFileDuringWrite() -> getUseTemporaryFileDuringWrite
    void setUseTemporaryFileDuringWrite(boolean) -> setUseTemporaryFileDuringWrite
    void setTemporaryFileDuringWriteDirectory(java.io.File) -> setTemporaryFileDuringWriteDirectory
    java.io.File getTemporaryFileDuringWriteDirectory() -> getTemporaryFileDuringWriteDirectory
    void setRefreshAll(boolean) -> setRefreshAll
    boolean getRefreshAll() -> getRefreshAll
    boolean getTemplate() -> getTemplate
    void setTemplate(boolean) -> setTemplate
    boolean getExcel9File() -> getExcel9File
    void setExcel9File(boolean) -> setExcel9File
    boolean getWindowProtected() -> getWindowProtected
    void setWindowProtected(boolean) -> setWindowProtected
    int getHideobj() -> getHideobj
    void setHideobj(int) -> setHideobj
    java.lang.String getWriteAccess() -> getWriteAccess
    void setWriteAccess(java.lang.String) -> setWriteAccess
jxl.biff.AutoFilter -> jxl.biff.AutoFilter:
    jxl.biff.FilterModeRecord filterMode -> filterMode
    jxl.biff.AutoFilterInfoRecord autoFilterInfo -> autoFilterInfo
    jxl.biff.AutoFilterRecord autoFilter -> autoFilter
    void add(jxl.biff.AutoFilterRecord) -> add
    void write(jxl.write.biff.File) -> write
jxl.biff.AutoFilterInfoRecord -> jxl.biff.AutoFilterInfoRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.AutoFilterRecord -> jxl.biff.AutoFilterRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.BaseCellFeatures -> jxl.biff.BaseCellFeatures:
    jxl.common.Logger logger -> logger
    java.lang.String comment -> comment
    double commentWidth -> commentWidth
    double commentHeight -> commentHeight
    jxl.biff.drawing.Comment commentDrawing -> commentDrawing
    jxl.biff.drawing.ComboBox comboBox -> comboBox
    jxl.biff.DataValiditySettingsRecord validationSettings -> validationSettings
    jxl.biff.DVParser dvParser -> dvParser
    boolean dropDown -> dropDown
    boolean dataValidation -> dataValidation
    jxl.write.biff.CellValue writableCell -> writableCell
    double defaultCommentWidth -> defaultCommentWidth
    double defaultCommentHeight -> defaultCommentHeight
    jxl.biff.BaseCellFeatures$ValidationCondition BETWEEN -> BETWEEN
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_BETWEEN -> NOT_BETWEEN
    jxl.biff.BaseCellFeatures$ValidationCondition EQUAL -> EQUAL
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_EQUAL -> NOT_EQUAL
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_THAN -> GREATER_THAN
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_THAN -> LESS_THAN
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_EQUAL -> GREATER_EQUAL
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_EQUAL -> LESS_EQUAL
    java.lang.String getComment() -> getComment
    double getCommentWidth() -> getCommentWidth
    double getCommentHeight() -> getCommentHeight
    void setWritableCell(jxl.write.biff.CellValue) -> setWritableCell
    void setReadComment(java.lang.String,double,double) -> setReadComment
    void setValidationSettings(jxl.biff.DataValiditySettingsRecord) -> setValidationSettings
    void setComment(java.lang.String) -> setComment
    void setComment(java.lang.String,double,double) -> setComment
    void removeComment() -> removeComment
    void removeDataValidation() -> removeDataValidation
    void removeSharedDataValidation() -> removeSharedDataValidation
    void setCommentDrawing(jxl.biff.drawing.Comment) -> setCommentDrawing
    jxl.biff.drawing.Comment getCommentDrawing() -> getCommentDrawing
    java.lang.String getDataValidationList() -> getDataValidationList
    void setDataValidationList(java.util.Collection) -> setDataValidationList
    void setDataValidationRange(int,int,int,int) -> setDataValidationRange
    void setDataValidationRange(java.lang.String) -> setDataValidationRange
    void setNumberValidation(double,jxl.biff.BaseCellFeatures$ValidationCondition) -> setNumberValidation
    void setNumberValidation(double,double,jxl.biff.BaseCellFeatures$ValidationCondition) -> setNumberValidation
    boolean hasDataValidation() -> hasDataValidation
    void clearValidationSettings() -> clearValidationSettings
    boolean hasDropDown() -> hasDropDown
    void setComboBox(jxl.biff.drawing.ComboBox) -> setComboBox
    jxl.biff.DVParser getDVParser() -> getDVParser
    void shareDataValidation(jxl.biff.BaseCellFeatures) -> shareDataValidation
    jxl.Range getSharedDataValidationRange() -> getSharedDataValidationRange
jxl.biff.BaseCellFeatures$ValidationCondition -> jxl.biff.BaseCellFeatures$ValidationCondition:
    jxl.biff.DVParser$Condition condition -> condition
    jxl.biff.BaseCellFeatures$ValidationCondition[] types -> types
    jxl.biff.DVParser$Condition getCondition() -> getCondition
jxl.biff.BaseCompoundFile -> jxl.biff.BaseCompoundFile:
    jxl.common.Logger logger -> logger
    byte[] IDENTIFIER -> IDENTIFIER
    int NUM_BIG_BLOCK_DEPOT_BLOCKS_POS -> NUM_BIG_BLOCK_DEPOT_BLOCKS_POS
    int SMALL_BLOCK_DEPOT_BLOCK_POS -> SMALL_BLOCK_DEPOT_BLOCK_POS
    int NUM_SMALL_BLOCK_DEPOT_BLOCKS_POS -> NUM_SMALL_BLOCK_DEPOT_BLOCKS_POS
    int ROOT_START_BLOCK_POS -> ROOT_START_BLOCK_POS
    int BIG_BLOCK_SIZE -> BIG_BLOCK_SIZE
    int SMALL_BLOCK_SIZE -> SMALL_BLOCK_SIZE
    int EXTENSION_BLOCK_POS -> EXTENSION_BLOCK_POS
    int NUM_EXTENSION_BLOCK_POS -> NUM_EXTENSION_BLOCK_POS
    int PROPERTY_STORAGE_BLOCK_SIZE -> PROPERTY_STORAGE_BLOCK_SIZE
    int BIG_BLOCK_DEPOT_BLOCKS_POS -> BIG_BLOCK_DEPOT_BLOCKS_POS
    int SMALL_BLOCK_THRESHOLD -> SMALL_BLOCK_THRESHOLD
    int SIZE_OF_NAME_POS -> SIZE_OF_NAME_POS
    int TYPE_POS -> TYPE_POS
    int COLOUR_POS -> COLOUR_POS
    int PREVIOUS_POS -> PREVIOUS_POS
    int NEXT_POS -> NEXT_POS
    int CHILD_POS -> CHILD_POS
    int START_BLOCK_POS -> START_BLOCK_POS
    int SIZE_POS -> SIZE_POS
    java.lang.String ROOT_ENTRY_NAME -> ROOT_ENTRY_NAME
    java.lang.String WORKBOOK_NAME -> WORKBOOK_NAME
    java.lang.String SUMMARY_INFORMATION_NAME -> SUMMARY_INFORMATION_NAME
    java.lang.String DOCUMENT_SUMMARY_INFORMATION_NAME -> DOCUMENT_SUMMARY_INFORMATION_NAME
    java.lang.String COMP_OBJ_NAME -> COMP_OBJ_NAME
    java.lang.String[] STANDARD_PROPERTY_SETS -> STANDARD_PROPERTY_SETS
    int NONE_PS_TYPE -> NONE_PS_TYPE
    int DIRECTORY_PS_TYPE -> DIRECTORY_PS_TYPE
    int FILE_PS_TYPE -> FILE_PS_TYPE
    int ROOT_ENTRY_PS_TYPE -> ROOT_ENTRY_PS_TYPE
    jxl.common.Logger access$000() -> access$000
jxl.biff.BaseCompoundFile$PropertyStorage -> jxl.biff.BaseCompoundFile$PropertyStorage:
    java.lang.String name -> name
    int type -> type
    int colour -> colour
    int startBlock -> startBlock
    int size -> size
    int previous -> previous
    int next -> next
    int child -> child
    byte[] data -> data
    jxl.biff.BaseCompoundFile this$0 -> this$0
    void setType(int) -> setType
    void setStartBlock(int) -> setStartBlock
    void setSize(int) -> setSize
    void setPrevious(int) -> setPrevious
    void setNext(int) -> setNext
    void setChild(int) -> setChild
    void setColour(int) -> setColour
jxl.biff.BuiltInFormat -> jxl.biff.BuiltInFormat:
    java.lang.String formatString -> formatString
    int formatIndex -> formatIndex
    jxl.biff.BuiltInFormat[] builtIns -> builtIns
    java.lang.String getFormatString() -> getFormatString
    int getFormatIndex() -> getFormatIndex
    boolean isInitialized() -> isInitialized
    void initialize(int) -> initialize
    boolean isBuiltIn() -> isBuiltIn
    boolean equals(java.lang.Object) -> equals
jxl.biff.BuiltInName -> jxl.biff.BuiltInName:
    java.lang.String name -> name
    int value -> value
    jxl.biff.BuiltInName[] builtInNames -> builtInNames
    jxl.biff.BuiltInName CONSOLIDATE_AREA -> CONSOLIDATE_AREA
    jxl.biff.BuiltInName AUTO_OPEN -> AUTO_OPEN
    jxl.biff.BuiltInName AUTO_CLOSE -> AUTO_CLOSE
    jxl.biff.BuiltInName EXTRACT -> EXTRACT
    jxl.biff.BuiltInName DATABASE -> DATABASE
    jxl.biff.BuiltInName CRITERIA -> CRITERIA
    jxl.biff.BuiltInName PRINT_AREA -> PRINT_AREA
    jxl.biff.BuiltInName PRINT_TITLES -> PRINT_TITLES
    jxl.biff.BuiltInName RECORDER -> RECORDER
    jxl.biff.BuiltInName DATA_FORM -> DATA_FORM
    jxl.biff.BuiltInName AUTO_ACTIVATE -> AUTO_ACTIVATE
    jxl.biff.BuiltInName AUTO_DEACTIVATE -> AUTO_DEACTIVATE
    jxl.biff.BuiltInName SHEET_TITLE -> SHEET_TITLE
    jxl.biff.BuiltInName FILTER_DATABASE -> FILTER_DATABASE
    java.lang.String getName() -> getName
    int getValue() -> getValue
    jxl.biff.BuiltInName getBuiltInName(int) -> getBuiltInName
jxl.biff.BuiltInStyle -> jxl.biff.BuiltInStyle:
    int xfIndex -> xfIndex
    int styleNumber -> styleNumber
    byte[] getData() -> getData
jxl.biff.ByteArray -> jxl.biff.ByteArray:
    int growSize -> growSize
    byte[] bytes -> bytes
    int pos -> pos
    int defaultGrowSize -> defaultGrowSize
    void add(byte) -> add
    void add(byte[]) -> add
    byte[] getBytes() -> getBytes
    void checkSize(int) -> checkSize
jxl.biff.ByteData -> jxl.biff.ByteData:
    byte[] getBytes() -> getBytes
jxl.biff.CellFinder -> jxl.biff.CellFinder:
    jxl.Sheet sheet -> sheet
    jxl.Cell findCell(java.lang.String,int,int,int,int,boolean) -> findCell
    jxl.Cell findCell(java.lang.String) -> findCell
    jxl.Cell findCell(java.util.regex.Pattern,int,int,int,int,boolean) -> findCell
    jxl.LabelCell findLabelCell(java.lang.String) -> findLabelCell
jxl.biff.CellReferenceHelper -> jxl.biff.CellReferenceHelper:
    jxl.common.Logger logger -> logger
    char fixedInd -> fixedInd
    char sheetInd -> sheetInd
    void getCellReference(int,int,java.lang.StringBuffer) -> getCellReference
    void getCellReference(int,boolean,int,boolean,java.lang.StringBuffer) -> getCellReference
    java.lang.String getColumnReference(int) -> getColumnReference
    void getColumnReference(int,java.lang.StringBuffer) -> getColumnReference
    void getCellReference(int,int,int,jxl.biff.formula.ExternalSheet,java.lang.StringBuffer) -> getCellReference
    void getCellReference(int,int,boolean,int,boolean,jxl.biff.formula.ExternalSheet,java.lang.StringBuffer) -> getCellReference
    java.lang.String getCellReference(int,int,int,jxl.biff.formula.ExternalSheet) -> getCellReference
    java.lang.String getCellReference(int,int) -> getCellReference
    int getColumn(java.lang.String) -> getColumn
    int getRow(java.lang.String) -> getRow
    int getNumberIndex(java.lang.String) -> getNumberIndex
    boolean isColumnRelative(java.lang.String) -> isColumnRelative
    boolean isRowRelative(java.lang.String) -> isRowRelative
    java.lang.String getSheet(java.lang.String) -> getSheet
jxl.biff.ConditionalFormat -> jxl.biff.ConditionalFormat:
    jxl.biff.ConditionalFormatRangeRecord range -> range
    java.util.ArrayList conditions -> conditions
    void addCondition(jxl.biff.ConditionalFormatRecord) -> addCondition
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeRow(int) -> removeRow
    void insertRow(int) -> insertRow
    void write(jxl.write.biff.File) -> write
jxl.biff.ConditionalFormatRangeRecord -> jxl.biff.ConditionalFormatRangeRecord:
    jxl.common.Logger logger -> logger
    jxl.biff.ConditionalFormatRangeRecord$Range enclosingRange -> enclosingRange
    jxl.biff.ConditionalFormatRangeRecord$Range[] ranges -> ranges
    int numRanges -> numRanges
    boolean initialized -> initialized
    boolean modified -> modified
    byte[] data -> data
    void initialize() -> initialize
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeRow(int) -> removeRow
    void insertRow(int) -> insertRow
    byte[] getData() -> getData
jxl.biff.ConditionalFormatRangeRecord$Range -> jxl.biff.ConditionalFormatRangeRecord$Range:
    int firstRow -> firstRow
    int firstColumn -> firstColumn
    int lastRow -> lastRow
    int lastColumn -> lastColumn
    boolean modified -> modified
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeRow(int) -> removeRow
    void insertRow(int) -> insertRow
jxl.biff.ConditionalFormatRecord -> jxl.biff.ConditionalFormatRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.ContinueRecord -> jxl.biff.ContinueRecord:
    byte[] data -> data
    byte[] getData() -> getData
    jxl.read.biff.Record getRecord() -> getRecord
jxl.biff.CountryCode -> jxl.biff.CountryCode:
    jxl.common.Logger logger -> logger
    int value -> value
    java.lang.String code -> code
    java.lang.String description -> description
    jxl.biff.CountryCode[] codes -> codes
    jxl.biff.CountryCode USA -> USA
    jxl.biff.CountryCode CANADA -> CANADA
    jxl.biff.CountryCode GREECE -> GREECE
    jxl.biff.CountryCode NETHERLANDS -> NETHERLANDS
    jxl.biff.CountryCode BELGIUM -> BELGIUM
    jxl.biff.CountryCode FRANCE -> FRANCE
    jxl.biff.CountryCode SPAIN -> SPAIN
    jxl.biff.CountryCode ITALY -> ITALY
    jxl.biff.CountryCode SWITZERLAND -> SWITZERLAND
    jxl.biff.CountryCode UK -> UK
    jxl.biff.CountryCode DENMARK -> DENMARK
    jxl.biff.CountryCode SWEDEN -> SWEDEN
    jxl.biff.CountryCode NORWAY -> NORWAY
    jxl.biff.CountryCode GERMANY -> GERMANY
    jxl.biff.CountryCode PHILIPPINES -> PHILIPPINES
    jxl.biff.CountryCode CHINA -> CHINA
    jxl.biff.CountryCode INDIA -> INDIA
    jxl.biff.CountryCode UNKNOWN -> UNKNOWN
    int getValue() -> getValue
    java.lang.String getCode() -> getCode
    jxl.biff.CountryCode getCountryCode(java.lang.String) -> getCountryCode
    jxl.biff.CountryCode createArbitraryCode(int) -> createArbitraryCode
jxl.biff.DVParser -> jxl.biff.DVParser:
    jxl.common.Logger logger -> logger
    jxl.biff.DVParser$DVType ANY -> ANY
    jxl.biff.DVParser$DVType INTEGER -> INTEGER
    jxl.biff.DVParser$DVType DECIMAL -> DECIMAL
    jxl.biff.DVParser$DVType LIST -> LIST
    jxl.biff.DVParser$DVType DATE -> DATE
    jxl.biff.DVParser$DVType TIME -> TIME
    jxl.biff.DVParser$DVType TEXT_LENGTH -> TEXT_LENGTH
    jxl.biff.DVParser$DVType FORMULA -> FORMULA
    jxl.biff.DVParser$ErrorStyle STOP -> STOP
    jxl.biff.DVParser$ErrorStyle WARNING -> WARNING
    jxl.biff.DVParser$ErrorStyle INFO -> INFO
    jxl.biff.DVParser$Condition BETWEEN -> BETWEEN
    jxl.biff.DVParser$Condition NOT_BETWEEN -> NOT_BETWEEN
    jxl.biff.DVParser$Condition EQUAL -> EQUAL
    jxl.biff.DVParser$Condition NOT_EQUAL -> NOT_EQUAL
    jxl.biff.DVParser$Condition GREATER_THAN -> GREATER_THAN
    jxl.biff.DVParser$Condition LESS_THAN -> LESS_THAN
    jxl.biff.DVParser$Condition GREATER_EQUAL -> GREATER_EQUAL
    jxl.biff.DVParser$Condition LESS_EQUAL -> LESS_EQUAL
    int STRING_LIST_GIVEN_MASK -> STRING_LIST_GIVEN_MASK
    int EMPTY_CELLS_ALLOWED_MASK -> EMPTY_CELLS_ALLOWED_MASK
    int SUPPRESS_ARROW_MASK -> SUPPRESS_ARROW_MASK
    int SHOW_PROMPT_MASK -> SHOW_PROMPT_MASK
    int SHOW_ERROR_MASK -> SHOW_ERROR_MASK
    java.text.DecimalFormat DECIMAL_FORMAT -> DECIMAL_FORMAT
    int MAX_VALIDATION_LIST_LENGTH -> MAX_VALIDATION_LIST_LENGTH
    int MAX_ROWS -> MAX_ROWS
    int MAX_COLUMNS -> MAX_COLUMNS
    jxl.biff.DVParser$DVType type -> type
    jxl.biff.DVParser$ErrorStyle errorStyle -> errorStyle
    jxl.biff.DVParser$Condition condition -> condition
    boolean stringListGiven -> stringListGiven
    boolean emptyCellsAllowed -> emptyCellsAllowed
    boolean suppressArrow -> suppressArrow
    boolean showPrompt -> showPrompt
    boolean showError -> showError
    java.lang.String promptTitle -> promptTitle
    java.lang.String errorTitle -> errorTitle
    java.lang.String promptText -> promptText
    java.lang.String errorText -> errorText
    jxl.biff.formula.FormulaParser formula1 -> formula1
    java.lang.String formula1String -> formula1String
    jxl.biff.formula.FormulaParser formula2 -> formula2
    java.lang.String formula2String -> formula2String
    int column1 -> column1
    int row1 -> row1
    int column2 -> column2
    int row2 -> row2
    boolean extendedCellsValidation -> extendedCellsValidation
    boolean copied -> copied
    byte[] getData() -> getData
    void insertRow(int) -> insertRow
    void insertColumn(int) -> insertColumn
    void removeRow(int) -> removeRow
    void removeColumn(int) -> removeColumn
    int getFirstColumn() -> getFirstColumn
    int getLastColumn() -> getLastColumn
    int getFirstRow() -> getFirstRow
    int getLastRow() -> getLastRow
    java.lang.String getValidationFormula() -> getValidationFormula
    void setCell(int,int,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> setCell
    void extendCellValidation(int,int) -> extendCellValidation
    boolean extendedCellsValidation() -> extendedCellsValidation
    boolean copied() -> copied
jxl.biff.DVParser$Condition -> jxl.biff.DVParser$Condition:
    int value -> value
    java.text.MessageFormat format -> format
    jxl.biff.DVParser$Condition[] types -> types
    jxl.biff.DVParser$Condition getCondition(int) -> getCondition
    int getValue() -> getValue
    java.lang.String getConditionString(java.lang.String,java.lang.String) -> getConditionString
jxl.biff.DVParser$DVType -> jxl.biff.DVParser$DVType:
    int value -> value
    java.lang.String desc -> desc
    jxl.biff.DVParser$DVType[] types -> types
    jxl.biff.DVParser$DVType getType(int) -> getType
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
jxl.biff.DVParser$ErrorStyle -> jxl.biff.DVParser$ErrorStyle:
    int value -> value
    jxl.biff.DVParser$ErrorStyle[] types -> types
    jxl.biff.DVParser$ErrorStyle getErrorStyle(int) -> getErrorStyle
    int getValue() -> getValue
jxl.biff.DValParser -> jxl.biff.DValParser:
    jxl.common.Logger logger -> logger
    int PROMPT_BOX_VISIBLE_MASK -> PROMPT_BOX_VISIBLE_MASK
    int PROMPT_BOX_AT_CELL_MASK -> PROMPT_BOX_AT_CELL_MASK
    int VALIDITY_DATA_CACHED_MASK -> VALIDITY_DATA_CACHED_MASK
    boolean promptBoxVisible -> promptBoxVisible
    boolean promptBoxAtCell -> promptBoxAtCell
    boolean validityDataCached -> validityDataCached
    int numDVRecords -> numDVRecords
    int objectId -> objectId
    byte[] getData() -> getData
    void dvRemoved() -> dvRemoved
    int getNumberOfDVRecords() -> getNumberOfDVRecords
    int getObjectId() -> getObjectId
    void dvAdded() -> dvAdded
jxl.biff.DataValidation -> jxl.biff.DataValidation:
    jxl.common.Logger logger -> logger
    jxl.biff.DataValidityListRecord validityList -> validityList
    java.util.ArrayList validitySettings -> validitySettings
    jxl.biff.WorkbookMethods workbook -> workbook
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    int comboBoxObjectId -> comboBoxObjectId
    boolean copied -> copied
    int DEFAULT_OBJECT_ID -> DEFAULT_OBJECT_ID
    int MAX_NO_OF_VALIDITY_SETTINGS -> MAX_NO_OF_VALIDITY_SETTINGS
    void add(jxl.biff.DataValiditySettingsRecord) -> add
    jxl.biff.DataValidityListRecord getDataValidityList() -> getDataValidityList
    jxl.biff.DataValiditySettingsRecord[] getDataValiditySettings() -> getDataValiditySettings
    void write(jxl.write.biff.File) -> write
    void insertRow(int) -> insertRow
    void removeRow(int) -> removeRow
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeDataValidation(int,int) -> removeDataValidation
    void removeSharedDataValidation(int,int,int,int) -> removeSharedDataValidation
    jxl.biff.DataValiditySettingsRecord getDataValiditySettings(int,int) -> getDataValiditySettings
    int getComboBoxObjectId() -> getComboBoxObjectId
jxl.biff.DataValidityListRecord -> jxl.biff.DataValidityListRecord:
    jxl.common.Logger logger -> logger
    int numSettings -> numSettings
    int objectId -> objectId
    jxl.biff.DValParser dvalParser -> dvalParser
    byte[] data -> data
    int getNumberOfSettings() -> getNumberOfSettings
    byte[] getData() -> getData
    void dvRemoved() -> dvRemoved
    void dvAdded() -> dvAdded
    boolean hasDVRecords() -> hasDVRecords
    int getObjectId() -> getObjectId
jxl.biff.DataValiditySettingsRecord -> jxl.biff.DataValiditySettingsRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    jxl.biff.DVParser dvParser -> dvParser
    jxl.biff.WorkbookMethods workbook -> workbook
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.biff.DataValidation dataValidation -> dataValidation
    void initialize() -> initialize
    byte[] getData() -> getData
    void insertRow(int) -> insertRow
    void removeRow(int) -> removeRow
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    int getFirstColumn() -> getFirstColumn
    int getLastColumn() -> getLastColumn
    int getFirstRow() -> getFirstRow
    int getLastRow() -> getLastRow
    void setDataValidation(jxl.biff.DataValidation) -> setDataValidation
    jxl.biff.DVParser getDVParser() -> getDVParser
    java.lang.String getValidationFormula() -> getValidationFormula
jxl.biff.DisplayFormat -> jxl.biff.DisplayFormat:
    int getFormatIndex() -> getFormatIndex
    boolean isInitialized() -> isInitialized
    void initialize(int) -> initialize
    boolean isBuiltIn() -> isBuiltIn
jxl.biff.DoubleHelper -> jxl.biff.DoubleHelper:
    double getIEEEDouble(byte[],int) -> getIEEEDouble
    void getIEEEBytes(double,byte[],int) -> getIEEEBytes
jxl.biff.EmptyCell -> jxl.biff.EmptyCell:
    int row -> row
    int col -> col
    int getRow() -> getRow
    int getColumn() -> getColumn
    jxl.CellType getType() -> getType
    java.lang.String getContents() -> getContents
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    void setHidden(boolean) -> setHidden
    void setLocked(boolean) -> setLocked
    void setAlignment(jxl.format.Alignment) -> setAlignment
    void setVerticalAlignment(jxl.format.VerticalAlignment) -> setVerticalAlignment
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle) -> setBorder
    void setCellFormat(jxl.format.CellFormat) -> setCellFormat
    void setCellFormat(jxl.CellFormat) -> setCellFormat
    boolean isHidden() -> isHidden
    jxl.write.WritableCell copyTo(int,int) -> copyTo
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
    jxl.write.WritableCellFeatures getWritableCellFeatures() -> getWritableCellFeatures
    void setCellFeatures(jxl.write.WritableCellFeatures) -> setCellFeatures
jxl.biff.EncodedURLHelper -> jxl.biff.EncodedURLHelper:
    jxl.common.Logger logger -> logger
    byte msDosDriveLetter -> msDosDriveLetter
    byte sameDrive -> sameDrive
    byte endOfSubdirectory -> endOfSubdirectory
    byte parentDirectory -> parentDirectory
    byte unencodedUrl -> unencodedUrl
    byte[] getEncodedURL(java.lang.String,jxl.WorkbookSettings) -> getEncodedURL
    byte[] getFile(java.lang.String,jxl.WorkbookSettings) -> getFile
    byte[] getURL(java.lang.String,jxl.WorkbookSettings) -> getURL
jxl.biff.FilterModeRecord -> jxl.biff.FilterModeRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.FontRecord -> jxl.biff.FontRecord:
    jxl.common.Logger logger -> logger
    int pointHeight -> pointHeight
    int colourIndex -> colourIndex
    int boldWeight -> boldWeight
    int scriptStyle -> scriptStyle
    int underlineStyle -> underlineStyle
    byte fontFamily -> fontFamily
    byte characterSet -> characterSet
    boolean italic -> italic
    boolean struckout -> struckout
    java.lang.String name -> name
    boolean initialized -> initialized
    int fontIndex -> fontIndex
    jxl.biff.FontRecord$Biff7 biff7 -> biff7
    int EXCEL_UNITS_PER_POINT -> EXCEL_UNITS_PER_POINT
    byte[] getData() -> getData
    boolean isInitialized() -> isInitialized
    void initialize(int) -> initialize
    void uninitialize() -> uninitialize
    int getFontIndex() -> getFontIndex
    void setFontPointSize(int) -> setFontPointSize
    int getPointSize() -> getPointSize
    void setFontBoldStyle(int) -> setFontBoldStyle
    int getBoldWeight() -> getBoldWeight
    void setFontItalic(boolean) -> setFontItalic
    boolean isItalic() -> isItalic
    void setFontUnderlineStyle(int) -> setFontUnderlineStyle
    jxl.format.UnderlineStyle getUnderlineStyle() -> getUnderlineStyle
    void setFontColour(int) -> setFontColour
    jxl.format.Colour getColour() -> getColour
    void setFontScriptStyle(int) -> setFontScriptStyle
    jxl.format.ScriptStyle getScriptStyle() -> getScriptStyle
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isStruckout() -> isStruckout
    void setFontStruckout(boolean) -> setFontStruckout
jxl.biff.FontRecord$1 -> jxl.biff.FontRecord$1:
jxl.biff.FontRecord$Biff7 -> jxl.biff.FontRecord$Biff7:
jxl.biff.Fonts -> jxl.biff.Fonts:
    java.util.ArrayList fonts -> fonts
    int numDefaultFonts -> numDefaultFonts
    void addFont(jxl.biff.FontRecord) -> addFont
    jxl.biff.FontRecord getFont(int) -> getFont
    void write(jxl.write.biff.File) -> write
    jxl.biff.IndexMapping rationalize() -> rationalize
jxl.biff.FormatRecord -> jxl.biff.FormatRecord:
    jxl.common.Logger logger -> logger
    boolean initialized -> initialized
    byte[] data -> data
    int indexCode -> indexCode
    java.lang.String formatString -> formatString
    boolean date -> date
    boolean number -> number
    java.text.Format format -> format
    java.lang.String[] dateStrings -> dateStrings
    jxl.biff.FormatRecord$BiffType biff8 -> biff8
    jxl.biff.FormatRecord$BiffType biff7 -> biff7
    byte[] getData() -> getData
    int getFormatIndex() -> getFormatIndex
    boolean isInitialized() -> isInitialized
    void initialize(int) -> initialize
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    void setFormatString(java.lang.String) -> setFormatString
    boolean isDate() -> isDate
    boolean isNumber() -> isNumber
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
    java.text.DateFormat getDateFormat() -> getDateFormat
    int getIndexCode() -> getIndexCode
    java.lang.String getFormatString() -> getFormatString
    boolean isBuiltIn() -> isBuiltIn
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
jxl.biff.FormatRecord$1 -> jxl.biff.FormatRecord$1:
jxl.biff.FormatRecord$BiffType -> jxl.biff.FormatRecord$BiffType:
jxl.biff.FormattingRecords -> jxl.biff.FormattingRecords:
    jxl.common.Logger logger -> logger
    java.util.HashMap formats -> formats
    java.util.ArrayList formatsList -> formatsList
    java.util.ArrayList xfRecords -> xfRecords
    int nextCustomIndexNumber -> nextCustomIndexNumber
    jxl.biff.Fonts fonts -> fonts
    jxl.biff.PaletteRecord palette -> palette
    int customFormatStartIndex -> customFormatStartIndex
    int maxFormatRecordsIndex -> maxFormatRecordsIndex
    int minXFRecords -> minXFRecords
    void addStyle(jxl.biff.XFRecord) -> addStyle
    void addFormat(jxl.biff.DisplayFormat) -> addFormat
    boolean isDate(int) -> isDate
    java.text.DateFormat getDateFormat(int) -> getDateFormat
    java.text.NumberFormat getNumberFormat(int) -> getNumberFormat
    jxl.biff.FormatRecord getFormatRecord(int) -> getFormatRecord
    void write(jxl.write.biff.File) -> write
    jxl.biff.Fonts getFonts() -> getFonts
    jxl.biff.XFRecord getXFRecord(int) -> getXFRecord
    int getNumberOfFormatRecords() -> getNumberOfFormatRecords
    jxl.biff.IndexMapping rationalizeFonts() -> rationalizeFonts
    jxl.biff.IndexMapping rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> rationalize
    jxl.biff.IndexMapping rationalizeDisplayFormats() -> rationalizeDisplayFormats
    jxl.biff.PaletteRecord getPalette() -> getPalette
    void setPalette(jxl.biff.PaletteRecord) -> setPalette
    void setColourRGB(jxl.format.Colour,int,int,int) -> setColourRGB
    jxl.format.RGB getColourRGB(jxl.format.Colour) -> getColourRGB
jxl.biff.FormulaData -> jxl.biff.FormulaData:
    byte[] getFormulaData() -> getFormulaData
jxl.biff.HeaderFooter -> jxl.biff.HeaderFooter:
    jxl.common.Logger logger -> logger
    java.lang.String BOLD_TOGGLE -> BOLD_TOGGLE
    java.lang.String UNDERLINE_TOGGLE -> UNDERLINE_TOGGLE
    java.lang.String ITALICS_TOGGLE -> ITALICS_TOGGLE
    java.lang.String STRIKETHROUGH_TOGGLE -> STRIKETHROUGH_TOGGLE
    java.lang.String DOUBLE_UNDERLINE_TOGGLE -> DOUBLE_UNDERLINE_TOGGLE
    java.lang.String SUPERSCRIPT_TOGGLE -> SUPERSCRIPT_TOGGLE
    java.lang.String SUBSCRIPT_TOGGLE -> SUBSCRIPT_TOGGLE
    java.lang.String OUTLINE_TOGGLE -> OUTLINE_TOGGLE
    java.lang.String SHADOW_TOGGLE -> SHADOW_TOGGLE
    java.lang.String LEFT_ALIGN -> LEFT_ALIGN
    java.lang.String CENTRE -> CENTRE
    java.lang.String RIGHT_ALIGN -> RIGHT_ALIGN
    java.lang.String PAGENUM -> PAGENUM
    java.lang.String TOTAL_PAGENUM -> TOTAL_PAGENUM
    java.lang.String DATE -> DATE
    java.lang.String TIME -> TIME
    java.lang.String WORKBOOK_NAME -> WORKBOOK_NAME
    java.lang.String WORKSHEET_NAME -> WORKSHEET_NAME
    jxl.biff.HeaderFooter$Contents left -> left
    jxl.biff.HeaderFooter$Contents right -> right
    jxl.biff.HeaderFooter$Contents centre -> centre
    java.lang.String toString() -> toString
    jxl.biff.HeaderFooter$Contents getRightText() -> getRightText
    jxl.biff.HeaderFooter$Contents getCentreText() -> getCentreText
    jxl.biff.HeaderFooter$Contents getLeftText() -> getLeftText
    void clear() -> clear
    jxl.biff.HeaderFooter$Contents createContents() -> createContents
    jxl.biff.HeaderFooter$Contents createContents(java.lang.String) -> createContents
    jxl.biff.HeaderFooter$Contents createContents(jxl.biff.HeaderFooter$Contents) -> createContents
jxl.biff.HeaderFooter$Contents -> jxl.biff.HeaderFooter$Contents:
    java.lang.StringBuffer contents -> contents
    java.lang.String getContents() -> getContents
    void appendInternal(java.lang.String) -> appendInternal
    void appendInternal(char) -> appendInternal
    void append(java.lang.String) -> append
    void toggleBold() -> toggleBold
    void toggleUnderline() -> toggleUnderline
    void toggleItalics() -> toggleItalics
    void toggleStrikethrough() -> toggleStrikethrough
    void toggleDoubleUnderline() -> toggleDoubleUnderline
    void toggleSuperScript() -> toggleSuperScript
    void toggleSubScript() -> toggleSubScript
    void toggleOutline() -> toggleOutline
    void toggleShadow() -> toggleShadow
    void setFontName(java.lang.String) -> setFontName
    boolean setFontSize(int) -> setFontSize
    void appendPageNumber() -> appendPageNumber
    void appendTotalPages() -> appendTotalPages
    void appendDate() -> appendDate
    void appendTime() -> appendTime
    void appendWorkbookName() -> appendWorkbookName
    void appendWorkSheetName() -> appendWorkSheetName
    void clear() -> clear
    boolean empty() -> empty
jxl.biff.IndexMapping -> jxl.biff.IndexMapping:
    jxl.common.Logger logger -> logger
    int[] newIndices -> newIndices
    void setMapping(int,int) -> setMapping
    int getNewIndex(int) -> getNewIndex
jxl.biff.IntegerHelper -> jxl.biff.IntegerHelper:
    int getInt(byte,byte) -> getInt
    short getShort(byte,byte) -> getShort
    int getInt(byte,byte,byte,byte) -> getInt
    byte[] getTwoBytes(int) -> getTwoBytes
    byte[] getFourBytes(int) -> getFourBytes
    void getTwoBytes(int,byte[],int) -> getTwoBytes
    void getFourBytes(int,byte[],int) -> getFourBytes
jxl.biff.NameRangeException -> jxl.biff.NameRangeException:
jxl.biff.NumFormatRecordsException -> jxl.biff.NumFormatRecordsException:
jxl.biff.PaletteRecord -> jxl.biff.PaletteRecord:
    jxl.format.RGB[] rgbColours -> rgbColours
    boolean dirty -> dirty
    boolean read -> read
    boolean initialized -> initialized
    int numColours -> numColours
    byte[] getData() -> getData
    void initialize() -> initialize
    boolean isDirty() -> isDirty
    void setColourRGB(jxl.format.Colour,int,int,int) -> setColourRGB
    jxl.format.RGB getColourRGB(jxl.format.Colour) -> getColourRGB
    int setValueRange(int,int,int) -> setValueRange
jxl.biff.RangeImpl -> jxl.biff.RangeImpl:
    jxl.common.Logger logger -> logger
    jxl.biff.WorkbookMethods workbook -> workbook
    int sheet1 -> sheet1
    int column1 -> column1
    int row1 -> row1
    int sheet2 -> sheet2
    int column2 -> column2
    int row2 -> row2
    jxl.Cell getTopLeft() -> getTopLeft
    jxl.Cell getBottomRight() -> getBottomRight
    int getFirstSheetIndex() -> getFirstSheetIndex
    int getLastSheetIndex() -> getLastSheetIndex
jxl.biff.RecordData -> jxl.biff.RecordData:
    jxl.read.biff.Record record -> record
    int code -> code
    jxl.read.biff.Record getRecord() -> getRecord
    int getCode() -> getCode
jxl.biff.SheetRangeImpl -> jxl.biff.SheetRangeImpl:
    jxl.Sheet sheet -> sheet
    int column1 -> column1
    int row1 -> row1
    int column2 -> column2
    int row2 -> row2
    jxl.Cell getTopLeft() -> getTopLeft
    jxl.Cell getBottomRight() -> getBottomRight
    int getFirstSheetIndex() -> getFirstSheetIndex
    int getLastSheetIndex() -> getLastSheetIndex
    boolean intersects(jxl.biff.SheetRangeImpl) -> intersects
    java.lang.String toString() -> toString
    void insertRow(int) -> insertRow
    void insertColumn(int) -> insertColumn
    void removeRow(int) -> removeRow
    void removeColumn(int) -> removeColumn
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
jxl.biff.StringHelper -> jxl.biff.StringHelper:
    jxl.common.Logger logger -> logger
    java.lang.String UNICODE_ENCODING -> UNICODE_ENCODING
    byte[] getBytes(java.lang.String) -> getBytes
    byte[] getBytes(java.lang.String,jxl.WorkbookSettings) -> getBytes
    byte[] getUnicodeBytes(java.lang.String) -> getUnicodeBytes
    void getBytes(java.lang.String,byte[],int) -> getBytes
    void getUnicodeBytes(java.lang.String,byte[],int) -> getUnicodeBytes
    java.lang.String getString(byte[],int,int,jxl.WorkbookSettings) -> getString
    java.lang.String getUnicodeString(byte[],int,int) -> getUnicodeString
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
jxl.biff.Type -> jxl.biff.Type:
    int value -> value
    jxl.biff.Type[] types -> types
    jxl.biff.Type$ArbitraryType arbitrary -> arbitrary
    jxl.biff.Type BOF -> BOF
    jxl.biff.Type EOF -> EOF
    jxl.biff.Type BOUNDSHEET -> BOUNDSHEET
    jxl.biff.Type SUPBOOK -> SUPBOOK
    jxl.biff.Type EXTERNSHEET -> EXTERNSHEET
    jxl.biff.Type DIMENSION -> DIMENSION
    jxl.biff.Type BLANK -> BLANK
    jxl.biff.Type MULBLANK -> MULBLANK
    jxl.biff.Type ROW -> ROW
    jxl.biff.Type NOTE -> NOTE
    jxl.biff.Type TXO -> TXO
    jxl.biff.Type RK -> RK
    jxl.biff.Type RK2 -> RK2
    jxl.biff.Type MULRK -> MULRK
    jxl.biff.Type INDEX -> INDEX
    jxl.biff.Type DBCELL -> DBCELL
    jxl.biff.Type SST -> SST
    jxl.biff.Type COLINFO -> COLINFO
    jxl.biff.Type EXTSST -> EXTSST
    jxl.biff.Type CONTINUE -> CONTINUE
    jxl.biff.Type LABEL -> LABEL
    jxl.biff.Type RSTRING -> RSTRING
    jxl.biff.Type LABELSST -> LABELSST
    jxl.biff.Type NUMBER -> NUMBER
    jxl.biff.Type NAME -> NAME
    jxl.biff.Type TABID -> TABID
    jxl.biff.Type ARRAY -> ARRAY
    jxl.biff.Type STRING -> STRING
    jxl.biff.Type FORMULA -> FORMULA
    jxl.biff.Type FORMULA2 -> FORMULA2
    jxl.biff.Type SHAREDFORMULA -> SHAREDFORMULA
    jxl.biff.Type FORMAT -> FORMAT
    jxl.biff.Type XF -> XF
    jxl.biff.Type BOOLERR -> BOOLERR
    jxl.biff.Type INTERFACEHDR -> INTERFACEHDR
    jxl.biff.Type SAVERECALC -> SAVERECALC
    jxl.biff.Type INTERFACEEND -> INTERFACEEND
    jxl.biff.Type XCT -> XCT
    jxl.biff.Type CRN -> CRN
    jxl.biff.Type DEFCOLWIDTH -> DEFCOLWIDTH
    jxl.biff.Type DEFAULTROWHEIGHT -> DEFAULTROWHEIGHT
    jxl.biff.Type WRITEACCESS -> WRITEACCESS
    jxl.biff.Type WSBOOL -> WSBOOL
    jxl.biff.Type CODEPAGE -> CODEPAGE
    jxl.biff.Type DSF -> DSF
    jxl.biff.Type FNGROUPCOUNT -> FNGROUPCOUNT
    jxl.biff.Type FILTERMODE -> FILTERMODE
    jxl.biff.Type AUTOFILTERINFO -> AUTOFILTERINFO
    jxl.biff.Type AUTOFILTER -> AUTOFILTER
    jxl.biff.Type COUNTRY -> COUNTRY
    jxl.biff.Type PROTECT -> PROTECT
    jxl.biff.Type SCENPROTECT -> SCENPROTECT
    jxl.biff.Type OBJPROTECT -> OBJPROTECT
    jxl.biff.Type PRINTHEADERS -> PRINTHEADERS
    jxl.biff.Type HEADER -> HEADER
    jxl.biff.Type FOOTER -> FOOTER
    jxl.biff.Type HCENTER -> HCENTER
    jxl.biff.Type VCENTER -> VCENTER
    jxl.biff.Type FILEPASS -> FILEPASS
    jxl.biff.Type SETUP -> SETUP
    jxl.biff.Type PRINTGRIDLINES -> PRINTGRIDLINES
    jxl.biff.Type GRIDSET -> GRIDSET
    jxl.biff.Type GUTS -> GUTS
    jxl.biff.Type WINDOWPROTECT -> WINDOWPROTECT
    jxl.biff.Type PROT4REV -> PROT4REV
    jxl.biff.Type PROT4REVPASS -> PROT4REVPASS
    jxl.biff.Type PASSWORD -> PASSWORD
    jxl.biff.Type REFRESHALL -> REFRESHALL
    jxl.biff.Type WINDOW1 -> WINDOW1
    jxl.biff.Type WINDOW2 -> WINDOW2
    jxl.biff.Type BACKUP -> BACKUP
    jxl.biff.Type HIDEOBJ -> HIDEOBJ
    jxl.biff.Type NINETEENFOUR -> NINETEENFOUR
    jxl.biff.Type PRECISION -> PRECISION
    jxl.biff.Type BOOKBOOL -> BOOKBOOL
    jxl.biff.Type FONT -> FONT
    jxl.biff.Type MMS -> MMS
    jxl.biff.Type CALCMODE -> CALCMODE
    jxl.biff.Type CALCCOUNT -> CALCCOUNT
    jxl.biff.Type REFMODE -> REFMODE
    jxl.biff.Type TEMPLATE -> TEMPLATE
    jxl.biff.Type OBJPROJ -> OBJPROJ
    jxl.biff.Type DELTA -> DELTA
    jxl.biff.Type MERGEDCELLS -> MERGEDCELLS
    jxl.biff.Type ITERATION -> ITERATION
    jxl.biff.Type STYLE -> STYLE
    jxl.biff.Type USESELFS -> USESELFS
    jxl.biff.Type VERTICALPAGEBREAKS -> VERTICALPAGEBREAKS
    jxl.biff.Type HORIZONTALPAGEBREAKS -> HORIZONTALPAGEBREAKS
    jxl.biff.Type SELECTION -> SELECTION
    jxl.biff.Type HLINK -> HLINK
    jxl.biff.Type OBJ -> OBJ
    jxl.biff.Type MSODRAWING -> MSODRAWING
    jxl.biff.Type MSODRAWINGGROUP -> MSODRAWINGGROUP
    jxl.biff.Type LEFTMARGIN -> LEFTMARGIN
    jxl.biff.Type RIGHTMARGIN -> RIGHTMARGIN
    jxl.biff.Type TOPMARGIN -> TOPMARGIN
    jxl.biff.Type BOTTOMMARGIN -> BOTTOMMARGIN
    jxl.biff.Type EXTERNNAME -> EXTERNNAME
    jxl.biff.Type PALETTE -> PALETTE
    jxl.biff.Type PLS -> PLS
    jxl.biff.Type SCL -> SCL
    jxl.biff.Type PANE -> PANE
    jxl.biff.Type WEIRD1 -> WEIRD1
    jxl.biff.Type SORT -> SORT
    jxl.biff.Type CONDFMT -> CONDFMT
    jxl.biff.Type CF -> CF
    jxl.biff.Type DV -> DV
    jxl.biff.Type DVAL -> DVAL
    jxl.biff.Type BUTTONPROPERTYSET -> BUTTONPROPERTYSET
    jxl.biff.Type EXCEL9FILE -> EXCEL9FILE
    jxl.biff.Type FONTX -> FONTX
    jxl.biff.Type IFMT -> IFMT
    jxl.biff.Type FBI -> FBI
    jxl.biff.Type ALRUNS -> ALRUNS
    jxl.biff.Type SERIES -> SERIES
    jxl.biff.Type SERIESLIST -> SERIESLIST
    jxl.biff.Type SBASEREF -> SBASEREF
    jxl.biff.Type UNKNOWN -> UNKNOWN
    jxl.biff.Type U1C0 -> U1C0
    jxl.biff.Type U1C1 -> U1C1
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    jxl.biff.Type getType(int) -> getType
    jxl.biff.Type createType(int) -> createType
jxl.biff.Type$1 -> jxl.biff.Type$1:
jxl.biff.Type$ArbitraryType -> jxl.biff.Type$ArbitraryType:
jxl.biff.WorkbookMethods -> jxl.biff.WorkbookMethods:
    jxl.Sheet getReadSheet(int) -> getReadSheet
    java.lang.String getName(int) -> getName
    int getNameIndex(java.lang.String) -> getNameIndex
jxl.biff.WorkspaceInformationRecord -> jxl.biff.WorkspaceInformationRecord:
    jxl.common.Logger logger -> logger
    int wsoptions -> wsoptions
    boolean rowOutlines -> rowOutlines
    boolean columnOutlines -> columnOutlines
    boolean fitToPages -> fitToPages
    int FIT_TO_PAGES -> FIT_TO_PAGES
    int SHOW_ROW_OUTLINE_SYMBOLS -> SHOW_ROW_OUTLINE_SYMBOLS
    int SHOW_COLUMN_OUTLINE_SYMBOLS -> SHOW_COLUMN_OUTLINE_SYMBOLS
    int DEFAULT_OPTIONS -> DEFAULT_OPTIONS
    boolean getFitToPages() -> getFitToPages
    void setFitToPages(boolean) -> setFitToPages
    void setRowOutlines(boolean) -> setRowOutlines
    void setColumnOutlines(boolean) -> setColumnOutlines
    byte[] getData() -> getData
jxl.biff.WritableRecordData -> jxl.biff.WritableRecordData:
    jxl.common.Logger logger -> logger
    int maxRecordLength -> maxRecordLength
    byte[] getBytes() -> getBytes
    byte[] handleContinueRecords(byte[]) -> handleContinueRecords
    byte[] getData() -> getData
jxl.biff.XCTRecord -> jxl.biff.XCTRecord:
    byte[] getData() -> getData
jxl.biff.XFRecord -> jxl.biff.XFRecord:
    jxl.common.Logger logger -> logger
    int formatIndex -> formatIndex
    int parentFormat -> parentFormat
    jxl.biff.XFRecord$XFType xfFormatType -> xfFormatType
    boolean date -> date
    boolean number -> number
    java.text.DateFormat dateFormat -> dateFormat
    java.text.NumberFormat numberFormat -> numberFormat
    byte usedAttributes -> usedAttributes
    int fontIndex -> fontIndex
    boolean locked -> locked
    boolean hidden -> hidden
    jxl.format.Alignment align -> align
    jxl.format.VerticalAlignment valign -> valign
    jxl.format.Orientation orientation -> orientation
    boolean wrap -> wrap
    int indentation -> indentation
    boolean shrinkToFit -> shrinkToFit
    jxl.format.BorderLineStyle leftBorder -> leftBorder
    jxl.format.BorderLineStyle rightBorder -> rightBorder
    jxl.format.BorderLineStyle topBorder -> topBorder
    jxl.format.BorderLineStyle bottomBorder -> bottomBorder
    jxl.format.Colour leftBorderColour -> leftBorderColour
    jxl.format.Colour rightBorderColour -> rightBorderColour
    jxl.format.Colour topBorderColour -> topBorderColour
    jxl.format.Colour bottomBorderColour -> bottomBorderColour
    jxl.format.Colour backgroundColour -> backgroundColour
    jxl.format.Pattern pattern -> pattern
    int options -> options
    int xfIndex -> xfIndex
    jxl.biff.FontRecord font -> font
    jxl.biff.DisplayFormat format -> format
    boolean initialized -> initialized
    boolean read -> read
    jxl.format.Format excelFormat -> excelFormat
    boolean formatInfoInitialized -> formatInfoInitialized
    boolean copied -> copied
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    int USE_FONT -> USE_FONT
    int USE_FORMAT -> USE_FORMAT
    int USE_ALIGNMENT -> USE_ALIGNMENT
    int USE_BORDER -> USE_BORDER
    int USE_BACKGROUND -> USE_BACKGROUND
    int USE_PROTECTION -> USE_PROTECTION
    int USE_DEFAULT_VALUE -> USE_DEFAULT_VALUE
    int[] dateFormats -> dateFormats
    java.text.DateFormat[] javaDateFormats -> javaDateFormats
    int[] numberFormats -> numberFormats
    java.text.NumberFormat[] javaNumberFormats -> javaNumberFormats
    jxl.biff.XFRecord$BiffType biff8 -> biff8
    jxl.biff.XFRecord$BiffType biff7 -> biff7
    jxl.biff.XFRecord$BiffType biffType -> biffType
    jxl.biff.XFRecord$XFType cell -> cell
    jxl.biff.XFRecord$XFType style -> style
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
    int getFormatRecord() -> getFormatRecord
    boolean isDate() -> isDate
    boolean isNumber() -> isNumber
    byte[] getData() -> getData
    boolean getLocked() -> getLocked
    boolean getHidden() -> getHidden
    void setXFLocked(boolean) -> setXFLocked
    void setXFCellOptions(int) -> setXFCellOptions
    void setXFAlignment(jxl.format.Alignment) -> setXFAlignment
    void setXFIndentation(int) -> setXFIndentation
    void setXFShrinkToFit(boolean) -> setXFShrinkToFit
    jxl.format.Alignment getAlignment() -> getAlignment
    int getIndentation() -> getIndentation
    boolean isShrinkToFit() -> isShrinkToFit
    boolean isLocked() -> isLocked
    jxl.format.VerticalAlignment getVerticalAlignment() -> getVerticalAlignment
    jxl.format.Orientation getOrientation() -> getOrientation
    void setXFBackground(jxl.format.Colour,jxl.format.Pattern) -> setXFBackground
    jxl.format.Colour getBackgroundColour() -> getBackgroundColour
    jxl.format.Pattern getPattern() -> getPattern
    void setXFVerticalAlignment(jxl.format.VerticalAlignment) -> setXFVerticalAlignment
    void setXFOrientation(jxl.format.Orientation) -> setXFOrientation
    void setXFWrap(boolean) -> setXFWrap
    boolean getWrap() -> getWrap
    void setXFBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> setXFBorder
    jxl.format.BorderLineStyle getBorder(jxl.format.Border) -> getBorder
    jxl.format.BorderLineStyle getBorderLine(jxl.format.Border) -> getBorderLine
    jxl.format.Colour getBorderColour(jxl.format.Border) -> getBorderColour
    boolean hasBorders() -> hasBorders
    void initialize(int,jxl.biff.FormattingRecords,jxl.biff.Fonts) -> initialize
    void uninitialize() -> uninitialize
    void setXFIndex(int) -> setXFIndex
    int getXFIndex() -> getXFIndex
    boolean isInitialized() -> isInitialized
    boolean isRead() -> isRead
    jxl.format.Format getFormat() -> getFormat
    jxl.format.Font getFont() -> getFont
    void initializeFormatInformation() -> initializeFormatInformation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void setFormatIndex(int) -> setFormatIndex
    int getFontIndex() -> getFontIndex
    void setFontIndex(int) -> setFontIndex
    void setXFDetails(jxl.biff.XFRecord$XFType,int) -> setXFDetails
    void rationalize(jxl.biff.IndexMapping) -> rationalize
    void setFont(jxl.biff.FontRecord) -> setFont
jxl.biff.XFRecord$1 -> jxl.biff.XFRecord$1:
jxl.biff.XFRecord$BiffType -> jxl.biff.XFRecord$BiffType:
jxl.biff.XFRecord$XFType -> jxl.biff.XFRecord$XFType:
jxl.biff.drawing.BStoreContainer -> jxl.biff.drawing.BStoreContainer:
    jxl.common.Logger logger -> logger
    int numBlips -> numBlips
    void setNumBlips(int) -> setNumBlips
    int getNumBlips() -> getNumBlips
    jxl.biff.drawing.BlipStoreEntry getDrawing(int) -> getDrawing
jxl.biff.drawing.BlipStoreEntry -> jxl.biff.drawing.BlipStoreEntry:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.BlipType type -> type
    byte[] data -> data
    int imageDataLength -> imageDataLength
    int referenceCount -> referenceCount
    boolean write -> write
    int IMAGE_DATA_OFFSET -> IMAGE_DATA_OFFSET
    jxl.biff.drawing.BlipType getBlipType() -> getBlipType
    byte[] getData() -> getData
    void dereference() -> dereference
    int getReferenceCount() -> getReferenceCount
    byte[] getImageData() -> getImageData
jxl.biff.drawing.BlipType -> jxl.biff.drawing.BlipType:
    int value -> value
    java.lang.String desc -> desc
    jxl.biff.drawing.BlipType[] types -> types
    jxl.biff.drawing.BlipType ERROR -> ERROR
    jxl.biff.drawing.BlipType UNKNOWN -> UNKNOWN
    jxl.biff.drawing.BlipType EMF -> EMF
    jxl.biff.drawing.BlipType WMF -> WMF
    jxl.biff.drawing.BlipType PICT -> PICT
    jxl.biff.drawing.BlipType JPEG -> JPEG
    jxl.biff.drawing.BlipType PNG -> PNG
    jxl.biff.drawing.BlipType DIB -> DIB
    jxl.biff.drawing.BlipType FIRST_CLIENT -> FIRST_CLIENT
    jxl.biff.drawing.BlipType LAST_CLIENT -> LAST_CLIENT
    java.lang.String getDescription() -> getDescription
    int getValue() -> getValue
    jxl.biff.drawing.BlipType getType(int) -> getType
jxl.biff.drawing.Button -> jxl.biff.drawing.Button:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherContainer readSpContainer -> readSpContainer
    jxl.biff.drawing.EscherContainer spContainer -> spContainer
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    jxl.biff.drawing.ObjRecord objRecord -> objRecord
    boolean initialized -> initialized
    int objectId -> objectId
    int blipId -> blipId
    int shapeId -> shapeId
    int column -> column
    int row -> row
    double width -> width
    double height -> height
    int referenceCount -> referenceCount
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.Origin origin -> origin
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    jxl.biff.drawing.ShapeType type -> type
    int drawingNumber -> drawingNumber
    jxl.biff.drawing.MsoDrawingRecord mso -> mso
    jxl.biff.drawing.TextObjectRecord txo -> txo
    jxl.biff.ContinueRecord text -> text
    jxl.biff.ContinueRecord formatting -> formatting
    java.lang.String commentText -> commentText
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    void initialize() -> initialize
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getShapeId() -> getShapeId
    int getBlipId() -> getBlipId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    byte[] getImageData() -> getImageData
    jxl.biff.drawing.ShapeType getType() -> getType
    void setTextObject(jxl.biff.drawing.TextObjectRecord) -> setTextObject
    void setText(jxl.biff.ContinueRecord) -> setText
    void setFormatting(jxl.biff.ContinueRecord) -> setFormatting
    byte[] getImageBytes() -> getImageBytes
    java.lang.String getImageFilePath() -> getImageFilePath
    void addMso(jxl.biff.drawing.MsoDrawingRecord) -> addMso
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    int getRow() -> getRow
    int getColumn() -> getColumn
    java.lang.String getText() -> getText
    int hashCode() -> hashCode
    void setButtonText(java.lang.String) -> setButtonText
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
jxl.biff.drawing.Chart -> jxl.biff.drawing.Chart:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    jxl.biff.drawing.ObjRecord objRecord -> objRecord
    int startpos -> startpos
    int endpos -> endpos
    jxl.read.biff.File file -> file
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    int drawingNumber -> drawingNumber
    byte[] data -> data
    boolean initialized -> initialized
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    byte[] getBytes() -> getBytes
    byte[] getData() -> getData
    void initialize() -> initialize
    void rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> rationalize
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.ObjRecord getObjRecord() -> getObjRecord
jxl.biff.drawing.CheckBox -> jxl.biff.drawing.CheckBox:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherContainer readSpContainer -> readSpContainer
    jxl.biff.drawing.EscherContainer spContainer -> spContainer
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    jxl.biff.drawing.ObjRecord objRecord -> objRecord
    boolean initialized -> initialized
    int objectId -> objectId
    int blipId -> blipId
    int shapeId -> shapeId
    int column -> column
    int row -> row
    double width -> width
    double height -> height
    int referenceCount -> referenceCount
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.Origin origin -> origin
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    jxl.biff.drawing.ShapeType type -> type
    int drawingNumber -> drawingNumber
    jxl.biff.drawing.MsoDrawingRecord mso -> mso
    jxl.biff.drawing.TextObjectRecord txo -> txo
    jxl.biff.ContinueRecord text -> text
    jxl.biff.ContinueRecord formatting -> formatting
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    void initialize() -> initialize
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getShapeId() -> getShapeId
    int getBlipId() -> getBlipId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    byte[] getImageData() -> getImageData
    jxl.biff.drawing.ShapeType getType() -> getType
    byte[] getImageBytes() -> getImageBytes
    java.lang.String getImageFilePath() -> getImageFilePath
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    int getRow() -> getRow
    int getColumn() -> getColumn
    int hashCode() -> hashCode
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
    void setTextObject(jxl.biff.drawing.TextObjectRecord) -> setTextObject
    void setText(jxl.biff.ContinueRecord) -> setText
    void setFormatting(jxl.biff.ContinueRecord) -> setFormatting
    void addMso(jxl.biff.drawing.MsoDrawingRecord) -> addMso
jxl.biff.drawing.Chunk -> jxl.biff.drawing.Chunk:
    int pos -> pos
    int length -> length
    jxl.biff.drawing.ChunkType type -> type
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.drawing.ChunkType -> jxl.biff.drawing.ChunkType:
    byte[] id -> id
    java.lang.String name -> name
    jxl.biff.drawing.ChunkType[] chunkTypes -> chunkTypes
    jxl.biff.drawing.ChunkType IHDR -> IHDR
    jxl.biff.drawing.ChunkType IEND -> IEND
    jxl.biff.drawing.ChunkType PHYS -> PHYS
    jxl.biff.drawing.ChunkType UNKNOWN -> UNKNOWN
    java.lang.String getName() -> getName
    jxl.biff.drawing.ChunkType getChunkType(byte,byte,byte,byte) -> getChunkType
jxl.biff.drawing.ClientAnchor -> jxl.biff.drawing.ClientAnchor:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int properties -> properties
    double x1 -> x1
    double y1 -> y1
    double x2 -> x2
    double y2 -> y2
    byte[] getData() -> getData
    double getX1() -> getX1
    double getY1() -> getY1
    double getX2() -> getX2
    double getY2() -> getY2
    int getProperties() -> getProperties
jxl.biff.drawing.ClientData -> jxl.biff.drawing.ClientData:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.drawing.ClientTextBox -> jxl.biff.drawing.ClientTextBox:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.drawing.ComboBox -> jxl.biff.drawing.ComboBox:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherContainer readSpContainer -> readSpContainer
    jxl.biff.drawing.EscherContainer spContainer -> spContainer
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    jxl.biff.drawing.ObjRecord objRecord -> objRecord
    boolean initialized -> initialized
    int objectId -> objectId
    int blipId -> blipId
    int shapeId -> shapeId
    int column -> column
    int row -> row
    double width -> width
    double height -> height
    int referenceCount -> referenceCount
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.Origin origin -> origin
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    jxl.biff.drawing.ShapeType type -> type
    int drawingNumber -> drawingNumber
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    void initialize() -> initialize
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getShapeId() -> getShapeId
    int getBlipId() -> getBlipId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    byte[] getImageData() -> getImageData
    jxl.biff.drawing.ShapeType getType() -> getType
    byte[] getImageBytes() -> getImageBytes
    java.lang.String getImageFilePath() -> getImageFilePath
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    int getRow() -> getRow
    int getColumn() -> getColumn
    int hashCode() -> hashCode
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
jxl.biff.drawing.Comment -> jxl.biff.drawing.Comment:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherContainer readSpContainer -> readSpContainer
    jxl.biff.drawing.EscherContainer spContainer -> spContainer
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    jxl.biff.drawing.ObjRecord objRecord -> objRecord
    boolean initialized -> initialized
    int objectId -> objectId
    int blipId -> blipId
    int shapeId -> shapeId
    int column -> column
    int row -> row
    double width -> width
    double height -> height
    int referenceCount -> referenceCount
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.Origin origin -> origin
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    jxl.biff.drawing.ShapeType type -> type
    int drawingNumber -> drawingNumber
    jxl.biff.drawing.MsoDrawingRecord mso -> mso
    jxl.biff.drawing.TextObjectRecord txo -> txo
    jxl.biff.drawing.NoteRecord note -> note
    jxl.biff.ContinueRecord text -> text
    jxl.biff.ContinueRecord formatting -> formatting
    java.lang.String commentText -> commentText
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    void initialize() -> initialize
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getShapeId() -> getShapeId
    int getBlipId() -> getBlipId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    byte[] getImageData() -> getImageData
    jxl.biff.drawing.ShapeType getType() -> getType
    void setTextObject(jxl.biff.drawing.TextObjectRecord) -> setTextObject
    void setNote(jxl.biff.drawing.NoteRecord) -> setNote
    void setText(jxl.biff.ContinueRecord) -> setText
    void setFormatting(jxl.biff.ContinueRecord) -> setFormatting
    byte[] getImageBytes() -> getImageBytes
    java.lang.String getImageFilePath() -> getImageFilePath
    void addMso(jxl.biff.drawing.MsoDrawingRecord) -> addMso
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    int getRow() -> getRow
    int getColumn() -> getColumn
    java.lang.String getText() -> getText
    int hashCode() -> hashCode
    void setCommentText(java.lang.String) -> setCommentText
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
jxl.biff.drawing.Dg -> jxl.biff.drawing.Dg:
    byte[] data -> data
    int drawingId -> drawingId
    int shapeCount -> shapeCount
    int seed -> seed
    int getDrawingId() -> getDrawingId
    int getShapeCount() -> getShapeCount
    byte[] getData() -> getData
jxl.biff.drawing.DgContainer -> jxl.biff.drawing.DgContainer:
jxl.biff.drawing.Dgg -> jxl.biff.drawing.Dgg:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int numClusters -> numClusters
    int maxShapeId -> maxShapeId
    int shapesSaved -> shapesSaved
    int drawingsSaved -> drawingsSaved
    java.util.ArrayList clusters -> clusters
    void addCluster(int,int) -> addCluster
    byte[] getData() -> getData
    int getShapesSaved() -> getShapesSaved
    int getDrawingsSaved() -> getDrawingsSaved
    jxl.biff.drawing.Dgg$Cluster getCluster(int) -> getCluster
jxl.biff.drawing.Dgg$Cluster -> jxl.biff.drawing.Dgg$Cluster:
    int drawingGroupId -> drawingGroupId
    int shapeIdsUsed -> shapeIdsUsed
jxl.biff.drawing.DggContainer -> jxl.biff.drawing.DggContainer:
jxl.biff.drawing.Drawing -> jxl.biff.drawing.Drawing:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherContainer readSpContainer -> readSpContainer
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    jxl.biff.drawing.ObjRecord objRecord -> objRecord
    boolean initialized -> initialized
    java.io.File imageFile -> imageFile
    byte[] imageData -> imageData
    int objectId -> objectId
    int blipId -> blipId
    double x -> x
    double y -> y
    double width -> width
    double height -> height
    int referenceCount -> referenceCount
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.Origin origin -> origin
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    jxl.biff.drawing.ShapeType type -> type
    int shapeId -> shapeId
    int drawingNumber -> drawingNumber
    jxl.Sheet sheet -> sheet
    jxl.biff.drawing.PNGReader pngReader -> pngReader
    jxl.biff.drawing.Drawing$ImageAnchorProperties imageAnchorProperties -> imageAnchorProperties
    jxl.biff.drawing.Drawing$ImageAnchorProperties MOVE_AND_SIZE_WITH_CELLS -> MOVE_AND_SIZE_WITH_CELLS
    jxl.biff.drawing.Drawing$ImageAnchorProperties MOVE_WITH_CELLS -> MOVE_WITH_CELLS
    jxl.biff.drawing.Drawing$ImageAnchorProperties NO_MOVE_OR_SIZE_WITH_CELLS -> NO_MOVE_OR_SIZE_WITH_CELLS
    double DEFAULT_FONT_SIZE -> DEFAULT_FONT_SIZE
    void initialize() -> initialize
    java.io.File getImageFile() -> getImageFile
    java.lang.String getImageFilePath() -> getImageFilePath
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getShapeId() -> getShapeId
    int getBlipId() -> getBlipId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    byte[] getImageData() -> getImageData
    byte[] getImageBytes() -> getImageBytes
    jxl.biff.drawing.ShapeType getType() -> getType
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    double getColumn() -> getColumn
    double getRow() -> getRow
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
    void removeRow(int) -> removeRow
    double getWidthInPoints() -> getWidthInPoints
    double getHeightInPoints() -> getHeightInPoints
    double getWidth(jxl.common.LengthUnit) -> getWidth
    double getHeight(jxl.common.LengthUnit) -> getHeight
    int getImageWidth() -> getImageWidth
    int getImageHeight() -> getImageHeight
    double getHorizontalResolution(jxl.common.LengthUnit) -> getHorizontalResolution
    double getVerticalResolution(jxl.common.LengthUnit) -> getVerticalResolution
    jxl.biff.drawing.PNGReader getPngReader() -> getPngReader
    void setImageAnchor(jxl.biff.drawing.Drawing$ImageAnchorProperties) -> setImageAnchor
    jxl.biff.drawing.Drawing$ImageAnchorProperties getImageAnchor() -> getImageAnchor
jxl.biff.drawing.Drawing$ImageAnchorProperties -> jxl.biff.drawing.Drawing$ImageAnchorProperties:
    int value -> value
    jxl.biff.drawing.Drawing$ImageAnchorProperties[] o -> o
    int getValue() -> getValue
    jxl.biff.drawing.Drawing$ImageAnchorProperties getImageAnchorProperties(int) -> getImageAnchorProperties
jxl.biff.drawing.Drawing2 -> jxl.biff.drawing.Drawing2:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherContainer readSpContainer -> readSpContainer
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> msoDrawingRecord
    boolean initialized -> initialized
    java.io.File imageFile -> imageFile
    byte[] imageData -> imageData
    int objectId -> objectId
    int blipId -> blipId
    double x -> x
    double y -> y
    double width -> width
    double height -> height
    int referenceCount -> referenceCount
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.Origin origin -> origin
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    jxl.biff.drawing.ShapeType type -> type
    int shapeId -> shapeId
    int drawingNumber -> drawingNumber
    void initialize() -> initialize
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getShapeId() -> getShapeId
    int getBlipId() -> getBlipId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    byte[] getImageData() -> getImageData
    byte[] getImageBytes() -> getImageBytes
    jxl.biff.drawing.ShapeType getType() -> getType
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    double getColumn() -> getColumn
    double getRow() -> getRow
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
    void removeRow(int) -> removeRow
    java.lang.String getImageFilePath() -> getImageFilePath
jxl.biff.drawing.DrawingData -> jxl.biff.drawing.DrawingData:
    jxl.common.Logger logger -> logger
    byte[] drawingData -> drawingData
    int numDrawings -> numDrawings
    boolean initialized -> initialized
    jxl.biff.drawing.EscherRecord[] spContainers -> spContainers
    void initialize() -> initialize
    void getSpContainers(jxl.biff.drawing.EscherContainer,java.util.ArrayList) -> getSpContainers
    void addData(byte[]) -> addData
    void addRawData(byte[]) -> addRawData
    int getNumDrawings() -> getNumDrawings
    jxl.biff.drawing.EscherContainer getSpContainer(int) -> getSpContainer
    byte[] getData() -> getData
jxl.biff.drawing.DrawingDataException -> jxl.biff.drawing.DrawingDataException:
    java.lang.String message -> message
jxl.biff.drawing.DrawingGroup -> jxl.biff.drawing.DrawingGroup:
    jxl.common.Logger logger -> logger
    byte[] drawingData -> drawingData
    jxl.biff.drawing.EscherContainer escherData -> escherData
    jxl.biff.drawing.BStoreContainer bstoreContainer -> bstoreContainer
    boolean initialized -> initialized
    java.util.ArrayList drawings -> drawings
    int numBlips -> numBlips
    int numCharts -> numCharts
    int drawingGroupId -> drawingGroupId
    boolean drawingsOmitted -> drawingsOmitted
    jxl.biff.drawing.Origin origin -> origin
    java.util.HashMap imageFiles -> imageFiles
    int maxObjectId -> maxObjectId
    int maxShapeId -> maxShapeId
    void add(jxl.biff.drawing.MsoDrawingGroupRecord) -> add
    void add(jxl.read.biff.Record) -> add
    void addData(byte[]) -> addData
    void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> addDrawing
    void add(jxl.biff.drawing.Chart) -> add
    void add(jxl.biff.drawing.DrawingGroupObject) -> add
    void remove(jxl.biff.drawing.DrawingGroupObject) -> remove
    void initialize() -> initialize
    jxl.biff.drawing.BStoreContainer getBStoreContainer() -> getBStoreContainer
    byte[] getData() -> getData
    void write(jxl.write.biff.File) -> write
    int getNumberOfBlips() -> getNumberOfBlips
    byte[] getImageData(int) -> getImageData
    void setDrawingsOmitted(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord) -> setDrawingsOmitted
    boolean hasDrawingsOmitted() -> hasDrawingsOmitted
    void updateData(jxl.biff.drawing.DrawingGroup) -> updateData
jxl.biff.drawing.DrawingGroupObject -> jxl.biff.drawing.DrawingGroupObject:
    void setObjectId(int,int,int) -> setObjectId
    int getObjectId() -> getObjectId
    int getBlipId() -> getBlipId
    int getShapeId() -> getShapeId
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.Origin getOrigin() -> getOrigin
    int getReferenceCount() -> getReferenceCount
    void setReferenceCount(int) -> setReferenceCount
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    jxl.biff.drawing.ShapeType getType() -> getType
    byte[] getImageData() -> getImageData
    byte[] getImageBytes() -> getImageBytes
    java.lang.String getImageFilePath() -> getImageFilePath
    void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
    boolean isFirst() -> isFirst
    boolean isFormObject() -> isFormObject
jxl.biff.drawing.EscherAtom -> jxl.biff.drawing.EscherAtom:
    jxl.common.Logger logger -> logger
    byte[] getData() -> getData
jxl.biff.drawing.EscherContainer -> jxl.biff.drawing.EscherContainer:
    jxl.common.Logger logger -> logger
    boolean initialized -> initialized
    java.util.ArrayList children -> children
    jxl.biff.drawing.EscherRecord[] getChildren() -> getChildren
    void add(jxl.biff.drawing.EscherRecord) -> add
    void remove(jxl.biff.drawing.EscherRecord) -> remove
    void initialize() -> initialize
    byte[] getData() -> getData
jxl.biff.drawing.EscherDisplay -> jxl.biff.drawing.EscherDisplay:
    jxl.biff.drawing.EscherStream stream -> stream
    java.io.BufferedWriter writer -> writer
    void display() -> display
    void displayContainer(jxl.biff.drawing.EscherContainer,int) -> displayContainer
    void displayRecord(jxl.biff.drawing.EscherRecord,int) -> displayRecord
    void indent(int) -> indent
jxl.biff.drawing.EscherRecord -> jxl.biff.drawing.EscherRecord:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.EscherRecordData data -> data
    int HEADER_LENGTH -> HEADER_LENGTH
    void setContainer(boolean) -> setContainer
    int getLength() -> getLength
    jxl.biff.drawing.EscherStream getEscherStream() -> getEscherStream
    int getPos() -> getPos
    int getInstance() -> getInstance
    void setInstance(int) -> setInstance
    void setVersion(int) -> setVersion
    jxl.biff.drawing.EscherRecordType getType() -> getType
    byte[] getData() -> getData
    byte[] setHeaderData(byte[]) -> setHeaderData
    byte[] getBytes() -> getBytes
    int getStreamLength() -> getStreamLength
    jxl.biff.drawing.EscherRecordData getEscherData() -> getEscherData
jxl.biff.drawing.EscherRecordData -> jxl.biff.drawing.EscherRecordData:
    jxl.common.Logger logger -> logger
    int pos -> pos
    int instance -> instance
    int version -> version
    int recordId -> recordId
    int length -> length
    int streamLength -> streamLength
    boolean container -> container
    jxl.biff.drawing.EscherRecordType type -> type
    jxl.biff.drawing.EscherStream escherStream -> escherStream
    boolean isContainer() -> isContainer
    int getLength() -> getLength
    int getRecordId() -> getRecordId
    jxl.biff.drawing.EscherStream getDrawingGroup() -> getDrawingGroup
    int getPos() -> getPos
    jxl.biff.drawing.EscherRecordType getType() -> getType
    int getInstance() -> getInstance
    void setContainer(boolean) -> setContainer
    void setInstance(int) -> setInstance
    void setLength(int) -> setLength
    void setVersion(int) -> setVersion
    byte[] setHeaderData(byte[]) -> setHeaderData
    jxl.biff.drawing.EscherStream getEscherStream() -> getEscherStream
    byte[] getBytes() -> getBytes
    int getStreamLength() -> getStreamLength
jxl.biff.drawing.EscherRecordType -> jxl.biff.drawing.EscherRecordType:
    int value -> value
    jxl.biff.drawing.EscherRecordType[] types -> types
    jxl.biff.drawing.EscherRecordType UNKNOWN -> UNKNOWN
    jxl.biff.drawing.EscherRecordType DGG_CONTAINER -> DGG_CONTAINER
    jxl.biff.drawing.EscherRecordType BSTORE_CONTAINER -> BSTORE_CONTAINER
    jxl.biff.drawing.EscherRecordType DG_CONTAINER -> DG_CONTAINER
    jxl.biff.drawing.EscherRecordType SPGR_CONTAINER -> SPGR_CONTAINER
    jxl.biff.drawing.EscherRecordType SP_CONTAINER -> SP_CONTAINER
    jxl.biff.drawing.EscherRecordType DGG -> DGG
    jxl.biff.drawing.EscherRecordType BSE -> BSE
    jxl.biff.drawing.EscherRecordType DG -> DG
    jxl.biff.drawing.EscherRecordType SPGR -> SPGR
    jxl.biff.drawing.EscherRecordType SP -> SP
    jxl.biff.drawing.EscherRecordType OPT -> OPT
    jxl.biff.drawing.EscherRecordType CLIENT_ANCHOR -> CLIENT_ANCHOR
    jxl.biff.drawing.EscherRecordType CLIENT_DATA -> CLIENT_DATA
    jxl.biff.drawing.EscherRecordType CLIENT_TEXT_BOX -> CLIENT_TEXT_BOX
    jxl.biff.drawing.EscherRecordType SPLIT_MENU_COLORS -> SPLIT_MENU_COLORS
    int getValue() -> getValue
    jxl.biff.drawing.EscherRecordType getType(int) -> getType
jxl.biff.drawing.EscherStream -> jxl.biff.drawing.EscherStream:
    byte[] getData() -> getData
jxl.biff.drawing.MsoDrawingGroupRecord -> jxl.biff.drawing.MsoDrawingGroupRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.drawing.MsoDrawingRecord -> jxl.biff.drawing.MsoDrawingRecord:
    jxl.common.Logger logger -> logger
    boolean first -> first
    byte[] data -> data
    byte[] getData() -> getData
    jxl.read.biff.Record getRecord() -> getRecord
    void setFirst() -> setFirst
    boolean isFirst() -> isFirst
jxl.biff.drawing.NoteRecord -> jxl.biff.drawing.NoteRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int row -> row
    int column -> column
    int objectId -> objectId
    byte[] getData() -> getData
    int getRow() -> getRow
    int getColumn() -> getColumn
    int getObjectId() -> getObjectId
jxl.biff.drawing.ObjRecord -> jxl.biff.drawing.ObjRecord:
    jxl.common.Logger logger -> logger
    jxl.biff.drawing.ObjRecord$ObjType type -> type
    boolean read -> read
    int objectId -> objectId
    jxl.biff.drawing.ObjRecord$ObjType GROUP -> GROUP
    jxl.biff.drawing.ObjRecord$ObjType LINE -> LINE
    jxl.biff.drawing.ObjRecord$ObjType RECTANGLE -> RECTANGLE
    jxl.biff.drawing.ObjRecord$ObjType OVAL -> OVAL
    jxl.biff.drawing.ObjRecord$ObjType ARC -> ARC
    jxl.biff.drawing.ObjRecord$ObjType CHART -> CHART
    jxl.biff.drawing.ObjRecord$ObjType TEXT -> TEXT
    jxl.biff.drawing.ObjRecord$ObjType BUTTON -> BUTTON
    jxl.biff.drawing.ObjRecord$ObjType PICTURE -> PICTURE
    jxl.biff.drawing.ObjRecord$ObjType POLYGON -> POLYGON
    jxl.biff.drawing.ObjRecord$ObjType CHECKBOX -> CHECKBOX
    jxl.biff.drawing.ObjRecord$ObjType OPTION -> OPTION
    jxl.biff.drawing.ObjRecord$ObjType EDITBOX -> EDITBOX
    jxl.biff.drawing.ObjRecord$ObjType LABEL -> LABEL
    jxl.biff.drawing.ObjRecord$ObjType DIALOGUEBOX -> DIALOGUEBOX
    jxl.biff.drawing.ObjRecord$ObjType SPINBOX -> SPINBOX
    jxl.biff.drawing.ObjRecord$ObjType SCROLLBAR -> SCROLLBAR
    jxl.biff.drawing.ObjRecord$ObjType LISTBOX -> LISTBOX
    jxl.biff.drawing.ObjRecord$ObjType GROUPBOX -> GROUPBOX
    jxl.biff.drawing.ObjRecord$ObjType COMBOBOX -> COMBOBOX
    jxl.biff.drawing.ObjRecord$ObjType MSOFFICEDRAWING -> MSOFFICEDRAWING
    jxl.biff.drawing.ObjRecord$ObjType FORMCONTROL -> FORMCONTROL
    jxl.biff.drawing.ObjRecord$ObjType EXCELNOTE -> EXCELNOTE
    jxl.biff.drawing.ObjRecord$ObjType UNKNOWN -> UNKNOWN
    int COMMON_DATA_LENGTH -> COMMON_DATA_LENGTH
    int CLIPBOARD_FORMAT_LENGTH -> CLIPBOARD_FORMAT_LENGTH
    int PICTURE_OPTION_LENGTH -> PICTURE_OPTION_LENGTH
    int NOTE_STRUCTURE_LENGTH -> NOTE_STRUCTURE_LENGTH
    int COMBOBOX_STRUCTURE_LENGTH -> COMBOBOX_STRUCTURE_LENGTH
    int END_LENGTH -> END_LENGTH
    byte[] getData() -> getData
    byte[] getPictureData() -> getPictureData
    byte[] getNoteData() -> getNoteData
    byte[] getComboBoxData() -> getComboBoxData
    jxl.read.biff.Record getRecord() -> getRecord
    jxl.biff.drawing.ObjRecord$ObjType getType() -> getType
    int getObjectId() -> getObjectId
jxl.biff.drawing.ObjRecord$ObjType -> jxl.biff.drawing.ObjRecord$ObjType:
    int value -> value
    java.lang.String desc -> desc
    jxl.biff.drawing.ObjRecord$ObjType[] types -> types
    java.lang.String toString() -> toString
    jxl.biff.drawing.ObjRecord$ObjType getType(int) -> getType
jxl.biff.drawing.Opt -> jxl.biff.drawing.Opt:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int numProperties -> numProperties
    java.util.ArrayList properties -> properties
    void readProperties() -> readProperties
    byte[] getData() -> getData
    void addProperty(int,boolean,boolean,int) -> addProperty
    void addProperty(int,boolean,boolean,int,java.lang.String) -> addProperty
    jxl.biff.drawing.Opt$Property getProperty(int) -> getProperty
jxl.biff.drawing.Opt$Property -> jxl.biff.drawing.Opt$Property:
    int id -> id
    boolean blipId -> blipId
    boolean complex -> complex
    int value -> value
    java.lang.String stringValue -> stringValue
jxl.biff.drawing.Origin -> jxl.biff.drawing.Origin:
    jxl.biff.drawing.Origin READ -> READ
    jxl.biff.drawing.Origin WRITE -> WRITE
    jxl.biff.drawing.Origin READ_WRITE -> READ_WRITE
jxl.biff.drawing.PNGReader -> jxl.biff.drawing.PNGReader:
    byte[] pngData -> pngData
    jxl.biff.drawing.Chunk ihdr -> ihdr
    jxl.biff.drawing.Chunk phys -> phys
    int pixelWidth -> pixelWidth
    int pixelHeight -> pixelHeight
    int verticalResolution -> verticalResolution
    int horizontalResolution -> horizontalResolution
    int resolutionUnit -> resolutionUnit
    byte[] PNG_MAGIC_NUMBER -> PNG_MAGIC_NUMBER
    void read() -> read
    int getInt(byte,byte,byte,byte) -> getInt
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getHorizontalResolution() -> getHorizontalResolution
    int getVerticalResolution() -> getVerticalResolution
    void main(java.lang.String[]) -> main
jxl.biff.drawing.ShapeType -> jxl.biff.drawing.ShapeType:
    int value -> value
    jxl.biff.drawing.ShapeType[] types -> types
    jxl.biff.drawing.ShapeType MIN -> MIN
    jxl.biff.drawing.ShapeType PICTURE_FRAME -> PICTURE_FRAME
    jxl.biff.drawing.ShapeType HOST_CONTROL -> HOST_CONTROL
    jxl.biff.drawing.ShapeType TEXT_BOX -> TEXT_BOX
    jxl.biff.drawing.ShapeType UNKNOWN -> UNKNOWN
    jxl.biff.drawing.ShapeType getType(int) -> getType
    int getValue() -> getValue
jxl.biff.drawing.SheetDrawingWriter -> jxl.biff.drawing.SheetDrawingWriter:
    jxl.common.Logger logger -> logger
    java.util.ArrayList drawings -> drawings
    boolean drawingsModified -> drawingsModified
    jxl.biff.drawing.Chart[] charts -> charts
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    void setDrawings(java.util.ArrayList,boolean) -> setDrawings
    void write(jxl.write.biff.File) -> write
    void writeUnmodified(jxl.write.biff.File) -> writeUnmodified
    void setCharts(jxl.biff.drawing.Chart[]) -> setCharts
    jxl.biff.drawing.Chart[] getCharts() -> getCharts
jxl.biff.drawing.Sp -> jxl.biff.drawing.Sp:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int shapeType -> shapeType
    int shapeId -> shapeId
    int persistenceFlags -> persistenceFlags
    int getShapeId() -> getShapeId
    int getShapeType() -> getShapeType
    byte[] getData() -> getData
jxl.biff.drawing.SpContainer -> jxl.biff.drawing.SpContainer:
jxl.biff.drawing.Spgr -> jxl.biff.drawing.Spgr:
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.drawing.SpgrContainer -> jxl.biff.drawing.SpgrContainer:
    jxl.common.Logger logger -> logger
jxl.biff.drawing.SplitMenuColors -> jxl.biff.drawing.SplitMenuColors:
    byte[] data -> data
    byte[] getData() -> getData
jxl.biff.drawing.TextObjectRecord -> jxl.biff.drawing.TextObjectRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int textLength -> textLength
    int getTextLength() -> getTextLength
    byte[] getData() -> getData
jxl.biff.formula.Add -> jxl.biff.formula.Add:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.Area -> jxl.biff.formula.Area:
    jxl.common.Logger logger -> logger
    int columnFirst -> columnFirst
    int rowFirst -> rowFirst
    int columnLast -> columnLast
    int rowLast -> rowLast
    boolean columnFirstRelative -> columnFirstRelative
    boolean rowFirstRelative -> rowFirstRelative
    boolean columnLastRelative -> columnLastRelative
    boolean rowLastRelative -> rowLastRelative
    int getFirstColumn() -> getFirstColumn
    int getFirstRow() -> getFirstRow
    int getLastColumn() -> getLastColumn
    int getLastRow() -> getLastRow
    int read(byte[],int) -> read
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void setRangeData(int,int,int,int,boolean,boolean,boolean,boolean) -> setRangeData
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Area3d -> jxl.biff.formula.Area3d:
    jxl.common.Logger logger -> logger
    int sheet -> sheet
    int columnFirst -> columnFirst
    int rowFirst -> rowFirst
    int columnLast -> columnLast
    int rowLast -> rowLast
    boolean columnFirstRelative -> columnFirstRelative
    boolean rowFirstRelative -> rowFirstRelative
    boolean columnLastRelative -> columnLastRelative
    boolean rowLastRelative -> rowLastRelative
    jxl.biff.formula.ExternalSheet workbook -> workbook
    int getFirstColumn() -> getFirstColumn
    int getFirstRow() -> getFirstRow
    int getLastColumn() -> getLastColumn
    int getLastRow() -> getLastRow
    int read(byte[],int) -> read
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void setRangeData(int,int,int,int,int,boolean,boolean,boolean,boolean) -> setRangeData
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.ArgumentSeparator -> jxl.biff.formula.ArgumentSeparator:
jxl.biff.formula.Attribute -> jxl.biff.formula.Attribute:
    jxl.common.Logger logger -> logger
    int options -> options
    int word -> word
    jxl.WorkbookSettings settings -> settings
    int SUM_MASK -> SUM_MASK
    int IF_MASK -> IF_MASK
    int CHOOSE_MASK -> CHOOSE_MASK
    int GOTO_MASK -> GOTO_MASK
    jxl.biff.formula.VariableArgFunction ifConditions -> ifConditions
    void setIfConditions(jxl.biff.formula.VariableArgFunction) -> setIfConditions
    int read(byte[],int) -> read
    boolean isFunction() -> isFunction
    boolean isSum() -> isSum
    boolean isIf() -> isIf
    boolean isGoto() -> isGoto
    boolean isChoose() -> isChoose
    void getOperands(java.util.Stack) -> getOperands
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    byte[] getIf() -> getIf
    int getPrecedence() -> getPrecedence
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.BinaryOperator -> jxl.biff.formula.BinaryOperator:
    jxl.common.Logger logger -> logger
    int read(byte[],int) -> read
    void getOperands(java.util.Stack) -> getOperands
    void getString(java.lang.StringBuffer) -> getString
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    byte[] getBytes() -> getBytes
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.BooleanValue -> jxl.biff.formula.BooleanValue:
    boolean value -> value
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.BuiltInFunction -> jxl.biff.formula.BuiltInFunction:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.Function function -> function
    jxl.WorkbookSettings settings -> settings
    int read(byte[],int) -> read
    void getOperands(java.util.Stack) -> getOperands
    void getString(java.lang.StringBuffer) -> getString
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
    byte[] getBytes() -> getBytes
    int getPrecedence() -> getPrecedence
jxl.biff.formula.CellReference -> jxl.biff.formula.CellReference:
    jxl.common.Logger logger -> logger
    boolean columnRelative -> columnRelative
    boolean rowRelative -> rowRelative
    int column -> column
    int row -> row
    jxl.Cell relativeTo -> relativeTo
    int read(byte[],int) -> read
    int getColumn() -> getColumn
    int getRow() -> getRow
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.CellReference3d -> jxl.biff.formula.CellReference3d:
    jxl.common.Logger logger -> logger
    boolean columnRelative -> columnRelative
    boolean rowRelative -> rowRelative
    int column -> column
    int row -> row
    jxl.Cell relativeTo -> relativeTo
    int sheet -> sheet
    jxl.biff.formula.ExternalSheet workbook -> workbook
    int read(byte[],int) -> read
    int getColumn() -> getColumn
    int getRow() -> getRow
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.CellReferenceError -> jxl.biff.formula.CellReferenceError:
    jxl.common.Logger logger -> logger
    int read(byte[],int) -> read
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.CloseParentheses -> jxl.biff.formula.CloseParentheses:
jxl.biff.formula.ColumnRange -> jxl.biff.formula.ColumnRange:
    jxl.common.Logger logger -> logger
    void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.ColumnRange3d -> jxl.biff.formula.ColumnRange3d:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.ExternalSheet workbook -> workbook
    int sheet -> sheet
    void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.Concatenate -> jxl.biff.formula.Concatenate:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.Divide -> jxl.biff.formula.Divide:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.DoubleValue -> jxl.biff.formula.DoubleValue:
    jxl.common.Logger logger -> logger
    double value -> value
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    double getValue() -> getValue
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Equal -> jxl.biff.formula.Equal:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.ErrorConstant -> jxl.biff.formula.ErrorConstant:
    jxl.biff.formula.FormulaErrorCode error -> error
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.ExternalSheet -> jxl.biff.formula.ExternalSheet:
    java.lang.String getExternalSheetName(int) -> getExternalSheetName
    int getExternalSheetIndex(java.lang.String) -> getExternalSheetIndex
    int getExternalSheetIndex(int) -> getExternalSheetIndex
    int getLastExternalSheetIndex(java.lang.String) -> getLastExternalSheetIndex
    int getLastExternalSheetIndex(int) -> getLastExternalSheetIndex
    jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
jxl.biff.formula.FormulaErrorCode -> jxl.biff.formula.FormulaErrorCode:
    int errorCode -> errorCode
    java.lang.String description -> description
    jxl.biff.formula.FormulaErrorCode[] codes -> codes
    jxl.biff.formula.FormulaErrorCode UNKNOWN -> UNKNOWN
    jxl.biff.formula.FormulaErrorCode NULL -> NULL
    jxl.biff.formula.FormulaErrorCode DIV0 -> DIV0
    jxl.biff.formula.FormulaErrorCode VALUE -> VALUE
    jxl.biff.formula.FormulaErrorCode REF -> REF
    jxl.biff.formula.FormulaErrorCode NAME -> NAME
    jxl.biff.formula.FormulaErrorCode NUM -> NUM
    jxl.biff.formula.FormulaErrorCode NA -> NA
    int getCode() -> getCode
    java.lang.String getDescription() -> getDescription
    jxl.biff.formula.FormulaErrorCode getErrorCode(int) -> getErrorCode
    jxl.biff.formula.FormulaErrorCode getErrorCode(java.lang.String) -> getErrorCode
jxl.biff.formula.FormulaException -> jxl.biff.formula.FormulaException:
    jxl.biff.formula.FormulaException$FormulaMessage UNRECOGNIZED_TOKEN -> UNRECOGNIZED_TOKEN
    jxl.biff.formula.FormulaException$FormulaMessage UNRECOGNIZED_FUNCTION -> UNRECOGNIZED_FUNCTION
    jxl.biff.formula.FormulaException$FormulaMessage BIFF8_SUPPORTED -> BIFF8_SUPPORTED
    jxl.biff.formula.FormulaException$FormulaMessage LEXICAL_ERROR -> LEXICAL_ERROR
    jxl.biff.formula.FormulaException$FormulaMessage INCORRECT_ARGUMENTS -> INCORRECT_ARGUMENTS
    jxl.biff.formula.FormulaException$FormulaMessage SHEET_REF_NOT_FOUND -> SHEET_REF_NOT_FOUND
    jxl.biff.formula.FormulaException$FormulaMessage CELL_NAME_NOT_FOUND -> CELL_NAME_NOT_FOUND
jxl.biff.formula.FormulaException$FormulaMessage -> jxl.biff.formula.FormulaException$FormulaMessage:
    java.lang.String message -> message
    java.lang.String getMessage() -> getMessage
    java.lang.String access$000(jxl.biff.formula.FormulaException$FormulaMessage) -> access$000
jxl.biff.formula.FormulaParser -> jxl.biff.formula.FormulaParser:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.Parser parser -> parser
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void parse() -> parse
    java.lang.String getFormula() -> getFormula
    byte[] getBytes() -> getBytes
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    boolean handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Function -> jxl.biff.formula.Function:
    jxl.common.Logger logger -> logger
    int code -> code
    java.lang.String name -> name
    int numArgs -> numArgs
    jxl.biff.formula.Function[] functions -> functions
    jxl.biff.formula.Function COUNT -> COUNT
    jxl.biff.formula.Function ATTRIBUTE -> ATTRIBUTE
    jxl.biff.formula.Function ISNA -> ISNA
    jxl.biff.formula.Function ISERROR -> ISERROR
    jxl.biff.formula.Function SUM -> SUM
    jxl.biff.formula.Function AVERAGE -> AVERAGE
    jxl.biff.formula.Function MIN -> MIN
    jxl.biff.formula.Function MAX -> MAX
    jxl.biff.formula.Function ROW -> ROW
    jxl.biff.formula.Function COLUMN -> COLUMN
    jxl.biff.formula.Function NA -> NA
    jxl.biff.formula.Function NPV -> NPV
    jxl.biff.formula.Function STDEV -> STDEV
    jxl.biff.formula.Function DOLLAR -> DOLLAR
    jxl.biff.formula.Function FIXED -> FIXED
    jxl.biff.formula.Function SIN -> SIN
    jxl.biff.formula.Function COS -> COS
    jxl.biff.formula.Function TAN -> TAN
    jxl.biff.formula.Function ATAN -> ATAN
    jxl.biff.formula.Function PI -> PI
    jxl.biff.formula.Function SQRT -> SQRT
    jxl.biff.formula.Function EXP -> EXP
    jxl.biff.formula.Function LN -> LN
    jxl.biff.formula.Function LOG10 -> LOG10
    jxl.biff.formula.Function ABS -> ABS
    jxl.biff.formula.Function INT -> INT
    jxl.biff.formula.Function SIGN -> SIGN
    jxl.biff.formula.Function ROUND -> ROUND
    jxl.biff.formula.Function LOOKUP -> LOOKUP
    jxl.biff.formula.Function INDEX -> INDEX
    jxl.biff.formula.Function REPT -> REPT
    jxl.biff.formula.Function MID -> MID
    jxl.biff.formula.Function LEN -> LEN
    jxl.biff.formula.Function VALUE -> VALUE
    jxl.biff.formula.Function TRUE -> TRUE
    jxl.biff.formula.Function FALSE -> FALSE
    jxl.biff.formula.Function AND -> AND
    jxl.biff.formula.Function OR -> OR
    jxl.biff.formula.Function NOT -> NOT
    jxl.biff.formula.Function MOD -> MOD
    jxl.biff.formula.Function DCOUNT -> DCOUNT
    jxl.biff.formula.Function DSUM -> DSUM
    jxl.biff.formula.Function DAVERAGE -> DAVERAGE
    jxl.biff.formula.Function DMIN -> DMIN
    jxl.biff.formula.Function DMAX -> DMAX
    jxl.biff.formula.Function DSTDEV -> DSTDEV
    jxl.biff.formula.Function VAR -> VAR
    jxl.biff.formula.Function DVAR -> DVAR
    jxl.biff.formula.Function TEXT -> TEXT
    jxl.biff.formula.Function LINEST -> LINEST
    jxl.biff.formula.Function TREND -> TREND
    jxl.biff.formula.Function LOGEST -> LOGEST
    jxl.biff.formula.Function GROWTH -> GROWTH
    jxl.biff.formula.Function PV -> PV
    jxl.biff.formula.Function FV -> FV
    jxl.biff.formula.Function NPER -> NPER
    jxl.biff.formula.Function PMT -> PMT
    jxl.biff.formula.Function RATE -> RATE
    jxl.biff.formula.Function RAND -> RAND
    jxl.biff.formula.Function MATCH -> MATCH
    jxl.biff.formula.Function DATE -> DATE
    jxl.biff.formula.Function TIME -> TIME
    jxl.biff.formula.Function DAY -> DAY
    jxl.biff.formula.Function MONTH -> MONTH
    jxl.biff.formula.Function YEAR -> YEAR
    jxl.biff.formula.Function WEEKDAY -> WEEKDAY
    jxl.biff.formula.Function HOUR -> HOUR
    jxl.biff.formula.Function MINUTE -> MINUTE
    jxl.biff.formula.Function SECOND -> SECOND
    jxl.biff.formula.Function NOW -> NOW
    jxl.biff.formula.Function AREAS -> AREAS
    jxl.biff.formula.Function ROWS -> ROWS
    jxl.biff.formula.Function COLUMNS -> COLUMNS
    jxl.biff.formula.Function OFFSET -> OFFSET
    jxl.biff.formula.Function SEARCH -> SEARCH
    jxl.biff.formula.Function TRANSPOSE -> TRANSPOSE
    jxl.biff.formula.Function ERROR -> ERROR
    jxl.biff.formula.Function TYPE -> TYPE
    jxl.biff.formula.Function ATAN2 -> ATAN2
    jxl.biff.formula.Function ASIN -> ASIN
    jxl.biff.formula.Function ACOS -> ACOS
    jxl.biff.formula.Function CHOOSE -> CHOOSE
    jxl.biff.formula.Function HLOOKUP -> HLOOKUP
    jxl.biff.formula.Function VLOOKUP -> VLOOKUP
    jxl.biff.formula.Function ISREF -> ISREF
    jxl.biff.formula.Function LOG -> LOG
    jxl.biff.formula.Function CHAR -> CHAR
    jxl.biff.formula.Function LOWER -> LOWER
    jxl.biff.formula.Function UPPER -> UPPER
    jxl.biff.formula.Function PROPER -> PROPER
    jxl.biff.formula.Function LEFT -> LEFT
    jxl.biff.formula.Function RIGHT -> RIGHT
    jxl.biff.formula.Function EXACT -> EXACT
    jxl.biff.formula.Function TRIM -> TRIM
    jxl.biff.formula.Function REPLACE -> REPLACE
    jxl.biff.formula.Function SUBSTITUTE -> SUBSTITUTE
    jxl.biff.formula.Function CODE -> CODE
    jxl.biff.formula.Function FIND -> FIND
    jxl.biff.formula.Function CELL -> CELL
    jxl.biff.formula.Function ISERR -> ISERR
    jxl.biff.formula.Function ISTEXT -> ISTEXT
    jxl.biff.formula.Function ISNUMBER -> ISNUMBER
    jxl.biff.formula.Function ISBLANK -> ISBLANK
    jxl.biff.formula.Function T -> T
    jxl.biff.formula.Function N -> N
    jxl.biff.formula.Function DATEVALUE -> DATEVALUE
    jxl.biff.formula.Function TIMEVALUE -> TIMEVALUE
    jxl.biff.formula.Function SLN -> SLN
    jxl.biff.formula.Function SYD -> SYD
    jxl.biff.formula.Function DDB -> DDB
    jxl.biff.formula.Function INDIRECT -> INDIRECT
    jxl.biff.formula.Function CLEAN -> CLEAN
    jxl.biff.formula.Function MDETERM -> MDETERM
    jxl.biff.formula.Function MINVERSE -> MINVERSE
    jxl.biff.formula.Function MMULT -> MMULT
    jxl.biff.formula.Function IPMT -> IPMT
    jxl.biff.formula.Function PPMT -> PPMT
    jxl.biff.formula.Function COUNTA -> COUNTA
    jxl.biff.formula.Function PRODUCT -> PRODUCT
    jxl.biff.formula.Function FACT -> FACT
    jxl.biff.formula.Function DPRODUCT -> DPRODUCT
    jxl.biff.formula.Function ISNONTEXT -> ISNONTEXT
    jxl.biff.formula.Function STDEVP -> STDEVP
    jxl.biff.formula.Function VARP -> VARP
    jxl.biff.formula.Function DSTDEVP -> DSTDEVP
    jxl.biff.formula.Function DVARP -> DVARP
    jxl.biff.formula.Function TRUNC -> TRUNC
    jxl.biff.formula.Function ISLOGICAL -> ISLOGICAL
    jxl.biff.formula.Function DCOUNTA -> DCOUNTA
    jxl.biff.formula.Function FINDB -> FINDB
    jxl.biff.formula.Function SEARCHB -> SEARCHB
    jxl.biff.formula.Function REPLACEB -> REPLACEB
    jxl.biff.formula.Function LEFTB -> LEFTB
    jxl.biff.formula.Function RIGHTB -> RIGHTB
    jxl.biff.formula.Function MIDB -> MIDB
    jxl.biff.formula.Function LENB -> LENB
    jxl.biff.formula.Function ROUNDUP -> ROUNDUP
    jxl.biff.formula.Function ROUNDDOWN -> ROUNDDOWN
    jxl.biff.formula.Function RANK -> RANK
    jxl.biff.formula.Function ADDRESS -> ADDRESS
    jxl.biff.formula.Function AYS360 -> AYS360
    jxl.biff.formula.Function ODAY -> ODAY
    jxl.biff.formula.Function VDB -> VDB
    jxl.biff.formula.Function MEDIAN -> MEDIAN
    jxl.biff.formula.Function SUMPRODUCT -> SUMPRODUCT
    jxl.biff.formula.Function SINH -> SINH
    jxl.biff.formula.Function COSH -> COSH
    jxl.biff.formula.Function TANH -> TANH
    jxl.biff.formula.Function ASINH -> ASINH
    jxl.biff.formula.Function ACOSH -> ACOSH
    jxl.biff.formula.Function ATANH -> ATANH
    jxl.biff.formula.Function INFO -> INFO
    jxl.biff.formula.Function AVEDEV -> AVEDEV
    jxl.biff.formula.Function BETADIST -> BETADIST
    jxl.biff.formula.Function GAMMALN -> GAMMALN
    jxl.biff.formula.Function BETAINV -> BETAINV
    jxl.biff.formula.Function BINOMDIST -> BINOMDIST
    jxl.biff.formula.Function CHIDIST -> CHIDIST
    jxl.biff.formula.Function CHIINV -> CHIINV
    jxl.biff.formula.Function COMBIN -> COMBIN
    jxl.biff.formula.Function CONFIDENCE -> CONFIDENCE
    jxl.biff.formula.Function CRITBINOM -> CRITBINOM
    jxl.biff.formula.Function EVEN -> EVEN
    jxl.biff.formula.Function EXPONDIST -> EXPONDIST
    jxl.biff.formula.Function FDIST -> FDIST
    jxl.biff.formula.Function FINV -> FINV
    jxl.biff.formula.Function FISHER -> FISHER
    jxl.biff.formula.Function FISHERINV -> FISHERINV
    jxl.biff.formula.Function FLOOR -> FLOOR
    jxl.biff.formula.Function GAMMADIST -> GAMMADIST
    jxl.biff.formula.Function GAMMAINV -> GAMMAINV
    jxl.biff.formula.Function CEILING -> CEILING
    jxl.biff.formula.Function HYPGEOMDIST -> HYPGEOMDIST
    jxl.biff.formula.Function LOGNORMDIST -> LOGNORMDIST
    jxl.biff.formula.Function LOGINV -> LOGINV
    jxl.biff.formula.Function NEGBINOMDIST -> NEGBINOMDIST
    jxl.biff.formula.Function NORMDIST -> NORMDIST
    jxl.biff.formula.Function NORMSDIST -> NORMSDIST
    jxl.biff.formula.Function NORMINV -> NORMINV
    jxl.biff.formula.Function NORMSINV -> NORMSINV
    jxl.biff.formula.Function STANDARDIZE -> STANDARDIZE
    jxl.biff.formula.Function ODD -> ODD
    jxl.biff.formula.Function PERMUT -> PERMUT
    jxl.biff.formula.Function POISSON -> POISSON
    jxl.biff.formula.Function TDIST -> TDIST
    jxl.biff.formula.Function WEIBULL -> WEIBULL
    jxl.biff.formula.Function SUMXMY2 -> SUMXMY2
    jxl.biff.formula.Function SUMX2MY2 -> SUMX2MY2
    jxl.biff.formula.Function SUMX2PY2 -> SUMX2PY2
    jxl.biff.formula.Function CHITEST -> CHITEST
    jxl.biff.formula.Function CORREL -> CORREL
    jxl.biff.formula.Function COVAR -> COVAR
    jxl.biff.formula.Function FORECAST -> FORECAST
    jxl.biff.formula.Function FTEST -> FTEST
    jxl.biff.formula.Function INTERCEPT -> INTERCEPT
    jxl.biff.formula.Function PEARSON -> PEARSON
    jxl.biff.formula.Function RSQ -> RSQ
    jxl.biff.formula.Function STEYX -> STEYX
    jxl.biff.formula.Function SLOPE -> SLOPE
    jxl.biff.formula.Function TTEST -> TTEST
    jxl.biff.formula.Function PROB -> PROB
    jxl.biff.formula.Function DEVSQ -> DEVSQ
    jxl.biff.formula.Function GEOMEAN -> GEOMEAN
    jxl.biff.formula.Function HARMEAN -> HARMEAN
    jxl.biff.formula.Function SUMSQ -> SUMSQ
    jxl.biff.formula.Function KURT -> KURT
    jxl.biff.formula.Function SKEW -> SKEW
    jxl.biff.formula.Function ZTEST -> ZTEST
    jxl.biff.formula.Function LARGE -> LARGE
    jxl.biff.formula.Function SMALL -> SMALL
    jxl.biff.formula.Function QUARTILE -> QUARTILE
    jxl.biff.formula.Function PERCENTILE -> PERCENTILE
    jxl.biff.formula.Function PERCENTRANK -> PERCENTRANK
    jxl.biff.formula.Function MODE -> MODE
    jxl.biff.formula.Function TRIMMEAN -> TRIMMEAN
    jxl.biff.formula.Function TINV -> TINV
    jxl.biff.formula.Function CONCATENATE -> CONCATENATE
    jxl.biff.formula.Function POWER -> POWER
    jxl.biff.formula.Function RADIANS -> RADIANS
    jxl.biff.formula.Function DEGREES -> DEGREES
    jxl.biff.formula.Function SUBTOTAL -> SUBTOTAL
    jxl.biff.formula.Function SUMIF -> SUMIF
    jxl.biff.formula.Function COUNTIF -> COUNTIF
    jxl.biff.formula.Function COUNTBLANK -> COUNTBLANK
    jxl.biff.formula.Function HYPERLINK -> HYPERLINK
    jxl.biff.formula.Function AVERAGEA -> AVERAGEA
    jxl.biff.formula.Function MAXA -> MAXA
    jxl.biff.formula.Function MINA -> MINA
    jxl.biff.formula.Function STDEVPA -> STDEVPA
    jxl.biff.formula.Function VARPA -> VARPA
    jxl.biff.formula.Function STDEVA -> STDEVA
    jxl.biff.formula.Function VARA -> VARA
    jxl.biff.formula.Function IF -> IF
    jxl.biff.formula.Function UNKNOWN -> UNKNOWN
    int hashCode() -> hashCode
    int getCode() -> getCode
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String getName(jxl.WorkbookSettings) -> getName
    int getNumArgs() -> getNumArgs
    jxl.biff.formula.Function getFunction(int) -> getFunction
    jxl.biff.formula.Function getFunction(java.lang.String,jxl.WorkbookSettings) -> getFunction
    jxl.biff.formula.Function[] getFunctions() -> getFunctions
jxl.biff.formula.FunctionNames -> jxl.biff.formula.FunctionNames:
    jxl.common.Logger logger -> logger
    java.util.HashMap names -> names
    java.util.HashMap functions -> functions
    jxl.biff.formula.Function getFunction(java.lang.String) -> getFunction
    java.lang.String getName(jxl.biff.formula.Function) -> getName
jxl.biff.formula.GreaterEqual -> jxl.biff.formula.GreaterEqual:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.GreaterThan -> jxl.biff.formula.GreaterThan:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.IntegerValue -> jxl.biff.formula.IntegerValue:
    jxl.common.Logger logger -> logger
    double value -> value
    boolean outOfRange -> outOfRange
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    double getValue() -> getValue
    boolean isOutOfRange() -> isOutOfRange
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.LessEqual -> jxl.biff.formula.LessEqual:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.LessThan -> jxl.biff.formula.LessThan:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.MemArea -> jxl.biff.formula.MemArea:
    void getString(java.lang.StringBuffer) -> getString
    int read(byte[],int) -> read
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.MemFunc -> jxl.biff.formula.MemFunc:
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Minus -> jxl.biff.formula.Minus:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.Operator getBinaryOperator() -> getBinaryOperator
    jxl.biff.formula.Operator getUnaryOperator() -> getUnaryOperator
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.MissingArg -> jxl.biff.formula.MissingArg:
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Multiply -> jxl.biff.formula.Multiply:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.Name -> jxl.biff.formula.Name:
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.NameRange -> jxl.biff.formula.NameRange:
    jxl.common.Logger logger -> logger
    jxl.biff.WorkbookMethods nameTable -> nameTable
    java.lang.String name -> name
    int index -> index
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.NotEqual -> jxl.biff.formula.NotEqual:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.NumberValue -> jxl.biff.formula.NumberValue:
    double getValue() -> getValue
    void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.OpenParentheses -> jxl.biff.formula.OpenParentheses:
jxl.biff.formula.Operand -> jxl.biff.formula.Operand:
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
jxl.biff.formula.Operator -> jxl.biff.formula.Operator:
    jxl.biff.formula.ParseItem[] operands -> operands
    void setOperandAlternateCode() -> setOperandAlternateCode
    void add(jxl.biff.formula.ParseItem) -> add
    void getOperands(java.util.Stack) -> getOperands
    jxl.biff.formula.ParseItem[] getOperands() -> getOperands
    int getPrecedence() -> getPrecedence
jxl.biff.formula.Parenthesis -> jxl.biff.formula.Parenthesis:
    int read(byte[],int) -> read
    void getOperands(java.util.Stack) -> getOperands
    void getString(java.lang.StringBuffer) -> getString
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
    jxl.biff.formula.Token getToken() -> getToken
    byte[] getBytes() -> getBytes
    int getPrecedence() -> getPrecedence
jxl.biff.formula.ParseContext -> jxl.biff.formula.ParseContext:
    jxl.biff.formula.ParseContext DEFAULT -> DEFAULT
    jxl.biff.formula.ParseContext DATA_VALIDATION -> DATA_VALIDATION
jxl.biff.formula.ParseItem -> jxl.biff.formula.ParseItem:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.ParseItem parent -> parent
    boolean volatileFunction -> volatileFunction
    boolean alternateCode -> alternateCode
    jxl.biff.formula.ParseContext parseContext -> parseContext
    boolean valid -> valid
    void setParent(jxl.biff.formula.ParseItem) -> setParent
    void setVolatile() -> setVolatile
    void setInvalid() -> setInvalid
    boolean isVolatile() -> isVolatile
    boolean isValid() -> isValid
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
    void setAlternateCode() -> setAlternateCode
    boolean useAlternateCode() -> useAlternateCode
    void setParseContext(jxl.biff.formula.ParseContext) -> setParseContext
    jxl.biff.formula.ParseContext getParseContext() -> getParseContext
jxl.biff.formula.ParsedThing -> jxl.biff.formula.ParsedThing:
    int read(byte[],int) -> read
jxl.biff.formula.Parser -> jxl.biff.formula.Parser:
    void parse() -> parse
    java.lang.String getFormula() -> getFormula
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    boolean handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Percent -> jxl.biff.formula.Percent:
    java.lang.String getSymbol() -> getSymbol
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.Plus -> jxl.biff.formula.Plus:
    jxl.biff.formula.Operator getBinaryOperator() -> getBinaryOperator
    jxl.biff.formula.Operator getUnaryOperator() -> getUnaryOperator
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Power -> jxl.biff.formula.Power:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.RangeSeparator -> jxl.biff.formula.RangeSeparator:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
    byte[] getBytes() -> getBytes
jxl.biff.formula.SharedFormulaArea -> jxl.biff.formula.SharedFormulaArea:
    int columnFirst -> columnFirst
    int rowFirst -> rowFirst
    int columnLast -> columnLast
    int rowLast -> rowLast
    boolean columnFirstRelative -> columnFirstRelative
    boolean rowFirstRelative -> rowFirstRelative
    boolean columnLastRelative -> columnLastRelative
    boolean rowLastRelative -> rowLastRelative
    jxl.Cell relativeTo -> relativeTo
    int getFirstColumn() -> getFirstColumn
    int getFirstRow() -> getFirstRow
    int getLastColumn() -> getLastColumn
    int getLastRow() -> getLastRow
    int read(byte[],int) -> read
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.SharedFormulaCellReference -> jxl.biff.formula.SharedFormulaCellReference:
    jxl.common.Logger logger -> logger
    boolean columnRelative -> columnRelative
    boolean rowRelative -> rowRelative
    int column -> column
    int row -> row
    jxl.Cell relativeTo -> relativeTo
    int read(byte[],int) -> read
    int getColumn() -> getColumn
    int getRow() -> getRow
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.StringFormulaParser -> jxl.biff.formula.StringFormulaParser:
    jxl.common.Logger logger -> logger
    java.lang.String formula -> formula
    java.lang.String parsedFormula -> parsedFormula
    jxl.biff.formula.ParseItem root -> root
    java.util.Stack arguments -> arguments
    jxl.WorkbookSettings settings -> settings
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    jxl.biff.formula.ParseContext parseContext -> parseContext
    void parse() -> parse
    jxl.biff.formula.ParseItem parseCurrent(java.util.Iterator) -> parseCurrent
    java.util.ArrayList getTokens() -> getTokens
    java.lang.String getFormula() -> getFormula
    byte[] getBytes() -> getBytes
    void handleFunction(jxl.biff.formula.StringFunction,java.util.Iterator,java.util.Stack) -> handleFunction
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleOperand(jxl.biff.formula.Operand,java.util.Stack) -> handleOperand
    boolean handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.StringFunction -> jxl.biff.formula.StringFunction:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.Function function -> function
    java.lang.String functionString -> functionString
    jxl.biff.formula.Function getFunction(jxl.WorkbookSettings) -> getFunction
jxl.biff.formula.StringOperator -> jxl.biff.formula.StringOperator:
    void getOperands(java.util.Stack) -> getOperands
    int getPrecedence() -> getPrecedence
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    jxl.biff.formula.Operator getBinaryOperator() -> getBinaryOperator
    jxl.biff.formula.Operator getUnaryOperator() -> getUnaryOperator
jxl.biff.formula.StringParseItem -> jxl.biff.formula.StringParseItem:
    void getString(java.lang.StringBuffer) -> getString
    byte[] getBytes() -> getBytes
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.StringValue -> jxl.biff.formula.StringValue:
    jxl.common.Logger logger -> logger
    java.lang.String value -> value
    jxl.WorkbookSettings settings -> settings
    int read(byte[],int) -> read
    byte[] getBytes() -> getBytes
    void getString(java.lang.StringBuffer) -> getString
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.SubExpression -> jxl.biff.formula.SubExpression:
    int length -> length
    jxl.biff.formula.ParseItem[] subExpression -> subExpression
    int read(byte[],int) -> read
    void getOperands(java.util.Stack) -> getOperands
    byte[] getBytes() -> getBytes
    int getPrecedence() -> getPrecedence
    int getLength() -> getLength
    void setLength(int) -> setLength
    void setSubExpression(jxl.biff.formula.ParseItem[]) -> setSubExpression
    jxl.biff.formula.ParseItem[] getSubExpression() -> getSubExpression
jxl.biff.formula.Subtract -> jxl.biff.formula.Subtract:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.Token -> jxl.biff.formula.Token:
    int[] value -> value
    java.util.HashMap tokens -> tokens
    jxl.biff.formula.Token REF -> REF
    jxl.biff.formula.Token REF3D -> REF3D
    jxl.biff.formula.Token MISSING_ARG -> MISSING_ARG
    jxl.biff.formula.Token STRING -> STRING
    jxl.biff.formula.Token ERR -> ERR
    jxl.biff.formula.Token BOOL -> BOOL
    jxl.biff.formula.Token INTEGER -> INTEGER
    jxl.biff.formula.Token DOUBLE -> DOUBLE
    jxl.biff.formula.Token REFERR -> REFERR
    jxl.biff.formula.Token REFV -> REFV
    jxl.biff.formula.Token AREAV -> AREAV
    jxl.biff.formula.Token MEM_AREA -> MEM_AREA
    jxl.biff.formula.Token AREA -> AREA
    jxl.biff.formula.Token NAMED_RANGE -> NAMED_RANGE
    jxl.biff.formula.Token NAME -> NAME
    jxl.biff.formula.Token AREA3D -> AREA3D
    jxl.biff.formula.Token UNARY_PLUS -> UNARY_PLUS
    jxl.biff.formula.Token UNARY_MINUS -> UNARY_MINUS
    jxl.biff.formula.Token PERCENT -> PERCENT
    jxl.biff.formula.Token PARENTHESIS -> PARENTHESIS
    jxl.biff.formula.Token ADD -> ADD
    jxl.biff.formula.Token SUBTRACT -> SUBTRACT
    jxl.biff.formula.Token MULTIPLY -> MULTIPLY
    jxl.biff.formula.Token DIVIDE -> DIVIDE
    jxl.biff.formula.Token POWER -> POWER
    jxl.biff.formula.Token CONCAT -> CONCAT
    jxl.biff.formula.Token LESS_THAN -> LESS_THAN
    jxl.biff.formula.Token LESS_EQUAL -> LESS_EQUAL
    jxl.biff.formula.Token EQUAL -> EQUAL
    jxl.biff.formula.Token GREATER_EQUAL -> GREATER_EQUAL
    jxl.biff.formula.Token GREATER_THAN -> GREATER_THAN
    jxl.biff.formula.Token NOT_EQUAL -> NOT_EQUAL
    jxl.biff.formula.Token UNION -> UNION
    jxl.biff.formula.Token RANGE -> RANGE
    jxl.biff.formula.Token FUNCTION -> FUNCTION
    jxl.biff.formula.Token FUNCTIONVARARG -> FUNCTIONVARARG
    jxl.biff.formula.Token ATTRIBUTE -> ATTRIBUTE
    jxl.biff.formula.Token MEM_FUNC -> MEM_FUNC
    jxl.biff.formula.Token UNKNOWN -> UNKNOWN
    byte getCode() -> getCode
    byte getReferenceCode() -> getReferenceCode
    byte getCode2() -> getCode2
    byte getValueCode() -> getValueCode
    jxl.biff.formula.Token getToken(int) -> getToken
jxl.biff.formula.TokenFormulaParser -> jxl.biff.formula.TokenFormulaParser:
    jxl.common.Logger logger -> logger
    byte[] tokenData -> tokenData
    jxl.Cell relativeTo -> relativeTo
    int pos -> pos
    jxl.biff.formula.ParseItem root -> root
    java.util.Stack tokenStack -> tokenStack
    jxl.biff.formula.ExternalSheet workbook -> workbook
    jxl.biff.WorkbookMethods nameTable -> nameTable
    jxl.WorkbookSettings settings -> settings
    jxl.biff.formula.ParseContext parseContext -> parseContext
    void parse() -> parse
    void parseSubExpression(int) -> parseSubExpression
    void handleMemoryFunction(jxl.biff.formula.SubExpression) -> handleMemoryFunction
    void addOperator(jxl.biff.formula.Operator) -> addOperator
    java.lang.String getFormula() -> getFormula
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    byte[] getBytes() -> getBytes
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    boolean handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.UnaryMinus -> jxl.biff.formula.UnaryMinus:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.UnaryOperator -> jxl.biff.formula.UnaryOperator:
    int read(byte[],int) -> read
    void getOperands(java.util.Stack) -> getOperands
    void getString(java.lang.StringBuffer) -> getString
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    byte[] getBytes() -> getBytes
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.UnaryPlus -> jxl.biff.formula.UnaryPlus:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
    void handleImportedCellReferences() -> handleImportedCellReferences
jxl.biff.formula.Union -> jxl.biff.formula.Union:
    java.lang.String getSymbol() -> getSymbol
    jxl.biff.formula.Token getToken() -> getToken
    int getPrecedence() -> getPrecedence
jxl.biff.formula.VariableArgFunction -> jxl.biff.formula.VariableArgFunction:
    jxl.common.Logger logger -> logger
    jxl.biff.formula.Function function -> function
    int arguments -> arguments
    boolean readFromSheet -> readFromSheet
    jxl.WorkbookSettings settings -> settings
    int read(byte[],int) -> read
    void getOperands(java.util.Stack) -> getOperands
    void getString(java.lang.StringBuffer) -> getString
    void adjustRelativeCellReferences(int,int) -> adjustRelativeCellReferences
    void columnInserted(int,int,boolean) -> columnInserted
    void columnRemoved(int,int,boolean) -> columnRemoved
    void rowInserted(int,int,boolean) -> rowInserted
    void rowRemoved(int,int,boolean) -> rowRemoved
    void handleImportedCellReferences() -> handleImportedCellReferences
    jxl.biff.formula.Function getFunction() -> getFunction
    byte[] getBytes() -> getBytes
    int getPrecedence() -> getPrecedence
    void handleSpecialCases() -> handleSpecialCases
jxl.biff.formula.Yylex -> jxl.biff.formula.Yylex:
    int YYEOF -> YYEOF
    int ZZ_BUFFERSIZE -> ZZ_BUFFERSIZE
    int YYSTRING -> YYSTRING
    int YYINITIAL -> YYINITIAL
    java.lang.String ZZ_CMAP_PACKED -> ZZ_CMAP_PACKED
    char[] ZZ_CMAP -> ZZ_CMAP
    int[] ZZ_ACTION -> ZZ_ACTION
    java.lang.String ZZ_ACTION_PACKED_0 -> ZZ_ACTION_PACKED_0
    int[] ZZ_ROWMAP -> ZZ_ROWMAP
    java.lang.String ZZ_ROWMAP_PACKED_0 -> ZZ_ROWMAP_PACKED_0
    int[] ZZ_TRANS -> ZZ_TRANS
    java.lang.String ZZ_TRANS_PACKED_0 -> ZZ_TRANS_PACKED_0
    int ZZ_UNKNOWN_ERROR -> ZZ_UNKNOWN_ERROR
    int ZZ_NO_MATCH -> ZZ_NO_MATCH
    int ZZ_PUSHBACK_2BIG -> ZZ_PUSHBACK_2BIG
    java.lang.String[] ZZ_ERROR_MSG -> ZZ_ERROR_MSG
    int[] ZZ_ATTRIBUTE -> ZZ_ATTRIBUTE
    java.lang.String ZZ_ATTRIBUTE_PACKED_0 -> ZZ_ATTRIBUTE_PACKED_0
    java.io.Reader zzReader -> zzReader
    int zzState -> zzState
    int zzLexicalState -> zzLexicalState
    char[] zzBuffer -> zzBuffer
    int zzMarkedPos -> zzMarkedPos
    int zzPushbackPos -> zzPushbackPos
    int zzCurrentPos -> zzCurrentPos
    int zzStartRead -> zzStartRead
    int zzEndRead -> zzEndRead
    int yyline -> yyline
    int yychar -> yychar
    int yycolumn -> yycolumn
    boolean zzAtBOL -> zzAtBOL
    boolean zzAtEOF -> zzAtEOF
    boolean emptyString -> emptyString
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    int[] zzUnpackAction() -> zzUnpackAction
    int zzUnpackAction(java.lang.String,int,int[]) -> zzUnpackAction
    int[] zzUnpackRowMap() -> zzUnpackRowMap
    int zzUnpackRowMap(java.lang.String,int,int[]) -> zzUnpackRowMap
    int[] zzUnpackTrans() -> zzUnpackTrans
    int zzUnpackTrans(java.lang.String,int,int[]) -> zzUnpackTrans
    int[] zzUnpackAttribute() -> zzUnpackAttribute
    int zzUnpackAttribute(java.lang.String,int,int[]) -> zzUnpackAttribute
    int getPos() -> getPos
    void setExternalSheet(jxl.biff.formula.ExternalSheet) -> setExternalSheet
    void setNameTable(jxl.biff.WorkbookMethods) -> setNameTable
    char[] zzUnpackCMap(java.lang.String) -> zzUnpackCMap
    boolean zzRefill() -> zzRefill
    void yyclose() -> yyclose
    void yyreset(java.io.Reader) -> yyreset
    int yystate() -> yystate
    void yybegin(int) -> yybegin
    java.lang.String yytext() -> yytext
    char yycharat(int) -> yycharat
    int yylength() -> yylength
    void zzScanError(int) -> zzScanError
    void yypushback(int) -> yypushback
    jxl.biff.formula.ParseItem yylex() -> yylex
jxl.common.Assert -> jxl.common.Assert:
    void verify(boolean) -> verify
    void verify(boolean,java.lang.String) -> verify
jxl.common.AssertionFailed -> jxl.common.AssertionFailed:
jxl.common.BaseUnit -> jxl.common.BaseUnit:
    int index -> index
    int getIndex() -> getIndex
jxl.common.LengthConverter -> jxl.common.LengthConverter:
    double[][] factors -> factors
    double getConversionFactor(jxl.common.LengthUnit,jxl.common.LengthUnit) -> getConversionFactor
jxl.common.LengthUnit -> jxl.common.LengthUnit:
    int count -> count
    jxl.common.LengthUnit POINTS -> POINTS
    jxl.common.LengthUnit METRES -> METRES
    jxl.common.LengthUnit CENTIMETRES -> CENTIMETRES
    jxl.common.LengthUnit INCHES -> INCHES
    int getCount() -> getCount
jxl.common.Logger -> jxl.common.Logger:
    jxl.common.Logger logger -> logger
    jxl.common.Logger getLogger(java.lang.Class) -> getLogger
    void initializeLogger() -> initializeLogger
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    jxl.common.Logger getLoggerImpl(java.lang.Class) -> getLoggerImpl
    void setSuppressWarnings(boolean) -> setSuppressWarnings
jxl.common.log.LoggerName -> jxl.common.log.LoggerName:
    java.lang.String NAME -> NAME
jxl.common.log.SimpleLogger -> jxl.common.log.SimpleLogger:
    boolean suppressWarnings -> suppressWarnings
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    jxl.common.Logger getLoggerImpl(java.lang.Class) -> getLoggerImpl
    void setSuppressWarnings(boolean) -> setSuppressWarnings
jxl.demo.BiffDump -> jxl.demo.BiffDump:
    java.io.BufferedWriter writer -> writer
    jxl.read.biff.BiffRecordReader reader -> reader
    java.util.HashMap recordNames -> recordNames
    int xfIndex -> xfIndex
    int fontIndex -> fontIndex
    int bofs -> bofs
    int bytesPerLine -> bytesPerLine
    void buildNameHash() -> buildNameHash
    void dump() -> dump
    boolean writeRecord(jxl.read.biff.Record) -> writeRecord
    void writeSixDigitValue(int,java.lang.StringBuffer) -> writeSixDigitValue
    void writeByte(byte,java.lang.StringBuffer) -> writeByte
jxl.demo.CSV -> jxl.demo.CSV:
jxl.demo.Demo -> jxl.demo.Demo:
    int CSVFormat -> CSVFormat
    int XMLFormat -> XMLFormat
    jxl.common.Logger logger -> logger
    void displayHelp() -> displayHelp
    void main(java.lang.String[]) -> main
    void findTest(jxl.Workbook) -> findTest
jxl.demo.Escher -> jxl.demo.Escher:
jxl.demo.EscherDrawingGroup -> jxl.demo.EscherDrawingGroup:
jxl.demo.Features -> jxl.demo.Features:
jxl.demo.Formulas -> jxl.demo.Formulas:
jxl.demo.PropertySetsReader -> jxl.demo.PropertySetsReader:
    java.io.BufferedWriter writer -> writer
    jxl.read.biff.CompoundFile compoundFile -> compoundFile
    void displaySets() -> displaySets
    void displayPropertySet(java.lang.String,java.io.OutputStream) -> displayPropertySet
jxl.demo.ReadWrite -> jxl.demo.ReadWrite:
    jxl.common.Logger logger -> logger
    java.io.File inputWorkbook -> inputWorkbook
    java.io.File outputWorkbook -> outputWorkbook
    void readWrite() -> readWrite
    void modify(jxl.write.WritableWorkbook) -> modify
jxl.demo.Write -> jxl.demo.Write:
    java.lang.String filename -> filename
    jxl.write.WritableWorkbook workbook -> workbook
    void write() -> write
    void writeNumberFormatSheet(jxl.write.WritableSheet) -> writeNumberFormatSheet
    void writeDateFormatSheet(jxl.write.WritableSheet) -> writeDateFormatSheet
    void writeLabelFormatSheet(jxl.write.WritableSheet) -> writeLabelFormatSheet
    void writeBordersSheet(jxl.write.WritableSheet) -> writeBordersSheet
    void writeLabelsSheet(jxl.write.WritableSheet) -> writeLabelsSheet
    void writeFormulaSheet(jxl.write.WritableSheet) -> writeFormulaSheet
    void writeImageSheet(jxl.write.WritableSheet) -> writeImageSheet
jxl.demo.WriteAccess -> jxl.demo.WriteAccess:
    jxl.read.biff.BiffRecordReader reader -> reader
    void display(jxl.WorkbookSettings) -> display
jxl.demo.XML -> jxl.demo.XML:
    java.io.OutputStream out -> out
    java.lang.String encoding -> encoding
    jxl.Workbook workbook -> workbook
    void writeXML() -> writeXML
    void writeFormattedXML() -> writeFormattedXML
jxl.format.Alignment -> jxl.format.Alignment:
    int value -> value
    java.lang.String string -> string
    jxl.format.Alignment[] alignments -> alignments
    jxl.format.Alignment GENERAL -> GENERAL
    jxl.format.Alignment LEFT -> LEFT
    jxl.format.Alignment CENTRE -> CENTRE
    jxl.format.Alignment RIGHT -> RIGHT
    jxl.format.Alignment FILL -> FILL
    jxl.format.Alignment JUSTIFY -> JUSTIFY
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.Alignment getAlignment(int) -> getAlignment
jxl.format.BoldStyle -> jxl.format.BoldStyle:
    int value -> value
    java.lang.String string -> string
    jxl.format.BoldStyle NORMAL -> NORMAL
    jxl.format.BoldStyle BOLD -> BOLD
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
jxl.format.Border -> jxl.format.Border:
    java.lang.String string -> string
    jxl.format.Border NONE -> NONE
    jxl.format.Border ALL -> ALL
    jxl.format.Border TOP -> TOP
    jxl.format.Border BOTTOM -> BOTTOM
    jxl.format.Border LEFT -> LEFT
    jxl.format.Border RIGHT -> RIGHT
    java.lang.String getDescription() -> getDescription
jxl.format.BorderLineStyle -> jxl.format.BorderLineStyle:
    int value -> value
    java.lang.String string -> string
    jxl.format.BorderLineStyle[] styles -> styles
    jxl.format.BorderLineStyle NONE -> NONE
    jxl.format.BorderLineStyle THIN -> THIN
    jxl.format.BorderLineStyle MEDIUM -> MEDIUM
    jxl.format.BorderLineStyle DASHED -> DASHED
    jxl.format.BorderLineStyle DOTTED -> DOTTED
    jxl.format.BorderLineStyle THICK -> THICK
    jxl.format.BorderLineStyle DOUBLE -> DOUBLE
    jxl.format.BorderLineStyle HAIR -> HAIR
    jxl.format.BorderLineStyle MEDIUM_DASHED -> MEDIUM_DASHED
    jxl.format.BorderLineStyle DASH_DOT -> DASH_DOT
    jxl.format.BorderLineStyle MEDIUM_DASH_DOT -> MEDIUM_DASH_DOT
    jxl.format.BorderLineStyle DASH_DOT_DOT -> DASH_DOT_DOT
    jxl.format.BorderLineStyle MEDIUM_DASH_DOT_DOT -> MEDIUM_DASH_DOT_DOT
    jxl.format.BorderLineStyle SLANTED_DASH_DOT -> SLANTED_DASH_DOT
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.BorderLineStyle getStyle(int) -> getStyle
jxl.format.CellFormat -> jxl.format.CellFormat:
    jxl.format.Format getFormat() -> getFormat
    jxl.format.Font getFont() -> getFont
    boolean getWrap() -> getWrap
    jxl.format.Alignment getAlignment() -> getAlignment
    jxl.format.VerticalAlignment getVerticalAlignment() -> getVerticalAlignment
    jxl.format.Orientation getOrientation() -> getOrientation
    jxl.format.BorderLineStyle getBorder(jxl.format.Border) -> getBorder
    jxl.format.BorderLineStyle getBorderLine(jxl.format.Border) -> getBorderLine
    jxl.format.Colour getBorderColour(jxl.format.Border) -> getBorderColour
    boolean hasBorders() -> hasBorders
    jxl.format.Colour getBackgroundColour() -> getBackgroundColour
    jxl.format.Pattern getPattern() -> getPattern
    int getIndentation() -> getIndentation
    boolean isShrinkToFit() -> isShrinkToFit
    boolean isLocked() -> isLocked
jxl.format.Colour -> jxl.format.Colour:
    int value -> value
    jxl.format.RGB rgb -> rgb
    java.lang.String string -> string
    jxl.format.Colour[] colours -> colours
    jxl.format.Colour UNKNOWN -> UNKNOWN
    jxl.format.Colour BLACK -> BLACK
    jxl.format.Colour WHITE -> WHITE
    jxl.format.Colour DEFAULT_BACKGROUND1 -> DEFAULT_BACKGROUND1
    jxl.format.Colour DEFAULT_BACKGROUND -> DEFAULT_BACKGROUND
    jxl.format.Colour PALETTE_BLACK -> PALETTE_BLACK
    jxl.format.Colour RED -> RED
    jxl.format.Colour BRIGHT_GREEN -> BRIGHT_GREEN
    jxl.format.Colour BLUE -> BLUE
    jxl.format.Colour YELLOW -> YELLOW
    jxl.format.Colour PINK -> PINK
    jxl.format.Colour TURQUOISE -> TURQUOISE
    jxl.format.Colour DARK_RED -> DARK_RED
    jxl.format.Colour GREEN -> GREEN
    jxl.format.Colour DARK_BLUE -> DARK_BLUE
    jxl.format.Colour DARK_YELLOW -> DARK_YELLOW
    jxl.format.Colour VIOLET -> VIOLET
    jxl.format.Colour TEAL -> TEAL
    jxl.format.Colour GREY_25_PERCENT -> GREY_25_PERCENT
    jxl.format.Colour GREY_50_PERCENT -> GREY_50_PERCENT
    jxl.format.Colour PERIWINKLE -> PERIWINKLE
    jxl.format.Colour PLUM2 -> PLUM2
    jxl.format.Colour IVORY -> IVORY
    jxl.format.Colour LIGHT_TURQUOISE2 -> LIGHT_TURQUOISE2
    jxl.format.Colour DARK_PURPLE -> DARK_PURPLE
    jxl.format.Colour CORAL -> CORAL
    jxl.format.Colour OCEAN_BLUE -> OCEAN_BLUE
    jxl.format.Colour ICE_BLUE -> ICE_BLUE
    jxl.format.Colour DARK_BLUE2 -> DARK_BLUE2
    jxl.format.Colour PINK2 -> PINK2
    jxl.format.Colour YELLOW2 -> YELLOW2
    jxl.format.Colour TURQOISE2 -> TURQOISE2
    jxl.format.Colour VIOLET2 -> VIOLET2
    jxl.format.Colour DARK_RED2 -> DARK_RED2
    jxl.format.Colour TEAL2 -> TEAL2
    jxl.format.Colour BLUE2 -> BLUE2
    jxl.format.Colour SKY_BLUE -> SKY_BLUE
    jxl.format.Colour LIGHT_TURQUOISE -> LIGHT_TURQUOISE
    jxl.format.Colour LIGHT_GREEN -> LIGHT_GREEN
    jxl.format.Colour VERY_LIGHT_YELLOW -> VERY_LIGHT_YELLOW
    jxl.format.Colour PALE_BLUE -> PALE_BLUE
    jxl.format.Colour ROSE -> ROSE
    jxl.format.Colour LAVENDER -> LAVENDER
    jxl.format.Colour TAN -> TAN
    jxl.format.Colour LIGHT_BLUE -> LIGHT_BLUE
    jxl.format.Colour AQUA -> AQUA
    jxl.format.Colour LIME -> LIME
    jxl.format.Colour GOLD -> GOLD
    jxl.format.Colour LIGHT_ORANGE -> LIGHT_ORANGE
    jxl.format.Colour ORANGE -> ORANGE
    jxl.format.Colour BLUE_GREY -> BLUE_GREY
    jxl.format.Colour GREY_40_PERCENT -> GREY_40_PERCENT
    jxl.format.Colour DARK_TEAL -> DARK_TEAL
    jxl.format.Colour SEA_GREEN -> SEA_GREEN
    jxl.format.Colour DARK_GREEN -> DARK_GREEN
    jxl.format.Colour OLIVE_GREEN -> OLIVE_GREEN
    jxl.format.Colour BROWN -> BROWN
    jxl.format.Colour PLUM -> PLUM
    jxl.format.Colour INDIGO -> INDIGO
    jxl.format.Colour GREY_80_PERCENT -> GREY_80_PERCENT
    jxl.format.Colour AUTOMATIC -> AUTOMATIC
    jxl.format.Colour GRAY_80 -> GRAY_80
    jxl.format.Colour GRAY_50 -> GRAY_50
    jxl.format.Colour GRAY_25 -> GRAY_25
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    int getDefaultRed() -> getDefaultRed
    int getDefaultGreen() -> getDefaultGreen
    int getDefaultBlue() -> getDefaultBlue
    jxl.format.RGB getDefaultRGB() -> getDefaultRGB
    jxl.format.Colour getInternalColour(int) -> getInternalColour
    jxl.format.Colour[] getAllColours() -> getAllColours
jxl.format.Font -> jxl.format.Font:
    java.lang.String getName() -> getName
    int getPointSize() -> getPointSize
    int getBoldWeight() -> getBoldWeight
    boolean isItalic() -> isItalic
    boolean isStruckout() -> isStruckout
    jxl.format.UnderlineStyle getUnderlineStyle() -> getUnderlineStyle
    jxl.format.Colour getColour() -> getColour
    jxl.format.ScriptStyle getScriptStyle() -> getScriptStyle
jxl.format.Format -> jxl.format.Format:
    java.lang.String getFormatString() -> getFormatString
jxl.format.Orientation -> jxl.format.Orientation:
    int value -> value
    java.lang.String string -> string
    jxl.format.Orientation[] orientations -> orientations
    jxl.format.Orientation HORIZONTAL -> HORIZONTAL
    jxl.format.Orientation VERTICAL -> VERTICAL
    jxl.format.Orientation PLUS_90 -> PLUS_90
    jxl.format.Orientation MINUS_90 -> MINUS_90
    jxl.format.Orientation PLUS_45 -> PLUS_45
    jxl.format.Orientation MINUS_45 -> MINUS_45
    jxl.format.Orientation STACKED -> STACKED
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.Orientation getOrientation(int) -> getOrientation
jxl.format.PageOrder -> jxl.format.PageOrder:
    jxl.format.PageOrder DOWN_THEN_RIGHT -> DOWN_THEN_RIGHT
    jxl.format.PageOrder RIGHT_THEN_DOWN -> RIGHT_THEN_DOWN
jxl.format.PageOrientation -> jxl.format.PageOrientation:
    jxl.format.PageOrientation PORTRAIT -> PORTRAIT
    jxl.format.PageOrientation LANDSCAPE -> LANDSCAPE
jxl.format.PaperSize -> jxl.format.PaperSize:
    int LAST_PAPER_SIZE -> LAST_PAPER_SIZE
    int val -> val
    jxl.format.PaperSize[] paperSizes -> paperSizes
    jxl.format.PaperSize UNDEFINED -> UNDEFINED
    jxl.format.PaperSize LETTER -> LETTER
    jxl.format.PaperSize LETTER_SMALL -> LETTER_SMALL
    jxl.format.PaperSize TABLOID -> TABLOID
    jxl.format.PaperSize LEDGER -> LEDGER
    jxl.format.PaperSize LEGAL -> LEGAL
    jxl.format.PaperSize STATEMENT -> STATEMENT
    jxl.format.PaperSize EXECUTIVE -> EXECUTIVE
    jxl.format.PaperSize A3 -> A3
    jxl.format.PaperSize A4 -> A4
    jxl.format.PaperSize A4_SMALL -> A4_SMALL
    jxl.format.PaperSize A5 -> A5
    jxl.format.PaperSize B4 -> B4
    jxl.format.PaperSize B5 -> B5
    jxl.format.PaperSize FOLIO -> FOLIO
    jxl.format.PaperSize QUARTO -> QUARTO
    jxl.format.PaperSize SIZE_10x14 -> SIZE_10x14
    jxl.format.PaperSize SIZE_10x17 -> SIZE_10x17
    jxl.format.PaperSize NOTE -> NOTE
    jxl.format.PaperSize ENVELOPE_9 -> ENVELOPE_9
    jxl.format.PaperSize ENVELOPE_10 -> ENVELOPE_10
    jxl.format.PaperSize ENVELOPE_11 -> ENVELOPE_11
    jxl.format.PaperSize ENVELOPE_12 -> ENVELOPE_12
    jxl.format.PaperSize ENVELOPE_14 -> ENVELOPE_14
    jxl.format.PaperSize C -> C
    jxl.format.PaperSize D -> D
    jxl.format.PaperSize E -> E
    jxl.format.PaperSize ENVELOPE_DL -> ENVELOPE_DL
    jxl.format.PaperSize ENVELOPE_C5 -> ENVELOPE_C5
    jxl.format.PaperSize ENVELOPE_C3 -> ENVELOPE_C3
    jxl.format.PaperSize ENVELOPE_C4 -> ENVELOPE_C4
    jxl.format.PaperSize ENVELOPE_C6 -> ENVELOPE_C6
    jxl.format.PaperSize ENVELOPE_C6_C5 -> ENVELOPE_C6_C5
    jxl.format.PaperSize B4_ISO -> B4_ISO
    jxl.format.PaperSize B5_ISO -> B5_ISO
    jxl.format.PaperSize B6_ISO -> B6_ISO
    jxl.format.PaperSize ENVELOPE_ITALY -> ENVELOPE_ITALY
    jxl.format.PaperSize ENVELOPE_MONARCH -> ENVELOPE_MONARCH
    jxl.format.PaperSize ENVELOPE_6_75 -> ENVELOPE_6_75
    jxl.format.PaperSize US_FANFOLD -> US_FANFOLD
    jxl.format.PaperSize GERMAN_FANFOLD -> GERMAN_FANFOLD
    jxl.format.PaperSize GERMAN_LEGAL_FANFOLD -> GERMAN_LEGAL_FANFOLD
    jxl.format.PaperSize B4_ISO_2 -> B4_ISO_2
    jxl.format.PaperSize JAPANESE_POSTCARD -> JAPANESE_POSTCARD
    jxl.format.PaperSize SIZE_9x11 -> SIZE_9x11
    jxl.format.PaperSize SIZE_10x11 -> SIZE_10x11
    jxl.format.PaperSize SIZE_15x11 -> SIZE_15x11
    jxl.format.PaperSize ENVELOPE_INVITE -> ENVELOPE_INVITE
    jxl.format.PaperSize LETTER_EXTRA -> LETTER_EXTRA
    jxl.format.PaperSize LEGAL_EXTRA -> LEGAL_EXTRA
    jxl.format.PaperSize TABLOID_EXTRA -> TABLOID_EXTRA
    jxl.format.PaperSize A4_EXTRA -> A4_EXTRA
    jxl.format.PaperSize LETTER_TRANSVERSE -> LETTER_TRANSVERSE
    jxl.format.PaperSize A4_TRANSVERSE -> A4_TRANSVERSE
    jxl.format.PaperSize LETTER_EXTRA_TRANSVERSE -> LETTER_EXTRA_TRANSVERSE
    jxl.format.PaperSize SUPER_A_A4 -> SUPER_A_A4
    jxl.format.PaperSize SUPER_B_A3 -> SUPER_B_A3
    jxl.format.PaperSize LETTER_PLUS -> LETTER_PLUS
    jxl.format.PaperSize A4_PLUS -> A4_PLUS
    jxl.format.PaperSize A5_TRANSVERSE -> A5_TRANSVERSE
    jxl.format.PaperSize B5_TRANSVERSE -> B5_TRANSVERSE
    jxl.format.PaperSize A3_EXTRA -> A3_EXTRA
    jxl.format.PaperSize A5_EXTRA -> A5_EXTRA
    jxl.format.PaperSize B5_EXTRA -> B5_EXTRA
    jxl.format.PaperSize A2 -> A2
    jxl.format.PaperSize A3_TRANSVERSE -> A3_TRANSVERSE
    jxl.format.PaperSize A3_EXTRA_TRANSVERSE -> A3_EXTRA_TRANSVERSE
    jxl.format.PaperSize DOUBLE_JAPANESE_POSTCARD -> DOUBLE_JAPANESE_POSTCARD
    jxl.format.PaperSize A6 -> A6
    jxl.format.PaperSize LETTER_ROTATED -> LETTER_ROTATED
    jxl.format.PaperSize A3_ROTATED -> A3_ROTATED
    jxl.format.PaperSize A4_ROTATED -> A4_ROTATED
    jxl.format.PaperSize A5_ROTATED -> A5_ROTATED
    jxl.format.PaperSize B4_ROTATED -> B4_ROTATED
    jxl.format.PaperSize B5_ROTATED -> B5_ROTATED
    jxl.format.PaperSize JAPANESE_POSTCARD_ROTATED -> JAPANESE_POSTCARD_ROTATED
    jxl.format.PaperSize DOUBLE_JAPANESE_POSTCARD_ROTATED -> DOUBLE_JAPANESE_POSTCARD_ROTATED
    jxl.format.PaperSize A6_ROTATED -> A6_ROTATED
    jxl.format.PaperSize B6 -> B6
    jxl.format.PaperSize B6_ROTATED -> B6_ROTATED
    int getValue() -> getValue
    jxl.format.PaperSize getPaperSize(int) -> getPaperSize
jxl.format.Pattern -> jxl.format.Pattern:
    int value -> value
    java.lang.String string -> string
    jxl.format.Pattern[] patterns -> patterns
    jxl.format.Pattern NONE -> NONE
    jxl.format.Pattern SOLID -> SOLID
    jxl.format.Pattern GRAY_50 -> GRAY_50
    jxl.format.Pattern GRAY_75 -> GRAY_75
    jxl.format.Pattern GRAY_25 -> GRAY_25
    jxl.format.Pattern PATTERN1 -> PATTERN1
    jxl.format.Pattern PATTERN2 -> PATTERN2
    jxl.format.Pattern PATTERN3 -> PATTERN3
    jxl.format.Pattern PATTERN4 -> PATTERN4
    jxl.format.Pattern PATTERN5 -> PATTERN5
    jxl.format.Pattern PATTERN6 -> PATTERN6
    jxl.format.Pattern PATTERN7 -> PATTERN7
    jxl.format.Pattern PATTERN8 -> PATTERN8
    jxl.format.Pattern PATTERN9 -> PATTERN9
    jxl.format.Pattern PATTERN10 -> PATTERN10
    jxl.format.Pattern PATTERN11 -> PATTERN11
    jxl.format.Pattern PATTERN12 -> PATTERN12
    jxl.format.Pattern PATTERN13 -> PATTERN13
    jxl.format.Pattern PATTERN14 -> PATTERN14
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.Pattern getPattern(int) -> getPattern
jxl.format.RGB -> jxl.format.RGB:
    int red -> red
    int green -> green
    int blue -> blue
    int getRed() -> getRed
    int getGreen() -> getGreen
    int getBlue() -> getBlue
jxl.format.ScriptStyle -> jxl.format.ScriptStyle:
    int value -> value
    java.lang.String string -> string
    jxl.format.ScriptStyle[] styles -> styles
    jxl.format.ScriptStyle NORMAL_SCRIPT -> NORMAL_SCRIPT
    jxl.format.ScriptStyle SUPERSCRIPT -> SUPERSCRIPT
    jxl.format.ScriptStyle SUBSCRIPT -> SUBSCRIPT
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.ScriptStyle getStyle(int) -> getStyle
jxl.format.UnderlineStyle -> jxl.format.UnderlineStyle:
    int value -> value
    java.lang.String string -> string
    jxl.format.UnderlineStyle[] styles -> styles
    jxl.format.UnderlineStyle NO_UNDERLINE -> NO_UNDERLINE
    jxl.format.UnderlineStyle SINGLE -> SINGLE
    jxl.format.UnderlineStyle DOUBLE -> DOUBLE
    jxl.format.UnderlineStyle SINGLE_ACCOUNTING -> SINGLE_ACCOUNTING
    jxl.format.UnderlineStyle DOUBLE_ACCOUNTING -> DOUBLE_ACCOUNTING
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.UnderlineStyle getStyle(int) -> getStyle
jxl.format.VerticalAlignment -> jxl.format.VerticalAlignment:
    int value -> value
    java.lang.String string -> string
    jxl.format.VerticalAlignment[] alignments -> alignments
    jxl.format.VerticalAlignment TOP -> TOP
    jxl.format.VerticalAlignment CENTRE -> CENTRE
    jxl.format.VerticalAlignment BOTTOM -> BOTTOM
    jxl.format.VerticalAlignment JUSTIFY -> JUSTIFY
    int getValue() -> getValue
    java.lang.String getDescription() -> getDescription
    jxl.format.VerticalAlignment getAlignment(int) -> getAlignment
jxl.read.biff.BOFRecord -> jxl.read.biff.BOFRecord:
    jxl.common.Logger logger -> logger
    int Biff8 -> Biff8
    int Biff7 -> Biff7
    int WorkbookGlobals -> WorkbookGlobals
    int Worksheet -> Worksheet
    int Chart -> Chart
    int MacroSheet -> MacroSheet
    int version -> version
    int substreamType -> substreamType
    boolean isBiff8() -> isBiff8
    boolean isBiff7() -> isBiff7
    boolean isWorkbookGlobals() -> isWorkbookGlobals
    boolean isWorksheet() -> isWorksheet
    boolean isMacroSheet() -> isMacroSheet
    boolean isChart() -> isChart
    int getLength() -> getLength
jxl.read.biff.BaseSharedFormulaRecord -> jxl.read.biff.BaseSharedFormulaRecord:
    java.lang.String formulaString -> formulaString
    int filePos -> filePos
    byte[] tokens -> tokens
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    java.lang.String getFormula() -> getFormula
    void setTokens(byte[]) -> setTokens
    byte[] getTokens() -> getTokens
    jxl.biff.formula.ExternalSheet getExternalSheet() -> getExternalSheet
    jxl.biff.WorkbookMethods getNameTable() -> getNameTable
    jxl.read.biff.Record getRecord() -> getRecord
    int getFilePos() -> getFilePos
jxl.read.biff.BiffException -> jxl.read.biff.BiffException:
    jxl.read.biff.BiffException$BiffMessage unrecognizedBiffVersion -> unrecognizedBiffVersion
    jxl.read.biff.BiffException$BiffMessage expectedGlobals -> expectedGlobals
    jxl.read.biff.BiffException$BiffMessage excelFileTooBig -> excelFileTooBig
    jxl.read.biff.BiffException$BiffMessage excelFileNotFound -> excelFileNotFound
    jxl.read.biff.BiffException$BiffMessage unrecognizedOLEFile -> unrecognizedOLEFile
    jxl.read.biff.BiffException$BiffMessage streamNotFound -> streamNotFound
    jxl.read.biff.BiffException$BiffMessage passwordProtected -> passwordProtected
    jxl.read.biff.BiffException$BiffMessage corruptFileFormat -> corruptFileFormat
jxl.read.biff.BiffException$BiffMessage -> jxl.read.biff.BiffException$BiffMessage:
    java.lang.String message -> message
jxl.read.biff.BiffRecordReader -> jxl.read.biff.BiffRecordReader:
    jxl.read.biff.File file -> file
    jxl.read.biff.Record record -> record
    boolean hasNext() -> hasNext
    jxl.read.biff.Record next() -> next
    int getPos() -> getPos
jxl.read.biff.BlankCell -> jxl.read.biff.BlankCell:
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
jxl.read.biff.BooleanFormulaRecord -> jxl.read.biff.BooleanFormulaRecord:
    boolean value -> value
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    java.lang.String formulaString -> formulaString
    byte[] data -> data
    boolean getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.lang.String getFormula() -> getFormula
jxl.read.biff.BooleanRecord -> jxl.read.biff.BooleanRecord:
    boolean error -> error
    boolean value -> value
    boolean isError() -> isError
    boolean getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    jxl.read.biff.Record getRecord() -> getRecord
jxl.read.biff.BottomMarginRecord -> jxl.read.biff.BottomMarginRecord:
jxl.read.biff.BoundsheetRecord -> jxl.read.biff.BoundsheetRecord:
    int offset -> offset
    byte typeFlag -> typeFlag
    byte visibilityFlag -> visibilityFlag
    int length -> length
    java.lang.String name -> name
    jxl.read.biff.BoundsheetRecord$Biff7 biff7 -> biff7
    java.lang.String getName() -> getName
    boolean isHidden() -> isHidden
    boolean isSheet() -> isSheet
    boolean isChart() -> isChart
jxl.read.biff.BoundsheetRecord$1 -> jxl.read.biff.BoundsheetRecord$1:
jxl.read.biff.BoundsheetRecord$Biff7 -> jxl.read.biff.BoundsheetRecord$Biff7:
jxl.read.biff.ButtonPropertySetRecord -> jxl.read.biff.ButtonPropertySetRecord:
    jxl.common.Logger logger -> logger
    byte[] getData() -> getData
jxl.read.biff.CalcModeRecord -> jxl.read.biff.CalcModeRecord:
    jxl.common.Logger logger -> logger
    boolean automatic -> automatic
    boolean isAutomatic() -> isAutomatic
jxl.read.biff.CellFeaturesAccessor -> jxl.read.biff.CellFeaturesAccessor:
    void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
jxl.read.biff.CellValue -> jxl.read.biff.CellValue:
    jxl.common.Logger logger -> logger
    int row -> row
    int column -> column
    int xfIndex -> xfIndex
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    boolean initialized -> initialized
    jxl.biff.XFRecord format -> format
    jxl.read.biff.SheetImpl sheet -> sheet
    jxl.CellFeatures features -> features
    int getRow() -> getRow
    int getColumn() -> getColumn
    int getXFIndex() -> getXFIndex
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    boolean isHidden() -> isHidden
    jxl.read.biff.SheetImpl getSheet() -> getSheet
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
    void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.CentreRecord -> jxl.read.biff.CentreRecord:
    boolean centre -> centre
    boolean isCentre() -> isCentre
jxl.read.biff.CodepageRecord -> jxl.read.biff.CodepageRecord:
    jxl.common.Logger logger -> logger
    int characterSet -> characterSet
    int getCharacterSet() -> getCharacterSet
jxl.read.biff.ColumnInfoRecord -> jxl.read.biff.ColumnInfoRecord:
    byte[] data -> data
    int startColumn -> startColumn
    int endColumn -> endColumn
    int xfIndex -> xfIndex
    int width -> width
    boolean hidden -> hidden
    int outlineLevel -> outlineLevel
    boolean collapsed -> collapsed
    int getStartColumn() -> getStartColumn
    int getEndColumn() -> getEndColumn
    int getXFIndex() -> getXFIndex
    int getOutlineLevel() -> getOutlineLevel
    boolean getCollapsed() -> getCollapsed
    int getWidth() -> getWidth
    boolean getHidden() -> getHidden
jxl.read.biff.CompoundFile -> jxl.read.biff.CompoundFile:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int numBigBlockDepotBlocks -> numBigBlockDepotBlocks
    int sbdStartBlock -> sbdStartBlock
    int rootStartBlock -> rootStartBlock
    int extensionBlock -> extensionBlock
    int numExtensionBlocks -> numExtensionBlocks
    byte[] rootEntry -> rootEntry
    int[] bigBlockChain -> bigBlockChain
    int[] smallBlockChain -> smallBlockChain
    int[] bigBlockDepotBlocks -> bigBlockDepotBlocks
    java.util.ArrayList propertySets -> propertySets
    jxl.WorkbookSettings settings -> settings
    jxl.biff.BaseCompoundFile$PropertyStorage rootEntryPropertyStorage -> rootEntryPropertyStorage
    void readBigBlockDepot() -> readBigBlockDepot
    void readSmallBlockDepot() -> readSmallBlockDepot
    void readPropertySets() -> readPropertySets
    byte[] getStream(java.lang.String) -> getStream
    byte[] getStream(int) -> getStream
    jxl.biff.BaseCompoundFile$PropertyStorage findPropertyStorage(java.lang.String) -> findPropertyStorage
    jxl.biff.BaseCompoundFile$PropertyStorage findPropertyStorage(java.lang.String,jxl.biff.BaseCompoundFile$PropertyStorage) -> findPropertyStorage
    jxl.biff.BaseCompoundFile$PropertyStorage getPropertyStorage(java.lang.String) -> getPropertyStorage
    jxl.biff.BaseCompoundFile$PropertyStorage getPropertyStorage(int) -> getPropertyStorage
    byte[] getBigBlockStream(jxl.biff.BaseCompoundFile$PropertyStorage) -> getBigBlockStream
    byte[] getSmallBlockStream(jxl.biff.BaseCompoundFile$PropertyStorage) -> getSmallBlockStream
    byte[] readData(int) -> readData
    int getNumberOfPropertySets() -> getNumberOfPropertySets
    jxl.biff.BaseCompoundFile$PropertyStorage getPropertySet(int) -> getPropertySet
jxl.read.biff.CountryRecord -> jxl.read.biff.CountryRecord:
    jxl.common.Logger logger -> logger
    int language -> language
    int regionalSettings -> regionalSettings
    int getLanguageCode() -> getLanguageCode
    int getRegionalSettingsCode() -> getRegionalSettingsCode
jxl.read.biff.DateFormulaRecord -> jxl.read.biff.DateFormulaRecord:
    java.lang.String formulaString -> formulaString
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    byte[] data -> data
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.lang.String getFormula() -> getFormula
    double getValue() -> getValue
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.read.biff.DateRecord -> jxl.read.biff.DateRecord:
    jxl.common.Logger logger -> logger
    java.util.Date date -> date
    int row -> row
    int column -> column
    boolean time -> time
    java.text.DateFormat format -> format
    jxl.format.CellFormat cellFormat -> cellFormat
    int xfIndex -> xfIndex
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    jxl.read.biff.SheetImpl sheet -> sheet
    jxl.CellFeatures features -> features
    boolean initialized -> initialized
    java.text.SimpleDateFormat dateFormat -> dateFormat
    java.text.SimpleDateFormat timeFormat -> timeFormat
    int nonLeapDay -> nonLeapDay
    java.util.TimeZone gmtZone -> gmtZone
    int utcOffsetDays -> utcOffsetDays
    int utcOffsetDays1904 -> utcOffsetDays1904
    long secondsInADay -> secondsInADay
    long msInASecond -> msInASecond
    long msInADay -> msInADay
    int getRow() -> getRow
    int getColumn() -> getColumn
    java.util.Date getDate() -> getDate
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    boolean isTime() -> isTime
    java.text.DateFormat getDateFormat() -> getDateFormat
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    boolean isHidden() -> isHidden
    jxl.read.biff.SheetImpl getSheet() -> getSheet
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
    void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.DefaultColumnWidthRecord -> jxl.read.biff.DefaultColumnWidthRecord:
    int width -> width
    int getWidth() -> getWidth
jxl.read.biff.DefaultRowHeightRecord -> jxl.read.biff.DefaultRowHeightRecord:
    int height -> height
    int getHeight() -> getHeight
jxl.read.biff.DimensionRecord -> jxl.read.biff.DimensionRecord:
    jxl.common.Logger logger -> logger
    int numRows -> numRows
    int numCols -> numCols
    jxl.read.biff.DimensionRecord$Biff7 biff7 -> biff7
    void read10ByteData(byte[]) -> read10ByteData
    void read14ByteData(byte[]) -> read14ByteData
    int getNumberOfRows() -> getNumberOfRows
    int getNumberOfColumns() -> getNumberOfColumns
jxl.read.biff.DimensionRecord$1 -> jxl.read.biff.DimensionRecord$1:
jxl.read.biff.DimensionRecord$Biff7 -> jxl.read.biff.DimensionRecord$Biff7:
jxl.read.biff.ErrorFormulaRecord -> jxl.read.biff.ErrorFormulaRecord:
    int errorCode -> errorCode
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    java.lang.String formulaString -> formulaString
    byte[] data -> data
    jxl.biff.formula.FormulaErrorCode error -> error
    int getErrorCode() -> getErrorCode
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.lang.String getFormula() -> getFormula
jxl.read.biff.ErrorRecord -> jxl.read.biff.ErrorRecord:
    int errorCode -> errorCode
    int getErrorCode() -> getErrorCode
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
jxl.read.biff.Excel9FileRecord -> jxl.read.biff.Excel9FileRecord:
    jxl.common.Logger logger -> logger
    boolean excel9file -> excel9file
    boolean getExcel9File() -> getExcel9File
jxl.read.biff.ExternalNameRecord -> jxl.read.biff.ExternalNameRecord:
    jxl.common.Logger logger -> logger
    java.lang.String name -> name
    boolean addInFunction -> addInFunction
    boolean isAddInFunction() -> isAddInFunction
    java.lang.String getName() -> getName
jxl.read.biff.ExternalSheetRecord -> jxl.read.biff.ExternalSheetRecord:
    jxl.common.Logger logger -> logger
    jxl.read.biff.ExternalSheetRecord$Biff7 biff7 -> biff7
    jxl.read.biff.ExternalSheetRecord$XTI[] xtiArray -> xtiArray
    int getNumRecords() -> getNumRecords
    int getSupbookIndex(int) -> getSupbookIndex
    int getFirstTabIndex(int) -> getFirstTabIndex
    int getLastTabIndex(int) -> getLastTabIndex
    byte[] getData() -> getData
jxl.read.biff.ExternalSheetRecord$1 -> jxl.read.biff.ExternalSheetRecord$1:
jxl.read.biff.ExternalSheetRecord$Biff7 -> jxl.read.biff.ExternalSheetRecord$Biff7:
jxl.read.biff.ExternalSheetRecord$XTI -> jxl.read.biff.ExternalSheetRecord$XTI:
    int supbookIndex -> supbookIndex
    int firstTab -> firstTab
    int lastTab -> lastTab
jxl.read.biff.File -> jxl.read.biff.File:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int filePos -> filePos
    int oldPos -> oldPos
    int initialFileSize -> initialFileSize
    int arrayGrowSize -> arrayGrowSize
    jxl.read.biff.CompoundFile compoundFile -> compoundFile
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.read.biff.Record next() -> next
    jxl.read.biff.Record peek() -> peek
    void skip(int) -> skip
    byte[] read(int,int) -> read
    int getPos() -> getPos
    void setPos(int) -> setPos
    void restorePos() -> restorePos
    void moveToFirstBof() -> moveToFirstBof
    void close() -> close
    void clear() -> clear
    boolean hasNext() -> hasNext
    jxl.read.biff.CompoundFile getCompoundFile() -> getCompoundFile
jxl.read.biff.FooterRecord -> jxl.read.biff.FooterRecord:
    java.lang.String footer -> footer
    jxl.read.biff.FooterRecord$Biff7 biff7 -> biff7
    java.lang.String getFooter() -> getFooter
jxl.read.biff.FooterRecord$1 -> jxl.read.biff.FooterRecord$1:
jxl.read.biff.FooterRecord$Biff7 -> jxl.read.biff.FooterRecord$Biff7:
jxl.read.biff.Formula -> jxl.read.biff.Formula:
    byte[] getFormulaData() -> getFormulaData
jxl.read.biff.FormulaRecord -> jxl.read.biff.FormulaRecord:
    jxl.common.Logger logger -> logger
    jxl.read.biff.CellValue formula -> formula
    boolean shared -> shared
    jxl.read.biff.FormulaRecord$IgnoreSharedFormula ignoreSharedFormula -> ignoreSharedFormula
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    jxl.read.biff.CellValue getFormula() -> getFormula
    boolean isShared() -> isShared
jxl.read.biff.FormulaRecord$1 -> jxl.read.biff.FormulaRecord$1:
jxl.read.biff.FormulaRecord$IgnoreSharedFormula -> jxl.read.biff.FormulaRecord$IgnoreSharedFormula:
jxl.read.biff.GuttersRecord -> jxl.read.biff.GuttersRecord:
    int width -> width
    int height -> height
    int rowOutlineLevel -> rowOutlineLevel
    int columnOutlineLevel -> columnOutlineLevel
    int getRowOutlineLevel() -> getRowOutlineLevel
    int getColumnOutlineLevel() -> getColumnOutlineLevel
jxl.read.biff.HeaderRecord -> jxl.read.biff.HeaderRecord:
    jxl.common.Logger logger -> logger
    java.lang.String header -> header
    jxl.read.biff.HeaderRecord$Biff7 biff7 -> biff7
    java.lang.String getHeader() -> getHeader
jxl.read.biff.HeaderRecord$1 -> jxl.read.biff.HeaderRecord$1:
jxl.read.biff.HeaderRecord$Biff7 -> jxl.read.biff.HeaderRecord$Biff7:
jxl.read.biff.HideobjRecord -> jxl.read.biff.HideobjRecord:
    jxl.common.Logger logger -> logger
    int hidemode -> hidemode
    int getHideMode() -> getHideMode
jxl.read.biff.HorizontalPageBreaksRecord -> jxl.read.biff.HorizontalPageBreaksRecord:
    jxl.common.Logger logger -> logger
    int[] rowBreaks -> rowBreaks
    jxl.read.biff.HorizontalPageBreaksRecord$Biff7 biff7 -> biff7
    int[] getRowBreaks() -> getRowBreaks
jxl.read.biff.HorizontalPageBreaksRecord$1 -> jxl.read.biff.HorizontalPageBreaksRecord$1:
jxl.read.biff.HorizontalPageBreaksRecord$Biff7 -> jxl.read.biff.HorizontalPageBreaksRecord$Biff7:
jxl.read.biff.HyperlinkRecord -> jxl.read.biff.HyperlinkRecord:
    jxl.common.Logger logger -> logger
    int firstRow -> firstRow
    int lastRow -> lastRow
    int firstColumn -> firstColumn
    int lastColumn -> lastColumn
    java.net.URL url -> url
    java.io.File file -> file
    java.lang.String location -> location
    jxl.biff.SheetRangeImpl range -> range
    jxl.read.biff.HyperlinkRecord$LinkType linkType -> linkType
    jxl.read.biff.HyperlinkRecord$LinkType urlLink -> urlLink
    jxl.read.biff.HyperlinkRecord$LinkType fileLink -> fileLink
    jxl.read.biff.HyperlinkRecord$LinkType workbookLink -> workbookLink
    jxl.read.biff.HyperlinkRecord$LinkType unknown -> unknown
    boolean isFile() -> isFile
    boolean isURL() -> isURL
    boolean isLocation() -> isLocation
    int getRow() -> getRow
    int getColumn() -> getColumn
    int getLastRow() -> getLastRow
    int getLastColumn() -> getLastColumn
    java.net.URL getURL() -> getURL
    java.io.File getFile() -> getFile
    jxl.read.biff.Record getRecord() -> getRecord
    jxl.Range getRange() -> getRange
    java.lang.String getLocation() -> getLocation
jxl.read.biff.HyperlinkRecord$1 -> jxl.read.biff.HyperlinkRecord$1:
jxl.read.biff.HyperlinkRecord$LinkType -> jxl.read.biff.HyperlinkRecord$LinkType:
jxl.read.biff.LabelRecord -> jxl.read.biff.LabelRecord:
    int length -> length
    java.lang.String string -> string
    jxl.read.biff.LabelRecord$Biff7 biff7 -> biff7
    java.lang.String getString() -> getString
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
jxl.read.biff.LabelRecord$1 -> jxl.read.biff.LabelRecord$1:
jxl.read.biff.LabelRecord$Biff7 -> jxl.read.biff.LabelRecord$Biff7:
jxl.read.biff.LabelSSTRecord -> jxl.read.biff.LabelSSTRecord:
    int index -> index
    java.lang.String string -> string
    java.lang.String getString() -> getString
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
jxl.read.biff.LeftMarginRecord -> jxl.read.biff.LeftMarginRecord:
jxl.read.biff.MarginRecord -> jxl.read.biff.MarginRecord:
    double margin -> margin
    double getMargin() -> getMargin
jxl.read.biff.MergedCellsRecord -> jxl.read.biff.MergedCellsRecord:
    jxl.Range[] ranges -> ranges
    jxl.Range[] getRanges() -> getRanges
jxl.read.biff.MulBlankCell -> jxl.read.biff.MulBlankCell:
    jxl.common.Logger logger -> logger
    int row -> row
    int column -> column
    jxl.format.CellFormat cellFormat -> cellFormat
    int xfIndex -> xfIndex
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    boolean initialized -> initialized
    jxl.read.biff.SheetImpl sheet -> sheet
    jxl.CellFeatures features -> features
    int getRow() -> getRow
    int getColumn() -> getColumn
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    boolean isHidden() -> isHidden
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
    void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.MulBlankRecord -> jxl.read.biff.MulBlankRecord:
    jxl.common.Logger logger -> logger
    int row -> row
    int colFirst -> colFirst
    int colLast -> colLast
    int numblanks -> numblanks
    int[] xfIndices -> xfIndices
    void readBlanks(byte[]) -> readBlanks
    int getRow() -> getRow
    int getFirstColumn() -> getFirstColumn
    int getNumberOfColumns() -> getNumberOfColumns
    int getXFIndex(int) -> getXFIndex
jxl.read.biff.MulRKRecord -> jxl.read.biff.MulRKRecord:
    jxl.common.Logger logger -> logger
    int row -> row
    int colFirst -> colFirst
    int colLast -> colLast
    int numrks -> numrks
    int[] rknumbers -> rknumbers
    int[] xfIndices -> xfIndices
    void readRks(byte[]) -> readRks
    int getRow() -> getRow
    int getFirstColumn() -> getFirstColumn
    int getNumberOfColumns() -> getNumberOfColumns
    int getRKNumber(int) -> getRKNumber
    int getXFIndex(int) -> getXFIndex
jxl.read.biff.NameRecord -> jxl.read.biff.NameRecord:
    jxl.common.Logger logger -> logger
    java.lang.String name -> name
    jxl.biff.BuiltInName builtInName -> builtInName
    int index -> index
    int sheetRef -> sheetRef
    boolean isbiff8 -> isbiff8
    jxl.read.biff.NameRecord$Biff7 biff7 -> biff7
    int commandMacro -> commandMacro
    int builtIn -> builtIn
    int cellReference -> cellReference
    int areaReference -> areaReference
    int subExpression -> subExpression
    int union -> union
    java.util.ArrayList ranges -> ranges
    java.lang.String getName() -> getName
    jxl.biff.BuiltInName getBuiltInName() -> getBuiltInName
    jxl.read.biff.NameRecord$NameRange[] getRanges() -> getRanges
    int getIndex() -> getIndex
    int getSheetRef() -> getSheetRef
    void setSheetRef(int) -> setSheetRef
    byte[] getData() -> getData
    boolean isBiff8() -> isBiff8
    boolean isGlobal() -> isGlobal
jxl.read.biff.NameRecord$1 -> jxl.read.biff.NameRecord$1:
jxl.read.biff.NameRecord$Biff7 -> jxl.read.biff.NameRecord$Biff7:
jxl.read.biff.NameRecord$NameRange -> jxl.read.biff.NameRecord$NameRange:
    int columnFirst -> columnFirst
    int rowFirst -> rowFirst
    int columnLast -> columnLast
    int rowLast -> rowLast
    int externalSheet -> externalSheet
    jxl.read.biff.NameRecord this$0 -> this$0
    int getFirstColumn() -> getFirstColumn
    int getFirstRow() -> getFirstRow
    int getLastColumn() -> getLastColumn
    int getLastRow() -> getLastRow
    int getExternalSheet() -> getExternalSheet
jxl.read.biff.NineteenFourRecord -> jxl.read.biff.NineteenFourRecord:
    boolean nineteenFour -> nineteenFour
    boolean is1904() -> is1904
jxl.read.biff.NumberFormulaRecord -> jxl.read.biff.NumberFormulaRecord:
    jxl.common.Logger logger -> logger
    double value -> value
    java.text.NumberFormat format -> format
    java.text.DecimalFormat defaultFormat -> defaultFormat
    java.lang.String formulaString -> formulaString
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    byte[] data -> data
    double getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.lang.String getFormula() -> getFormula
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.read.biff.NumberRecord -> jxl.read.biff.NumberRecord:
    jxl.common.Logger logger -> logger
    double value -> value
    java.text.NumberFormat format -> format
    java.text.DecimalFormat defaultFormat -> defaultFormat
    double getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.read.biff.NumberValue -> jxl.read.biff.NumberValue:
    int row -> row
    int column -> column
    double value -> value
    java.text.NumberFormat format -> format
    jxl.format.CellFormat cellFormat -> cellFormat
    jxl.CellFeatures features -> features
    int xfIndex -> xfIndex
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    boolean initialized -> initialized
    jxl.read.biff.SheetImpl sheet -> sheet
    java.text.DecimalFormat defaultFormat -> defaultFormat
    void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
    int getRow() -> getRow
    int getColumn() -> getColumn
    double getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    boolean isHidden() -> isHidden
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
    void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.PLSRecord -> jxl.read.biff.PLSRecord:
    byte[] getData() -> getData
jxl.read.biff.PaletteRecord -> jxl.read.biff.PaletteRecord:
    byte[] getData() -> getData
jxl.read.biff.PaneRecord -> jxl.read.biff.PaneRecord:
    jxl.common.Logger logger -> logger
    int rowsVisible -> rowsVisible
    int columnsVisible -> columnsVisible
    int getRowsVisible() -> getRowsVisible
    int getColumnsVisible() -> getColumnsVisible
jxl.read.biff.PasswordException -> jxl.read.biff.PasswordException:
jxl.read.biff.PasswordRecord -> jxl.read.biff.PasswordRecord:
    java.lang.String password -> password
    int passwordHash -> passwordHash
    int getPasswordHash() -> getPasswordHash
jxl.read.biff.PrintGridLinesRecord -> jxl.read.biff.PrintGridLinesRecord:
    boolean printGridLines -> printGridLines
    boolean getPrintGridLines() -> getPrintGridLines
jxl.read.biff.PrintHeadersRecord -> jxl.read.biff.PrintHeadersRecord:
    boolean printHeaders -> printHeaders
    boolean getPrintHeaders() -> getPrintHeaders
jxl.read.biff.ProtectRecord -> jxl.read.biff.ProtectRecord:
    boolean prot -> prot
    boolean isProtected() -> isProtected
jxl.read.biff.RKHelper -> jxl.read.biff.RKHelper:
    double getDouble(int) -> getDouble
jxl.read.biff.RKRecord -> jxl.read.biff.RKRecord:
    jxl.common.Logger logger -> logger
    double value -> value
    java.text.NumberFormat format -> format
    java.text.DecimalFormat defaultFormat -> defaultFormat
    double getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.read.biff.RStringRecord -> jxl.read.biff.RStringRecord:
    int length -> length
    java.lang.String string -> string
    jxl.read.biff.RStringRecord$Biff7 biff7 -> biff7
    java.lang.String getString() -> getString
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
jxl.read.biff.RStringRecord$1 -> jxl.read.biff.RStringRecord$1:
jxl.read.biff.RStringRecord$Biff7 -> jxl.read.biff.RStringRecord$Biff7:
jxl.read.biff.Record -> jxl.read.biff.Record:
    jxl.common.Logger logger -> logger
    int code -> code
    jxl.biff.Type type -> type
    int length -> length
    int dataPos -> dataPos
    jxl.read.biff.File file -> file
    byte[] data -> data
    java.util.ArrayList continueRecords -> continueRecords
    jxl.biff.Type getType() -> getType
    int getLength() -> getLength
    byte[] getData() -> getData
    int getCode() -> getCode
    void setType(jxl.biff.Type) -> setType
    void addContinueRecord(jxl.read.biff.Record) -> addContinueRecord
jxl.read.biff.RefreshAllRecord -> jxl.read.biff.RefreshAllRecord:
    jxl.common.Logger logger -> logger
    boolean refreshAll -> refreshAll
    boolean getRefreshAll() -> getRefreshAll
jxl.read.biff.RightMarginRecord -> jxl.read.biff.RightMarginRecord:
jxl.read.biff.RowRecord -> jxl.read.biff.RowRecord:
    jxl.common.Logger logger -> logger
    int rowNumber -> rowNumber
    int rowHeight -> rowHeight
    boolean collapsed -> collapsed
    boolean defaultFormat -> defaultFormat
    boolean matchesDefFontHeight -> matchesDefFontHeight
    int xfIndex -> xfIndex
    int outlineLevel -> outlineLevel
    boolean groupStart -> groupStart
    int defaultHeightIndicator -> defaultHeightIndicator
    boolean isDefaultHeight() -> isDefaultHeight
    boolean matchesDefaultFontHeight() -> matchesDefaultFontHeight
    int getRowNumber() -> getRowNumber
    int getOutlineLevel() -> getOutlineLevel
    boolean getGroupStart() -> getGroupStart
    int getRowHeight() -> getRowHeight
    boolean isCollapsed() -> isCollapsed
    int getXFIndex() -> getXFIndex
    boolean hasDefaultFormat() -> hasDefaultFormat
jxl.read.biff.SCLRecord -> jxl.read.biff.SCLRecord:
    int numerator -> numerator
    int denominator -> denominator
    int getZoomFactor() -> getZoomFactor
jxl.read.biff.SSTRecord -> jxl.read.biff.SSTRecord:
    int totalStrings -> totalStrings
    int uniqueStrings -> uniqueStrings
    java.lang.String[] strings -> strings
    int[] continuationBreaks -> continuationBreaks
    void readStrings(byte[],int,jxl.WorkbookSettings) -> readStrings
    int getChars(byte[],jxl.read.biff.SSTRecord$ByteArrayHolder,int,jxl.read.biff.SSTRecord$BooleanHolder,int) -> getChars
    int getContinuedString(byte[],jxl.read.biff.SSTRecord$ByteArrayHolder,int,int,jxl.read.biff.SSTRecord$BooleanHolder,int) -> getContinuedString
    java.lang.String getString(int) -> getString
jxl.read.biff.SSTRecord$1 -> jxl.read.biff.SSTRecord$1:
jxl.read.biff.SSTRecord$BooleanHolder -> jxl.read.biff.SSTRecord$BooleanHolder:
    boolean value -> value
jxl.read.biff.SSTRecord$ByteArrayHolder -> jxl.read.biff.SSTRecord$ByteArrayHolder:
    byte[] bytes -> bytes
jxl.read.biff.SaveRecalcRecord -> jxl.read.biff.SaveRecalcRecord:
    jxl.common.Logger logger -> logger
    boolean recalculateOnSave -> recalculateOnSave
    boolean getRecalculateOnSave() -> getRecalculateOnSave
jxl.read.biff.SetupRecord -> jxl.read.biff.SetupRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    boolean portraitOrientation -> portraitOrientation
    boolean pageOrder -> pageOrder
    double headerMargin -> headerMargin
    double footerMargin -> footerMargin
    int paperSize -> paperSize
    int scaleFactor -> scaleFactor
    int pageStart -> pageStart
    int fitWidth -> fitWidth
    int fitHeight -> fitHeight
    int horizontalPrintResolution -> horizontalPrintResolution
    int verticalPrintResolution -> verticalPrintResolution
    int copies -> copies
    boolean initialized -> initialized
    boolean isPortrait() -> isPortrait
    boolean isRightDown() -> isRightDown
    double getHeaderMargin() -> getHeaderMargin
    double getFooterMargin() -> getFooterMargin
    int getPaperSize() -> getPaperSize
    int getScaleFactor() -> getScaleFactor
    int getPageStart() -> getPageStart
    int getFitWidth() -> getFitWidth
    int getFitHeight() -> getFitHeight
    int getHorizontalPrintResolution() -> getHorizontalPrintResolution
    int getVerticalPrintResolution() -> getVerticalPrintResolution
    int getCopies() -> getCopies
    boolean getInitialized() -> getInitialized
jxl.read.biff.SharedBooleanFormulaRecord -> jxl.read.biff.SharedBooleanFormulaRecord:
    jxl.common.Logger logger -> logger
    boolean value -> value
    boolean getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
jxl.read.biff.SharedDateFormulaRecord -> jxl.read.biff.SharedDateFormulaRecord:
    jxl.read.biff.DateRecord dateRecord -> dateRecord
    double value -> value
    double getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.util.Date getDate() -> getDate
    boolean isTime() -> isTime
    java.text.DateFormat getDateFormat() -> getDateFormat
jxl.read.biff.SharedErrorFormulaRecord -> jxl.read.biff.SharedErrorFormulaRecord:
    jxl.common.Logger logger -> logger
    int errorCode -> errorCode
    byte[] data -> data
    jxl.biff.formula.FormulaErrorCode error -> error
    int getErrorCode() -> getErrorCode
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
jxl.read.biff.SharedFormulaRecord -> jxl.read.biff.SharedFormulaRecord:
    jxl.common.Logger logger -> logger
    int firstRow -> firstRow
    int lastRow -> lastRow
    int firstCol -> firstCol
    int lastCol -> lastCol
    jxl.read.biff.BaseSharedFormulaRecord templateFormula -> templateFormula
    java.util.ArrayList formulas -> formulas
    byte[] tokens -> tokens
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.read.biff.SheetImpl sheet -> sheet
    boolean add(jxl.read.biff.BaseSharedFormulaRecord) -> add
    jxl.Cell[] getFormulas(jxl.biff.FormattingRecords,boolean) -> getFormulas
    jxl.read.biff.BaseSharedFormulaRecord getTemplateFormula() -> getTemplateFormula
jxl.read.biff.SharedNumberFormulaRecord -> jxl.read.biff.SharedNumberFormulaRecord:
    jxl.common.Logger logger -> logger
    double value -> value
    java.text.NumberFormat format -> format
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    java.text.DecimalFormat defaultFormat -> defaultFormat
    void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
    double getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.read.biff.SharedStringFormulaRecord -> jxl.read.biff.SharedStringFormulaRecord:
    jxl.common.Logger logger -> logger
    java.lang.String value -> value
    jxl.read.biff.SharedStringFormulaRecord$EmptyString EMPTY_STRING -> EMPTY_STRING
    java.lang.String getString() -> getString
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
jxl.read.biff.SharedStringFormulaRecord$1 -> jxl.read.biff.SharedStringFormulaRecord$1:
jxl.read.biff.SharedStringFormulaRecord$EmptyString -> jxl.read.biff.SharedStringFormulaRecord$EmptyString:
jxl.read.biff.SheetImpl -> jxl.read.biff.SheetImpl:
    jxl.common.Logger logger -> logger
    jxl.read.biff.File excelFile -> excelFile
    jxl.read.biff.SSTRecord sharedStrings -> sharedStrings
    jxl.read.biff.BOFRecord sheetBof -> sheetBof
    jxl.read.biff.BOFRecord workbookBof -> workbookBof
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    java.lang.String name -> name
    int numRows -> numRows
    int numCols -> numCols
    jxl.Cell[][] cells -> cells
    int startPosition -> startPosition
    jxl.read.biff.ColumnInfoRecord[] columnInfos -> columnInfos
    jxl.read.biff.RowRecord[] rowRecords -> rowRecords
    java.util.ArrayList rowProperties -> rowProperties
    java.util.ArrayList columnInfosArray -> columnInfosArray
    java.util.ArrayList sharedFormulas -> sharedFormulas
    java.util.ArrayList hyperlinks -> hyperlinks
    java.util.ArrayList charts -> charts
    java.util.ArrayList drawings -> drawings
    java.util.ArrayList images -> images
    jxl.biff.DataValidation dataValidation -> dataValidation
    jxl.Range[] mergedCells -> mergedCells
    boolean columnInfosInitialized -> columnInfosInitialized
    boolean rowRecordsInitialized -> rowRecordsInitialized
    boolean nineteenFour -> nineteenFour
    jxl.biff.WorkspaceInformationRecord workspaceOptions -> workspaceOptions
    boolean hidden -> hidden
    jxl.read.biff.PLSRecord plsRecord -> plsRecord
    jxl.read.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    jxl.SheetSettings settings -> settings
    int[] rowBreaks -> rowBreaks
    int[] columnBreaks -> columnBreaks
    int maxRowOutlineLevel -> maxRowOutlineLevel
    int maxColumnOutlineLevel -> maxColumnOutlineLevel
    java.util.ArrayList localNames -> localNames
    java.util.ArrayList conditionalFormats -> conditionalFormats
    jxl.biff.AutoFilter autoFilter -> autoFilter
    jxl.read.biff.WorkbookParser workbook -> workbook
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.Cell getCell(java.lang.String) -> getCell
    jxl.Cell getCell(int,int) -> getCell
    jxl.Cell findCell(java.lang.String) -> findCell
    jxl.Cell findCell(java.lang.String,int,int,int,int,boolean) -> findCell
    jxl.Cell findCell(java.util.regex.Pattern,int,int,int,int,boolean) -> findCell
    jxl.LabelCell findLabelCell(java.lang.String) -> findLabelCell
    int getRows() -> getRows
    int getColumns() -> getColumns
    jxl.Cell[] getRow(int) -> getRow
    jxl.Cell[] getColumn(int) -> getColumn
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean isHidden() -> isHidden
    jxl.read.biff.ColumnInfoRecord getColumnInfo(int) -> getColumnInfo
    jxl.read.biff.ColumnInfoRecord[] getColumnInfos() -> getColumnInfos
    void setHidden(boolean) -> setHidden
    void clear() -> clear
    void readSheet() -> readSheet
    jxl.Hyperlink[] getHyperlinks() -> getHyperlinks
    jxl.Range[] getMergedCells() -> getMergedCells
    jxl.read.biff.RowRecord[] getRowProperties() -> getRowProperties
    jxl.biff.DataValidation getDataValidation() -> getDataValidation
    jxl.read.biff.RowRecord getRowInfo(int) -> getRowInfo
    int[] getRowPageBreaks() -> getRowPageBreaks
    int[] getColumnPageBreaks() -> getColumnPageBreaks
    jxl.biff.drawing.Chart[] getCharts() -> getCharts
    jxl.biff.drawing.DrawingGroupObject[] getDrawings() -> getDrawings
    boolean isProtected() -> isProtected
    jxl.biff.WorkspaceInformationRecord getWorkspaceOptions() -> getWorkspaceOptions
    jxl.SheetSettings getSettings() -> getSettings
    jxl.read.biff.WorkbookParser getWorkbook() -> getWorkbook
    jxl.format.CellFormat getColumnFormat(int) -> getColumnFormat
    int getColumnWidth(int) -> getColumnWidth
    jxl.CellView getColumnView(int) -> getColumnView
    int getRowHeight(int) -> getRowHeight
    jxl.CellView getRowView(int) -> getRowView
    jxl.read.biff.BOFRecord getSheetBof() -> getSheetBof
    jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
    jxl.read.biff.PLSRecord getPLS() -> getPLS
    jxl.read.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    int getNumberOfImages() -> getNumberOfImages
    jxl.Image getDrawing(int) -> getDrawing
    void initializeImages() -> initializeImages
    jxl.biff.drawing.DrawingData getDrawingData() -> getDrawingData
    void addLocalName(jxl.read.biff.NameRecord) -> addLocalName
    jxl.biff.ConditionalFormat[] getConditionalFormats() -> getConditionalFormats
    jxl.biff.AutoFilter getAutoFilter() -> getAutoFilter
    int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
jxl.read.biff.SheetReader -> jxl.read.biff.SheetReader:
    jxl.common.Logger logger -> logger
    jxl.read.biff.File excelFile -> excelFile
    jxl.read.biff.SSTRecord sharedStrings -> sharedStrings
    jxl.read.biff.BOFRecord sheetBof -> sheetBof
    jxl.read.biff.BOFRecord workbookBof -> workbookBof
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    int numRows -> numRows
    int numCols -> numCols
    jxl.Cell[][] cells -> cells
    java.util.ArrayList outOfBoundsCells -> outOfBoundsCells
    int startPosition -> startPosition
    java.util.ArrayList rowProperties -> rowProperties
    java.util.ArrayList columnInfosArray -> columnInfosArray
    java.util.ArrayList sharedFormulas -> sharedFormulas
    java.util.ArrayList hyperlinks -> hyperlinks
    java.util.ArrayList conditionalFormats -> conditionalFormats
    jxl.biff.AutoFilter autoFilter -> autoFilter
    jxl.Range[] mergedCells -> mergedCells
    jxl.biff.DataValidation dataValidation -> dataValidation
    java.util.ArrayList charts -> charts
    java.util.ArrayList drawings -> drawings
    jxl.biff.drawing.DrawingData drawingData -> drawingData
    boolean nineteenFour -> nineteenFour
    jxl.read.biff.PLSRecord plsRecord -> plsRecord
    jxl.read.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    jxl.biff.WorkspaceInformationRecord workspaceOptions -> workspaceOptions
    int[] rowBreaks -> rowBreaks
    int[] columnBreaks -> columnBreaks
    int maxRowOutlineLevel -> maxRowOutlineLevel
    int maxColumnOutlineLevel -> maxColumnOutlineLevel
    jxl.SheetSettings settings -> settings
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.read.biff.WorkbookParser workbook -> workbook
    jxl.read.biff.SheetImpl sheet -> sheet
    void addCell(jxl.Cell) -> addCell
    void read() -> read
    boolean addToSharedFormulas(jxl.read.biff.BaseSharedFormulaRecord) -> addToSharedFormulas
    jxl.Cell revertSharedFormula(jxl.read.biff.BaseSharedFormulaRecord) -> revertSharedFormula
    int getNumRows() -> getNumRows
    int getNumCols() -> getNumCols
    jxl.Cell[][] getCells() -> getCells
    java.util.ArrayList getRowProperties() -> getRowProperties
    java.util.ArrayList getColumnInfosArray() -> getColumnInfosArray
    java.util.ArrayList getHyperlinks() -> getHyperlinks
    java.util.ArrayList getConditionalFormats() -> getConditionalFormats
    jxl.biff.AutoFilter getAutoFilter() -> getAutoFilter
    java.util.ArrayList getCharts() -> getCharts
    java.util.ArrayList getDrawings() -> getDrawings
    jxl.biff.DataValidation getDataValidation() -> getDataValidation
    jxl.Range[] getMergedCells() -> getMergedCells
    jxl.SheetSettings getSettings() -> getSettings
    int[] getRowBreaks() -> getRowBreaks
    int[] getColumnBreaks() -> getColumnBreaks
    jxl.biff.WorkspaceInformationRecord getWorkspaceOptions() -> getWorkspaceOptions
    jxl.read.biff.PLSRecord getPLS() -> getPLS
    jxl.read.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    void addCellComment(int,int,java.lang.String,double,double) -> addCellComment
    void addCellValidation(int,int,int,int,jxl.biff.DataValiditySettingsRecord) -> addCellValidation
    void handleObjectRecord(jxl.biff.drawing.ObjRecord,jxl.biff.drawing.MsoDrawingRecord,java.util.HashMap) -> handleObjectRecord
    jxl.biff.drawing.DrawingData getDrawingData() -> getDrawingData
    void handleOutOfBoundsCells() -> handleOutOfBoundsCells
    int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
jxl.read.biff.SortRecord -> jxl.read.biff.SortRecord:
    int col1Size -> col1Size
    int col2Size -> col2Size
    int col3Size -> col3Size
    java.lang.String col1Name -> col1Name
    java.lang.String col2Name -> col2Name
    java.lang.String col3Name -> col3Name
    byte optionFlags -> optionFlags
    boolean sortColumns -> sortColumns
    boolean sortKey1Desc -> sortKey1Desc
    boolean sortKey2Desc -> sortKey2Desc
    boolean sortKey3Desc -> sortKey3Desc
    boolean sortCaseSensitive -> sortCaseSensitive
    java.lang.String getSortCol1Name() -> getSortCol1Name
    java.lang.String getSortCol2Name() -> getSortCol2Name
    java.lang.String getSortCol3Name() -> getSortCol3Name
    boolean getSortColumns() -> getSortColumns
    boolean getSortKey1Desc() -> getSortKey1Desc
    boolean getSortKey2Desc() -> getSortKey2Desc
    boolean getSortKey3Desc() -> getSortKey3Desc
    boolean getSortCaseSensitive() -> getSortCaseSensitive
jxl.read.biff.StringFormulaRecord -> jxl.read.biff.StringFormulaRecord:
    jxl.common.Logger logger -> logger
    java.lang.String value -> value
    jxl.biff.formula.ExternalSheet externalSheet -> externalSheet
    jxl.biff.WorkbookMethods nameTable -> nameTable
    java.lang.String formulaString -> formulaString
    byte[] data -> data
    void readString(byte[],jxl.WorkbookSettings) -> readString
    java.lang.String getContents() -> getContents
    java.lang.String getString() -> getString
    jxl.CellType getType() -> getType
    byte[] getFormulaData() -> getFormulaData
    java.lang.String getFormula() -> getFormula
jxl.read.biff.SupbookRecord -> jxl.read.biff.SupbookRecord:
    jxl.common.Logger logger -> logger
    jxl.read.biff.SupbookRecord$Type type -> type
    int numSheets -> numSheets
    java.lang.String fileName -> fileName
    java.lang.String[] sheetNames -> sheetNames
    jxl.read.biff.SupbookRecord$Type INTERNAL -> INTERNAL
    jxl.read.biff.SupbookRecord$Type EXTERNAL -> EXTERNAL
    jxl.read.biff.SupbookRecord$Type ADDIN -> ADDIN
    jxl.read.biff.SupbookRecord$Type LINK -> LINK
    jxl.read.biff.SupbookRecord$Type UNKNOWN -> UNKNOWN
    void readExternal(byte[],jxl.WorkbookSettings) -> readExternal
    jxl.read.biff.SupbookRecord$Type getType() -> getType
    int getNumberOfSheets() -> getNumberOfSheets
    java.lang.String getFileName() -> getFileName
    java.lang.String getSheetName(int) -> getSheetName
    byte[] getData() -> getData
    java.lang.String getEncodedFilename(byte[],int,int) -> getEncodedFilename
    java.lang.String getUnicodeEncodedFilename(byte[],int,int) -> getUnicodeEncodedFilename
jxl.read.biff.SupbookRecord$1 -> jxl.read.biff.SupbookRecord$1:
jxl.read.biff.SupbookRecord$Type -> jxl.read.biff.SupbookRecord$Type:
jxl.read.biff.TemplateRecord -> jxl.read.biff.TemplateRecord:
    jxl.common.Logger logger -> logger
    boolean template -> template
    boolean getTemplate() -> getTemplate
jxl.read.biff.TopMarginRecord -> jxl.read.biff.TopMarginRecord:
jxl.read.biff.VerticalPageBreaksRecord -> jxl.read.biff.VerticalPageBreaksRecord:
    jxl.common.Logger logger -> logger
    int[] columnBreaks -> columnBreaks
    jxl.read.biff.VerticalPageBreaksRecord$Biff7 biff7 -> biff7
    int[] getColumnBreaks() -> getColumnBreaks
jxl.read.biff.VerticalPageBreaksRecord$1 -> jxl.read.biff.VerticalPageBreaksRecord$1:
jxl.read.biff.VerticalPageBreaksRecord$Biff7 -> jxl.read.biff.VerticalPageBreaksRecord$Biff7:
jxl.read.biff.Window2Record -> jxl.read.biff.Window2Record:
    jxl.common.Logger logger -> logger
    boolean selected -> selected
    boolean showGridLines -> showGridLines
    boolean displayZeroValues -> displayZeroValues
    boolean frozenPanes -> frozenPanes
    boolean frozenNotSplit -> frozenNotSplit
    boolean pageBreakPreviewMode -> pageBreakPreviewMode
    int pageBreakPreviewMagnification -> pageBreakPreviewMagnification
    int normalMagnification -> normalMagnification
    jxl.read.biff.Window2Record$Biff7 biff7 -> biff7
    boolean isSelected() -> isSelected
    boolean getShowGridLines() -> getShowGridLines
    boolean getDisplayZeroValues() -> getDisplayZeroValues
    boolean getFrozen() -> getFrozen
    boolean getFrozenNotSplit() -> getFrozenNotSplit
    boolean isPageBreakPreview() -> isPageBreakPreview
    int getPageBreakPreviewMagnificaiton() -> getPageBreakPreviewMagnificaiton
    int getNormalMagnificaiton() -> getNormalMagnificaiton
jxl.read.biff.Window2Record$1 -> jxl.read.biff.Window2Record$1:
jxl.read.biff.Window2Record$Biff7 -> jxl.read.biff.Window2Record$Biff7:
jxl.read.biff.WindowProtectedRecord -> jxl.read.biff.WindowProtectedRecord:
    jxl.common.Logger logger -> logger
    boolean windowProtected -> windowProtected
    boolean getWindowProtected() -> getWindowProtected
jxl.read.biff.WorkbookParser -> jxl.read.biff.WorkbookParser:
    jxl.common.Logger logger -> logger
    jxl.read.biff.File excelFile -> excelFile
    int bofs -> bofs
    boolean nineteenFour -> nineteenFour
    jxl.read.biff.SSTRecord sharedStrings -> sharedStrings
    java.util.ArrayList boundsheets -> boundsheets
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    jxl.biff.Fonts fonts -> fonts
    java.util.ArrayList sheets -> sheets
    jxl.read.biff.SheetImpl lastSheet -> lastSheet
    int lastSheetIndex -> lastSheetIndex
    java.util.HashMap namedRecords -> namedRecords
    java.util.ArrayList nameTable -> nameTable
    java.util.ArrayList addInFunctions -> addInFunctions
    jxl.read.biff.ExternalSheetRecord externSheet -> externSheet
    java.util.ArrayList supbooks -> supbooks
    jxl.read.biff.BOFRecord workbookBof -> workbookBof
    jxl.biff.drawing.MsoDrawingGroupRecord msoDrawingGroup -> msoDrawingGroup
    jxl.read.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    boolean wbProtected -> wbProtected
    boolean containsMacros -> containsMacros
    jxl.WorkbookSettings settings -> settings
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.read.biff.CountryRecord countryRecord -> countryRecord
    java.util.ArrayList xctRecords -> xctRecords
    jxl.Sheet[] getSheets() -> getSheets
    jxl.Sheet getReadSheet(int) -> getReadSheet
    jxl.Sheet getSheet(int) -> getSheet
    jxl.Sheet getSheet(java.lang.String) -> getSheet
    java.lang.String[] getSheetNames() -> getSheetNames
    int getExternalSheetIndex(int) -> getExternalSheetIndex
    int getLastExternalSheetIndex(int) -> getLastExternalSheetIndex
    java.lang.String getExternalSheetName(int) -> getExternalSheetName
    java.lang.String getLastExternalSheetName(int) -> getLastExternalSheetName
    int getNumberOfSheets() -> getNumberOfSheets
    void close() -> close
    void addSheet(jxl.Sheet) -> addSheet
    void parse() -> parse
    jxl.biff.FormattingRecords getFormattingRecords() -> getFormattingRecords
    jxl.read.biff.ExternalSheetRecord getExternalSheetRecord() -> getExternalSheetRecord
    jxl.biff.drawing.MsoDrawingGroupRecord getMsoDrawingGroupRecord() -> getMsoDrawingGroupRecord
    jxl.read.biff.SupbookRecord[] getSupbookRecords() -> getSupbookRecords
    jxl.read.biff.NameRecord[] getNameRecords() -> getNameRecords
    jxl.biff.Fonts getFonts() -> getFonts
    jxl.Cell getCell(java.lang.String) -> getCell
    jxl.Cell findCellByName(java.lang.String) -> findCellByName
    jxl.Range[] findByName(java.lang.String) -> findByName
    java.lang.String[] getRangeNames() -> getRangeNames
    jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
    boolean isProtected() -> isProtected
    jxl.WorkbookSettings getSettings() -> getSettings
    int getExternalSheetIndex(java.lang.String) -> getExternalSheetIndex
    int getLastExternalSheetIndex(java.lang.String) -> getLastExternalSheetIndex
    java.lang.String getName(int) -> getName
    int getNameIndex(java.lang.String) -> getNameIndex
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.read.biff.CompoundFile getCompoundFile() -> getCompoundFile
    boolean containsMacros() -> containsMacros
    jxl.read.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    jxl.read.biff.CountryRecord getCountryRecord() -> getCountryRecord
    java.lang.String[] getAddInFunctionNames() -> getAddInFunctionNames
    int getIndex(jxl.Sheet) -> getIndex
    jxl.biff.XCTRecord[] getXCTRecords() -> getXCTRecords
jxl.read.biff.WriteAccessRecord -> jxl.read.biff.WriteAccessRecord:
    java.lang.String wauser -> wauser
    java.lang.String getWriteAccess() -> getWriteAccess
jxl.write.Alignment -> jxl.write.Alignment:
jxl.write.Blank -> jxl.write.Blank:
    jxl.write.WritableCell copyTo(int,int) -> copyTo
jxl.write.BoldStyle -> jxl.write.BoldStyle:
jxl.write.Boolean -> jxl.write.Boolean:
    void setValue(boolean) -> setValue
    jxl.write.WritableCell copyTo(int,int) -> copyTo
jxl.write.Border -> jxl.write.Border:
jxl.write.BorderLineStyle -> jxl.write.BorderLineStyle:
jxl.write.Colour -> jxl.write.Colour:
jxl.write.DateFormat -> jxl.write.DateFormat:
jxl.write.DateFormats -> jxl.write.DateFormats:
    jxl.biff.DisplayFormat FORMAT1 -> FORMAT1
    jxl.biff.DisplayFormat DEFAULT -> DEFAULT
    jxl.biff.DisplayFormat FORMAT2 -> FORMAT2
    jxl.biff.DisplayFormat FORMAT3 -> FORMAT3
    jxl.biff.DisplayFormat FORMAT4 -> FORMAT4
    jxl.biff.DisplayFormat FORMAT5 -> FORMAT5
    jxl.biff.DisplayFormat FORMAT6 -> FORMAT6
    jxl.biff.DisplayFormat FORMAT7 -> FORMAT7
    jxl.biff.DisplayFormat FORMAT8 -> FORMAT8
    jxl.biff.DisplayFormat FORMAT9 -> FORMAT9
    jxl.biff.DisplayFormat FORMAT10 -> FORMAT10
    jxl.biff.DisplayFormat FORMAT11 -> FORMAT11
    jxl.biff.DisplayFormat FORMAT12 -> FORMAT12
jxl.write.DateFormats$BuiltInFormat -> jxl.write.DateFormats$BuiltInFormat:
    int index -> index
    java.lang.String formatString -> formatString
    int getFormatIndex() -> getFormatIndex
    boolean isInitialized() -> isInitialized
    void initialize(int) -> initialize
    boolean isBuiltIn() -> isBuiltIn
    java.lang.String getFormatString() -> getFormatString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
jxl.write.DateTime -> jxl.write.DateTime:
    jxl.write.biff.DateRecord$GMTDate GMT -> GMT
    void setDate(java.util.Date) -> setDate
    void setDate(java.util.Date,jxl.write.biff.DateRecord$GMTDate) -> setDate
    jxl.write.WritableCell copyTo(int,int) -> copyTo
jxl.write.Font -> jxl.write.Font:
    jxl.write.WritableFont$FontName ARIAL -> ARIAL
    jxl.write.WritableFont$FontName TIMES -> TIMES
    jxl.write.WritableFont$BoldStyle NO_BOLD -> NO_BOLD
    jxl.write.WritableFont$BoldStyle BOLD -> BOLD
    jxl.format.UnderlineStyle NO_UNDERLINE -> NO_UNDERLINE
    jxl.format.UnderlineStyle SINGLE -> SINGLE
    jxl.format.UnderlineStyle DOUBLE -> DOUBLE
    jxl.format.UnderlineStyle SINGLE_ACCOUNTING -> SINGLE_ACCOUNTING
    jxl.format.UnderlineStyle DOUBLE_ACCOUNTING -> DOUBLE_ACCOUNTING
    jxl.format.ScriptStyle NORMAL_SCRIPT -> NORMAL_SCRIPT
    jxl.format.ScriptStyle SUPERSCRIPT -> SUPERSCRIPT
    jxl.format.ScriptStyle SUBSCRIPT -> SUBSCRIPT
jxl.write.Formula -> jxl.write.Formula:
    jxl.write.WritableCell copyTo(int,int) -> copyTo
jxl.write.Label -> jxl.write.Label:
    void setString(java.lang.String) -> setString
    jxl.write.WritableCell copyTo(int,int) -> copyTo
jxl.write.Number -> jxl.write.Number:
    void setValue(double) -> setValue
    jxl.write.WritableCell copyTo(int,int) -> copyTo
jxl.write.NumberFormat -> jxl.write.NumberFormat:
    jxl.write.biff.NumberFormatRecord$NonValidatingFormat COMPLEX_FORMAT -> COMPLEX_FORMAT
    java.lang.String CURRENCY_EURO_PREFIX -> CURRENCY_EURO_PREFIX
    java.lang.String CURRENCY_EURO_SUFFIX -> CURRENCY_EURO_SUFFIX
    java.lang.String CURRENCY_POUND -> CURRENCY_POUND
    java.lang.String CURRENCY_JAPANESE_YEN -> CURRENCY_JAPANESE_YEN
    java.lang.String CURRENCY_DOLLAR -> CURRENCY_DOLLAR
    java.lang.String FRACTION_THREE_DIGITS -> FRACTION_THREE_DIGITS
    java.lang.String FRACTION_HALVES -> FRACTION_HALVES
    java.lang.String FRACTION_QUARTERS -> FRACTION_QUARTERS
    java.lang.String FRACTIONS_EIGHTHS -> FRACTIONS_EIGHTHS
    java.lang.String FRACTION_SIXTEENTHS -> FRACTION_SIXTEENTHS
    java.lang.String FRACTION_TENTHS -> FRACTION_TENTHS
    java.lang.String FRACTION_HUNDREDTHS -> FRACTION_HUNDREDTHS
jxl.write.NumberFormats -> jxl.write.NumberFormats:
    jxl.biff.DisplayFormat DEFAULT -> DEFAULT
    jxl.biff.DisplayFormat INTEGER -> INTEGER
    jxl.biff.DisplayFormat FLOAT -> FLOAT
    jxl.biff.DisplayFormat THOUSANDS_INTEGER -> THOUSANDS_INTEGER
    jxl.biff.DisplayFormat THOUSANDS_FLOAT -> THOUSANDS_FLOAT
    jxl.biff.DisplayFormat ACCOUNTING_INTEGER -> ACCOUNTING_INTEGER
    jxl.biff.DisplayFormat ACCOUNTING_RED_INTEGER -> ACCOUNTING_RED_INTEGER
    jxl.biff.DisplayFormat ACCOUNTING_FLOAT -> ACCOUNTING_FLOAT
    jxl.biff.DisplayFormat ACCOUNTING_RED_FLOAT -> ACCOUNTING_RED_FLOAT
    jxl.biff.DisplayFormat PERCENT_INTEGER -> PERCENT_INTEGER
    jxl.biff.DisplayFormat PERCENT_FLOAT -> PERCENT_FLOAT
    jxl.biff.DisplayFormat EXPONENTIAL -> EXPONENTIAL
    jxl.biff.DisplayFormat FRACTION_ONE_DIGIT -> FRACTION_ONE_DIGIT
    jxl.biff.DisplayFormat FRACTION_TWO_DIGITS -> FRACTION_TWO_DIGITS
    jxl.biff.DisplayFormat FORMAT1 -> FORMAT1
    jxl.biff.DisplayFormat FORMAT2 -> FORMAT2
    jxl.biff.DisplayFormat FORMAT3 -> FORMAT3
    jxl.biff.DisplayFormat FORMAT4 -> FORMAT4
    jxl.biff.DisplayFormat FORMAT5 -> FORMAT5
    jxl.biff.DisplayFormat FORMAT6 -> FORMAT6
    jxl.biff.DisplayFormat FORMAT7 -> FORMAT7
    jxl.biff.DisplayFormat FORMAT8 -> FORMAT8
    jxl.biff.DisplayFormat FORMAT9 -> FORMAT9
    jxl.biff.DisplayFormat FORMAT10 -> FORMAT10
    jxl.biff.DisplayFormat TEXT -> TEXT
jxl.write.NumberFormats$BuiltInFormat -> jxl.write.NumberFormats$BuiltInFormat:
    int index -> index
    java.lang.String formatString -> formatString
    int getFormatIndex() -> getFormatIndex
    boolean isInitialized() -> isInitialized
    boolean isBuiltIn() -> isBuiltIn
    void initialize(int) -> initialize
    java.lang.String getFormatString() -> getFormatString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
jxl.write.Pattern -> jxl.write.Pattern:
jxl.write.VerticalAlignment -> jxl.write.VerticalAlignment:
jxl.write.WritableCell -> jxl.write.WritableCell:
    void setCellFormat(jxl.format.CellFormat) -> setCellFormat
    jxl.write.WritableCell copyTo(int,int) -> copyTo
    jxl.write.WritableCellFeatures getWritableCellFeatures() -> getWritableCellFeatures
    void setCellFeatures(jxl.write.WritableCellFeatures) -> setCellFeatures
jxl.write.WritableCellFeatures -> jxl.write.WritableCellFeatures:
    jxl.biff.BaseCellFeatures$ValidationCondition BETWEEN -> BETWEEN
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_BETWEEN -> NOT_BETWEEN
    jxl.biff.BaseCellFeatures$ValidationCondition EQUAL -> EQUAL
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_EQUAL -> NOT_EQUAL
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_THAN -> GREATER_THAN
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_THAN -> LESS_THAN
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_EQUAL -> GREATER_EQUAL
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_EQUAL -> LESS_EQUAL
    void setComment(java.lang.String) -> setComment
    void setComment(java.lang.String,double,double) -> setComment
    void removeComment() -> removeComment
    void removeDataValidation() -> removeDataValidation
    void setDataValidationList(java.util.Collection) -> setDataValidationList
    void setDataValidationRange(int,int,int,int) -> setDataValidationRange
    void setDataValidationRange(java.lang.String) -> setDataValidationRange
    void setNumberValidation(double,jxl.biff.BaseCellFeatures$ValidationCondition) -> setNumberValidation
    void setNumberValidation(double,double,jxl.biff.BaseCellFeatures$ValidationCondition) -> setNumberValidation
jxl.write.WritableCellFormat -> jxl.write.WritableCellFormat:
    void setAlignment(jxl.format.Alignment) -> setAlignment
    void setVerticalAlignment(jxl.format.VerticalAlignment) -> setVerticalAlignment
    void setOrientation(jxl.format.Orientation) -> setOrientation
    void setWrap(boolean) -> setWrap
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle) -> setBorder
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> setBorder
    void setBackground(jxl.format.Colour) -> setBackground
    void setBackground(jxl.format.Colour,jxl.format.Pattern) -> setBackground
    void setShrinkToFit(boolean) -> setShrinkToFit
    void setIndentation(int) -> setIndentation
    void setLocked(boolean) -> setLocked
jxl.write.WritableFont -> jxl.write.WritableFont:
    jxl.write.WritableFont$FontName ARIAL -> ARIAL
    jxl.write.WritableFont$FontName TIMES -> TIMES
    jxl.write.WritableFont$FontName COURIER -> COURIER
    jxl.write.WritableFont$FontName TAHOMA -> TAHOMA
    jxl.write.WritableFont$BoldStyle NO_BOLD -> NO_BOLD
    jxl.write.WritableFont$BoldStyle BOLD -> BOLD
    int DEFAULT_POINT_SIZE -> DEFAULT_POINT_SIZE
    void setPointSize(int) -> setPointSize
    void setBoldStyle(jxl.write.WritableFont$BoldStyle) -> setBoldStyle
    void setItalic(boolean) -> setItalic
    void setUnderlineStyle(jxl.format.UnderlineStyle) -> setUnderlineStyle
    void setColour(jxl.format.Colour) -> setColour
    void setScriptStyle(jxl.format.ScriptStyle) -> setScriptStyle
    boolean isStruckout() -> isStruckout
    void setStruckout(boolean) -> setStruckout
    jxl.write.WritableFont$FontName createFont(java.lang.String) -> createFont
jxl.write.WritableFont$BoldStyle -> jxl.write.WritableFont$BoldStyle:
    int value -> value
jxl.write.WritableFont$FontName -> jxl.write.WritableFont$FontName:
    java.lang.String name -> name
jxl.write.WritableHyperlink -> jxl.write.WritableHyperlink:
    void setURL(java.net.URL) -> setURL
    void setFile(java.io.File) -> setFile
    void setDescription(java.lang.String) -> setDescription
    void setLocation(java.lang.String,jxl.write.WritableSheet,int,int,int,int) -> setLocation
jxl.write.WritableImage -> jxl.write.WritableImage:
    jxl.biff.drawing.Drawing$ImageAnchorProperties MOVE_AND_SIZE_WITH_CELLS -> MOVE_AND_SIZE_WITH_CELLS
    jxl.biff.drawing.Drawing$ImageAnchorProperties MOVE_WITH_CELLS -> MOVE_WITH_CELLS
    jxl.biff.drawing.Drawing$ImageAnchorProperties NO_MOVE_OR_SIZE_WITH_CELLS -> NO_MOVE_OR_SIZE_WITH_CELLS
    double getColumn() -> getColumn
    void setColumn(double) -> setColumn
    double getRow() -> getRow
    void setRow(double) -> setRow
    double getWidth() -> getWidth
    void setWidth(double) -> setWidth
    double getHeight() -> getHeight
    void setHeight(double) -> setHeight
    java.io.File getImageFile() -> getImageFile
    byte[] getImageData() -> getImageData
    void setImageAnchor(jxl.biff.drawing.Drawing$ImageAnchorProperties) -> setImageAnchor
    jxl.biff.drawing.Drawing$ImageAnchorProperties getImageAnchor() -> getImageAnchor
jxl.write.WritableSheet -> jxl.write.WritableSheet:
    void addCell(jxl.write.WritableCell) -> addCell
    void setName(java.lang.String) -> setName
    void setHidden(boolean) -> setHidden
    void setProtected(boolean) -> setProtected
    void setColumnView(int,int) -> setColumnView
    void setColumnView(int,int,jxl.format.CellFormat) -> setColumnView
    void setColumnView(int,jxl.CellView) -> setColumnView
    void setRowView(int,int) -> setRowView
    void setRowView(int,boolean) -> setRowView
    void setRowView(int,int,boolean) -> setRowView
    void setRowView(int,jxl.CellView) -> setRowView
    jxl.write.WritableCell getWritableCell(int,int) -> getWritableCell
    jxl.write.WritableCell getWritableCell(java.lang.String) -> getWritableCell
    jxl.write.WritableHyperlink[] getWritableHyperlinks() -> getWritableHyperlinks
    void insertRow(int) -> insertRow
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeRow(int) -> removeRow
    jxl.Range mergeCells(int,int,int,int) -> mergeCells
    void setRowGroup(int,int,boolean) -> setRowGroup
    void unsetRowGroup(int,int) -> unsetRowGroup
    void setColumnGroup(int,int,boolean) -> setColumnGroup
    void unsetColumnGroup(int,int) -> unsetColumnGroup
    void unmergeCells(jxl.Range) -> unmergeCells
    void addHyperlink(jxl.write.WritableHyperlink) -> addHyperlink
    void removeHyperlink(jxl.write.WritableHyperlink) -> removeHyperlink
    void removeHyperlink(jxl.write.WritableHyperlink,boolean) -> removeHyperlink
    void setHeader(java.lang.String,java.lang.String,java.lang.String) -> setHeader
    void setFooter(java.lang.String,java.lang.String,java.lang.String) -> setFooter
    void setPageSetup(jxl.format.PageOrientation) -> setPageSetup
    void setPageSetup(jxl.format.PageOrientation,double,double) -> setPageSetup
    void setPageSetup(jxl.format.PageOrientation,jxl.format.PaperSize,double,double) -> setPageSetup
    void addRowPageBreak(int) -> addRowPageBreak
    void addColumnPageBreak(int) -> addColumnPageBreak
    void addImage(jxl.write.WritableImage) -> addImage
    int getNumberOfImages() -> getNumberOfImages
    jxl.write.WritableImage getImage(int) -> getImage
    void removeImage(jxl.write.WritableImage) -> removeImage
    void applySharedDataValidation(jxl.write.WritableCell,int,int) -> applySharedDataValidation
    void removeSharedDataValidation(jxl.write.WritableCell) -> removeSharedDataValidation
jxl.write.WritableWorkbook -> jxl.write.WritableWorkbook:
    jxl.write.WritableFont ARIAL_10_PT -> ARIAL_10_PT
    jxl.write.WritableFont HYPERLINK_FONT -> HYPERLINK_FONT
    jxl.write.WritableCellFormat NORMAL_STYLE -> NORMAL_STYLE
    jxl.write.WritableCellFormat HYPERLINK_STYLE -> HYPERLINK_STYLE
    jxl.write.WritableCellFormat HIDDEN_STYLE -> HIDDEN_STYLE
    jxl.write.WritableSheet[] getSheets() -> getSheets
    java.lang.String[] getSheetNames() -> getSheetNames
    jxl.write.WritableSheet getSheet(int) -> getSheet
    jxl.write.WritableSheet getSheet(java.lang.String) -> getSheet
    jxl.write.WritableCell getWritableCell(java.lang.String) -> getWritableCell
    int getNumberOfSheets() -> getNumberOfSheets
    void close() -> close
    jxl.write.WritableSheet createSheet(java.lang.String,int) -> createSheet
    jxl.write.WritableSheet importSheet(java.lang.String,int,jxl.Sheet) -> importSheet
    void copySheet(int,java.lang.String,int) -> copySheet
    void copySheet(java.lang.String,java.lang.String,int) -> copySheet
    void removeSheet(int) -> removeSheet
    jxl.write.WritableSheet moveSheet(int,int) -> moveSheet
    void write() -> write
    void setProtected(boolean) -> setProtected
    void setColourRGB(jxl.format.Colour,int,int,int) -> setColourRGB
    void copy(jxl.Workbook) -> copy
    jxl.write.WritableCell findCellByName(java.lang.String) -> findCellByName
    jxl.Range[] findByName(java.lang.String) -> findByName
    java.lang.String[] getRangeNames() -> getRangeNames
    void removeRangeName(java.lang.String) -> removeRangeName
    void addNameArea(java.lang.String,jxl.write.WritableSheet,int,int,int,int) -> addNameArea
    void setOutputFile(java.io.File) -> setOutputFile
jxl.write.WriteException -> jxl.write.WriteException:
jxl.write.biff.ArbitraryRecord -> jxl.write.biff.ArbitraryRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.BOFRecord -> jxl.write.biff.BOFRecord:
    byte[] data -> data
    jxl.write.biff.BOFRecord$WorkbookGlobalsBOF workbookGlobals -> workbookGlobals
    jxl.write.biff.BOFRecord$SheetBOF sheet -> sheet
    byte[] getData() -> getData
jxl.write.biff.BOFRecord$1 -> jxl.write.biff.BOFRecord$1:
jxl.write.biff.BOFRecord$SheetBOF -> jxl.write.biff.BOFRecord$SheetBOF:
jxl.write.biff.BOFRecord$WorkbookGlobalsBOF -> jxl.write.biff.BOFRecord$WorkbookGlobalsBOF:
jxl.write.biff.BackupRecord -> jxl.write.biff.BackupRecord:
    boolean backup -> backup
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.BlankRecord -> jxl.write.biff.BlankRecord:
    jxl.common.Logger logger -> logger
    jxl.CellType getType() -> getType
    java.lang.String getContents() -> getContents
jxl.write.biff.BookboolRecord -> jxl.write.biff.BookboolRecord:
    boolean externalLink -> externalLink
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.BooleanRecord -> jxl.write.biff.BooleanRecord:
    boolean value -> value
    boolean getValue() -> getValue
    java.lang.String getContents() -> getContents
    jxl.CellType getType() -> getType
    void setValue(boolean) -> setValue
    byte[] getData() -> getData
jxl.write.biff.BottomMarginRecord -> jxl.write.biff.BottomMarginRecord:
jxl.write.biff.BoundsheetRecord -> jxl.write.biff.BoundsheetRecord:
    boolean hidden -> hidden
    boolean chartOnly -> chartOnly
    java.lang.String name -> name
    byte[] data -> data
    void setHidden() -> setHidden
    void setChartOnly() -> setChartOnly
    byte[] getData() -> getData
jxl.write.biff.ButtonPropertySetRecord -> jxl.write.biff.ButtonPropertySetRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.CalcCountRecord -> jxl.write.biff.CalcCountRecord:
    int calcCount -> calcCount
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.CalcModeRecord -> jxl.write.biff.CalcModeRecord:
    jxl.write.biff.CalcModeRecord$CalcMode calculationMode -> calculationMode
    jxl.write.biff.CalcModeRecord$CalcMode manual -> manual
    jxl.write.biff.CalcModeRecord$CalcMode automatic -> automatic
    jxl.write.biff.CalcModeRecord$CalcMode automaticNoTables -> automaticNoTables
    byte[] getData() -> getData
jxl.write.biff.CalcModeRecord$CalcMode -> jxl.write.biff.CalcModeRecord$CalcMode:
    int value -> value
jxl.write.biff.CellValue -> jxl.write.biff.CellValue:
    jxl.common.Logger logger -> logger
    int row -> row
    int column -> column
    jxl.biff.XFRecord format -> format
    jxl.biff.FormattingRecords formattingRecords -> formattingRecords
    boolean referenced -> referenced
    jxl.write.biff.WritableSheetImpl sheet -> sheet
    jxl.write.WritableCellFeatures features -> features
    boolean copied -> copied
    void setCellFormat(jxl.format.CellFormat) -> setCellFormat
    int getRow() -> getRow
    int getColumn() -> getColumn
    boolean isHidden() -> isHidden
    byte[] getData() -> getData
    void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
    boolean isReferenced() -> isReferenced
    int getXFIndex() -> getXFIndex
    jxl.format.CellFormat getCellFormat() -> getCellFormat
    void incrementRow() -> incrementRow
    void decrementRow() -> decrementRow
    void incrementColumn() -> incrementColumn
    void decrementColumn() -> decrementColumn
    void columnInserted(jxl.Sheet,int,int) -> columnInserted
    void columnRemoved(jxl.Sheet,int,int) -> columnRemoved
    void rowInserted(jxl.Sheet,int,int) -> rowInserted
    void rowRemoved(jxl.Sheet,int,int) -> rowRemoved
    jxl.write.biff.WritableSheetImpl getSheet() -> getSheet
    void addCellFormat() -> addCellFormat
    jxl.CellFeatures getCellFeatures() -> getCellFeatures
    jxl.write.WritableCellFeatures getWritableCellFeatures() -> getWritableCellFeatures
    void setCellFeatures(jxl.write.WritableCellFeatures) -> setCellFeatures
    void addCellFeatures() -> addCellFeatures
    void removeCellFeatures() -> removeCellFeatures
    void removeComment(jxl.biff.drawing.Comment) -> removeComment
    void removeDataValidation() -> removeDataValidation
    void setCopied(boolean) -> setCopied
jxl.write.biff.CellXFRecord -> jxl.write.biff.CellXFRecord:
    void setAlignment(jxl.format.Alignment) -> setAlignment
    void setBackground(jxl.format.Colour,jxl.format.Pattern) -> setBackground
    void setLocked(boolean) -> setLocked
    void setIndentation(int) -> setIndentation
    void setShrinkToFit(boolean) -> setShrinkToFit
    void setVerticalAlignment(jxl.format.VerticalAlignment) -> setVerticalAlignment
    void setOrientation(jxl.format.Orientation) -> setOrientation
    void setWrap(boolean) -> setWrap
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> setBorder
jxl.write.biff.CodepageRecord -> jxl.write.biff.CodepageRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.ColumnInfoRecord -> jxl.write.biff.ColumnInfoRecord:
    byte[] data -> data
    int column -> column
    jxl.biff.XFRecord style -> style
    int xfIndex -> xfIndex
    int width -> width
    boolean hidden -> hidden
    int outlineLevel -> outlineLevel
    boolean collapsed -> collapsed
    int getColumn() -> getColumn
    void incrementColumn() -> incrementColumn
    void decrementColumn() -> decrementColumn
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    byte[] getData() -> getData
    jxl.biff.XFRecord getCellFormat() -> getCellFormat
    void setCellFormat(jxl.biff.XFRecord) -> setCellFormat
    int getXfIndex() -> getXfIndex
    void rationalize(jxl.biff.IndexMapping) -> rationalize
    void setHidden(boolean) -> setHidden
    boolean getHidden() -> getHidden
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getOutlineLevel() -> getOutlineLevel
    boolean getCollapsed() -> getCollapsed
    void incrementOutlineLevel() -> incrementOutlineLevel
    void decrementOutlineLevel() -> decrementOutlineLevel
    void setOutlineLevel(int) -> setOutlineLevel
    void setCollapsed(boolean) -> setCollapsed
jxl.write.biff.ColumnsExceededException -> jxl.write.biff.ColumnsExceededException:
jxl.write.biff.CompoundFile -> jxl.write.biff.CompoundFile:
    jxl.common.Logger logger -> logger
    java.io.OutputStream out -> out
    jxl.write.biff.ExcelDataOutput excelData -> excelData
    int size -> size
    int requiredSize -> requiredSize
    int numBigBlockDepotBlocks -> numBigBlockDepotBlocks
    int numSmallBlockDepotChainBlocks -> numSmallBlockDepotChainBlocks
    int numSmallBlockDepotBlocks -> numSmallBlockDepotBlocks
    int numExtensionBlocks -> numExtensionBlocks
    int extensionBlock -> extensionBlock
    int excelDataBlocks -> excelDataBlocks
    int rootStartBlock -> rootStartBlock
    int excelDataStartBlock -> excelDataStartBlock
    int bbdStartBlock -> bbdStartBlock
    int sbdStartBlockChain -> sbdStartBlockChain
    int sbdStartBlock -> sbdStartBlock
    int additionalPropertyBlocks -> additionalPropertyBlocks
    int numSmallBlocks -> numSmallBlocks
    int numPropertySets -> numPropertySets
    int numRootEntryBlocks -> numRootEntryBlocks
    java.util.ArrayList additionalPropertySets -> additionalPropertySets
    java.util.HashMap standardPropertySets -> standardPropertySets
    int bbdPos -> bbdPos
    byte[] bigBlockDepot -> bigBlockDepot
    void readAdditionalPropertySets(jxl.read.biff.CompoundFile) -> readAdditionalPropertySets
    void write() -> write
    void writeAdditionalPropertySets() -> writeAdditionalPropertySets
    void writeExcelData() -> writeExcelData
    void writeDocumentSummaryData() -> writeDocumentSummaryData
    void writeSummaryData() -> writeSummaryData
    void writeHeader() -> writeHeader
    void checkBbdPos() -> checkBbdPos
    void writeBlockChain(int,int) -> writeBlockChain
    void writeAdditionalPropertySetBlockChains() -> writeAdditionalPropertySetBlockChains
    void writeSmallBlockDepotChain() -> writeSmallBlockDepotChain
    void writeSmallBlockDepot() -> writeSmallBlockDepot
    void writeBigBlockDepot() -> writeBigBlockDepot
    int getBigBlocksRequired(int) -> getBigBlocksRequired
    int getSmallBlocksRequired(int) -> getSmallBlocksRequired
    void writePropertySets() -> writePropertySets
jxl.write.biff.CompoundFile$ReadPropertyStorage -> jxl.write.biff.CompoundFile$ReadPropertyStorage:
    jxl.biff.BaseCompoundFile$PropertyStorage propertyStorage -> propertyStorage
    byte[] data -> data
    int number -> number
jxl.write.biff.CopyAdditionalPropertySetsException -> jxl.write.biff.CopyAdditionalPropertySetsException:
jxl.write.biff.CountryRecord -> jxl.write.biff.CountryRecord:
    int language -> language
    int regionalSettings -> regionalSettings
    byte[] getData() -> getData
jxl.write.biff.DBCellRecord -> jxl.write.biff.DBCellRecord:
    int rowPos -> rowPos
    int cellOffset -> cellOffset
    java.util.ArrayList cellRowPositions -> cellRowPositions
    int position -> position
    void setCellOffset(int) -> setCellOffset
    void addCellRowPosition(int) -> addCellRowPosition
    void setPosition(int) -> setPosition
    byte[] getData() -> getData
jxl.write.biff.DSFRecord -> jxl.write.biff.DSFRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.DateFormatRecord -> jxl.write.biff.DateFormatRecord:
jxl.write.biff.DateRecord -> jxl.write.biff.DateRecord:
    jxl.common.Logger logger -> logger
    double value -> value
    java.util.Date date -> date
    boolean time -> time
    int utcOffsetDays -> utcOffsetDays
    long msInADay -> msInADay
    jxl.write.WritableCellFormat defaultDateFormat -> defaultDateFormat
    int nonLeapDay -> nonLeapDay
    void calculateValue(boolean) -> calculateValue
    jxl.CellType getType() -> getType
    byte[] getData() -> getData
    java.lang.String getContents() -> getContents
    void setDate(java.util.Date) -> setDate
    void setDate(java.util.Date,jxl.write.biff.DateRecord$GMTDate) -> setDate
    java.util.Date getDate() -> getDate
    boolean isTime() -> isTime
    java.text.DateFormat getDateFormat() -> getDateFormat
jxl.write.biff.DateRecord$GMTDate -> jxl.write.biff.DateRecord$GMTDate:
jxl.write.biff.DefaultColumnWidth -> jxl.write.biff.DefaultColumnWidth:
    int width -> width
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.DefaultRowHeightRecord -> jxl.write.biff.DefaultRowHeightRecord:
    byte[] data -> data
    int rowHeight -> rowHeight
    boolean changed -> changed
    byte[] getData() -> getData
jxl.write.biff.DeltaRecord -> jxl.write.biff.DeltaRecord:
    byte[] data -> data
    double iterationValue -> iterationValue
    byte[] getData() -> getData
jxl.write.biff.DimensionRecord -> jxl.write.biff.DimensionRecord:
    int numRows -> numRows
    int numCols -> numCols
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.EOFRecord -> jxl.write.biff.EOFRecord:
    byte[] getData() -> getData
jxl.write.biff.Excel9FileRecord -> jxl.write.biff.Excel9FileRecord:
    byte[] getData() -> getData
jxl.write.biff.ExcelDataOutput -> jxl.write.biff.ExcelDataOutput:
    void write(byte[]) -> write
    int getPosition() -> getPosition
    void setData(byte[],int) -> setData
    void writeData(java.io.OutputStream) -> writeData
    void close() -> close
jxl.write.biff.ExtendedSSTRecord -> jxl.write.biff.ExtendedSSTRecord:
    int infoRecordSize -> infoRecordSize
    int numberOfStrings -> numberOfStrings
    int[] absoluteStreamPositions -> absoluteStreamPositions
    int[] relativeStreamPositions -> relativeStreamPositions
    int currentStringIndex -> currentStringIndex
    int getNumberOfBuckets() -> getNumberOfBuckets
    int getNumberOfStringsPerBucket() -> getNumberOfStringsPerBucket
    void addString(int,int) -> addString
    byte[] getData() -> getData
jxl.write.biff.ExternalNameRecord -> jxl.write.biff.ExternalNameRecord:
    jxl.common.Logger logger -> logger
    java.lang.String name -> name
    byte[] getData() -> getData
jxl.write.biff.ExternalSheetRecord -> jxl.write.biff.ExternalSheetRecord:
    byte[] data -> data
    java.util.ArrayList xtis -> xtis
    int getIndex(int,int) -> getIndex
    byte[] getData() -> getData
    int getSupbookIndex(int) -> getSupbookIndex
    int getFirstTabIndex(int) -> getFirstTabIndex
    int getLastTabIndex(int) -> getLastTabIndex
    void sheetInserted(int) -> sheetInserted
    void sheetRemoved(int) -> sheetRemoved
jxl.write.biff.ExternalSheetRecord$XTI -> jxl.write.biff.ExternalSheetRecord$XTI:
    int supbookIndex -> supbookIndex
    int firstTab -> firstTab
    int lastTab -> lastTab
    void sheetInserted(int) -> sheetInserted
    void sheetRemoved(int) -> sheetRemoved
jxl.write.biff.File -> jxl.write.biff.File:
    jxl.common.Logger logger -> logger
    jxl.write.biff.ExcelDataOutput data -> data
    int pos -> pos
    java.io.OutputStream outputStream -> outputStream
    int initialFileSize -> initialFileSize
    int arrayGrowSize -> arrayGrowSize
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.read.biff.CompoundFile readCompoundFile -> readCompoundFile
    void createDataOutput() -> createDataOutput
    void close(boolean) -> close
    void write(jxl.biff.ByteData) -> write
    int getPos() -> getPos
    void setData(byte[],int) -> setData
    void setOutputFile(java.io.OutputStream) -> setOutputFile
jxl.write.biff.FileDataOutput -> jxl.write.biff.FileDataOutput:
    jxl.common.Logger logger -> logger
    java.io.File temporaryFile -> temporaryFile
    java.io.RandomAccessFile data -> data
    void write(byte[]) -> write
    int getPosition() -> getPosition
    void setData(byte[],int) -> setData
    void writeData(java.io.OutputStream) -> writeData
    void close() -> close
jxl.write.biff.FooterRecord -> jxl.write.biff.FooterRecord:
    byte[] data -> data
    java.lang.String footer -> footer
    byte[] getData() -> getData
jxl.write.biff.FormulaRecord -> jxl.write.biff.FormulaRecord:
    jxl.common.Logger logger -> logger
    java.lang.String formulaToParse -> formulaToParse
    jxl.biff.formula.FormulaParser parser -> parser
    java.lang.String formulaString -> formulaString
    byte[] formulaBytes -> formulaBytes
    jxl.write.biff.CellValue copiedFrom -> copiedFrom
    void initialize(jxl.WorkbookSettings,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods) -> initialize
    void initializeCopiedFormula(jxl.WorkbookSettings,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods) -> initializeCopiedFormula
    void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
    byte[] getData() -> getData
    jxl.CellType getType() -> getType
    java.lang.String getContents() -> getContents
    byte[] getFormulaData() -> getFormulaData
    jxl.write.WritableCell copyTo(int,int) -> copyTo
    void columnInserted(jxl.Sheet,int,int) -> columnInserted
    void columnRemoved(jxl.Sheet,int,int) -> columnRemoved
    void rowInserted(jxl.Sheet,int,int) -> rowInserted
    void rowRemoved(jxl.Sheet,int,int) -> rowRemoved
jxl.write.biff.FunctionGroupCountRecord -> jxl.write.biff.FunctionGroupCountRecord:
    byte[] data -> data
    int numFunctionGroups -> numFunctionGroups
    byte[] getData() -> getData
jxl.write.biff.GridSetRecord -> jxl.write.biff.GridSetRecord:
    byte[] data -> data
    boolean gridSet -> gridSet
    byte[] getData() -> getData
jxl.write.biff.GuttersRecord -> jxl.write.biff.GuttersRecord:
    byte[] data -> data
    int rowGutter -> rowGutter
    int colGutter -> colGutter
    int maxRowOutline -> maxRowOutline
    int maxColumnOutline -> maxColumnOutline
    byte[] getData() -> getData
    int getMaxRowOutline() -> getMaxRowOutline
    void setMaxRowOutline(int) -> setMaxRowOutline
    int getMaxColumnOutline() -> getMaxColumnOutline
    void setMaxColumnOutline(int) -> setMaxColumnOutline
jxl.write.biff.HeaderRecord -> jxl.write.biff.HeaderRecord:
    byte[] data -> data
    java.lang.String header -> header
    byte[] getData() -> getData
jxl.write.biff.HideobjRecord -> jxl.write.biff.HideobjRecord:
    int hidemode -> hidemode
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.HorizontalCentreRecord -> jxl.write.biff.HorizontalCentreRecord:
    byte[] data -> data
    boolean centre -> centre
    byte[] getData() -> getData
jxl.write.biff.HorizontalPageBreaksRecord -> jxl.write.biff.HorizontalPageBreaksRecord:
    int[] rowBreaks -> rowBreaks
    byte[] getData() -> getData
jxl.write.biff.HyperlinkRecord -> jxl.write.biff.HyperlinkRecord:
    jxl.common.Logger logger -> logger
    int firstRow -> firstRow
    int lastRow -> lastRow
    int firstColumn -> firstColumn
    int lastColumn -> lastColumn
    java.net.URL url -> url
    java.io.File file -> file
    java.lang.String location -> location
    java.lang.String contents -> contents
    jxl.write.biff.HyperlinkRecord$LinkType linkType -> linkType
    byte[] data -> data
    jxl.Range range -> range
    jxl.write.WritableSheet sheet -> sheet
    boolean modified -> modified
    jxl.write.biff.HyperlinkRecord$LinkType urlLink -> urlLink
    jxl.write.biff.HyperlinkRecord$LinkType fileLink -> fileLink
    jxl.write.biff.HyperlinkRecord$LinkType uncLink -> uncLink
    jxl.write.biff.HyperlinkRecord$LinkType workbookLink -> workbookLink
    jxl.write.biff.HyperlinkRecord$LinkType unknown -> unknown
    void copyReadHyperlink(jxl.Hyperlink,jxl.write.WritableSheet) -> copyReadHyperlink
    void copyWritableHyperlink(jxl.Hyperlink,jxl.write.WritableSheet) -> copyWritableHyperlink
    boolean isFile() -> isFile
    boolean isUNC() -> isUNC
    boolean isURL() -> isURL
    boolean isLocation() -> isLocation
    int getRow() -> getRow
    int getColumn() -> getColumn
    int getLastRow() -> getLastRow
    int getLastColumn() -> getLastColumn
    java.net.URL getURL() -> getURL
    java.io.File getFile() -> getFile
    byte[] getData() -> getData
    java.lang.String toString() -> toString
    jxl.Range getRange() -> getRange
    void setURL(java.net.URL) -> setURL
    void setFile(java.io.File) -> setFile
    void setLocation(java.lang.String,jxl.write.WritableSheet,int,int,int,int) -> setLocation
    void setLocation(jxl.write.WritableSheet,int,int,int,int) -> setLocation
    void insertRow(int) -> insertRow
    void insertColumn(int) -> insertColumn
    void removeRow(int) -> removeRow
    void removeColumn(int) -> removeColumn
    byte[] getURLData(byte[]) -> getURLData
    byte[] getUNCData(byte[]) -> getUNCData
    byte[] getFileData(byte[]) -> getFileData
    java.lang.String getShortName(java.lang.String) -> getShortName
    byte[] getLocationData(byte[]) -> getLocationData
    void initialize(jxl.write.WritableSheet) -> initialize
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
jxl.write.biff.HyperlinkRecord$1 -> jxl.write.biff.HyperlinkRecord$1:
jxl.write.biff.HyperlinkRecord$LinkType -> jxl.write.biff.HyperlinkRecord$LinkType:
jxl.write.biff.IndexRecord -> jxl.write.biff.IndexRecord:
    byte[] data -> data
    int rows -> rows
    int bofPosition -> bofPosition
    int blocks -> blocks
    int dataPos -> dataPos
    byte[] getData() -> getData
    void addBlockPosition(int) -> addBlockPosition
    void setDataStartPosition(int) -> setDataStartPosition
jxl.write.biff.InterfaceEndRecord -> jxl.write.biff.InterfaceEndRecord:
    byte[] getData() -> getData
jxl.write.biff.InterfaceHeaderRecord -> jxl.write.biff.InterfaceHeaderRecord:
    byte[] getData() -> getData
jxl.write.biff.IterationRecord -> jxl.write.biff.IterationRecord:
    boolean iterate -> iterate
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.JxlWriteException -> jxl.write.biff.JxlWriteException:
    jxl.write.biff.JxlWriteException$WriteMessage formatInitialized -> formatInitialized
    jxl.write.biff.JxlWriteException$WriteMessage cellReferenced -> cellReferenced
    jxl.write.biff.JxlWriteException$WriteMessage maxRowsExceeded -> maxRowsExceeded
    jxl.write.biff.JxlWriteException$WriteMessage maxColumnsExceeded -> maxColumnsExceeded
    jxl.write.biff.JxlWriteException$WriteMessage copyPropertySets -> copyPropertySets
jxl.write.biff.JxlWriteException$WriteMessage -> jxl.write.biff.JxlWriteException$WriteMessage:
    java.lang.String message -> message
jxl.write.biff.LabelRecord -> jxl.write.biff.LabelRecord:
    jxl.common.Logger logger -> logger
    java.lang.String contents -> contents
    jxl.write.biff.SharedStrings sharedStrings -> sharedStrings
    int index -> index
    jxl.CellType getType() -> getType
    byte[] getData() -> getData
    java.lang.String getContents() -> getContents
    java.lang.String getString() -> getString
    void setString(java.lang.String) -> setString
    void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
jxl.write.biff.LeftMarginRecord -> jxl.write.biff.LeftMarginRecord:
jxl.write.biff.MMSRecord -> jxl.write.biff.MMSRecord:
    byte numMenuItemsAdded -> numMenuItemsAdded
    byte numMenuItemsDeleted -> numMenuItemsDeleted
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.MarginRecord -> jxl.write.biff.MarginRecord:
    double margin -> margin
    byte[] getData() -> getData
jxl.write.biff.MemoryDataOutput -> jxl.write.biff.MemoryDataOutput:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    int growSize -> growSize
    int pos -> pos
    void write(byte[]) -> write
    int getPosition() -> getPosition
    void setData(byte[],int) -> setData
    void writeData(java.io.OutputStream) -> writeData
    void close() -> close
jxl.write.biff.MergedCells -> jxl.write.biff.MergedCells:
    jxl.common.Logger logger -> logger
    java.util.ArrayList ranges -> ranges
    jxl.write.WritableSheet sheet -> sheet
    int maxRangesPerSheet -> maxRangesPerSheet
    void add(jxl.Range) -> add
    void insertRow(int) -> insertRow
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeRow(int) -> removeRow
    jxl.Range[] getMergedCells() -> getMergedCells
    void unmergeCells(jxl.Range) -> unmergeCells
    void checkIntersections() -> checkIntersections
    void checkRanges() -> checkRanges
    void write(jxl.write.biff.File) -> write
jxl.write.biff.MergedCellsRecord -> jxl.write.biff.MergedCellsRecord:
    java.util.ArrayList ranges -> ranges
    byte[] getData() -> getData
jxl.write.biff.MulRKRecord -> jxl.write.biff.MulRKRecord:
    int row -> row
    int colFirst -> colFirst
    int colLast -> colLast
    int[] rknumbers -> rknumbers
    int[] xfIndices -> xfIndices
    byte[] getData() -> getData
jxl.write.biff.NameRecord -> jxl.write.biff.NameRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    java.lang.String name -> name
    jxl.biff.BuiltInName builtInName -> builtInName
    int index -> index
    int sheetRef -> sheetRef
    boolean modified -> modified
    jxl.write.biff.NameRecord$NameRange[] ranges -> ranges
    int cellReference -> cellReference
    int areaReference -> areaReference
    int subExpression -> subExpression
    int union -> union
    jxl.write.biff.NameRecord$NameRange EMPTY_RANGE -> EMPTY_RANGE
    byte[] getData() -> getData
    java.lang.String getName() -> getName
    int getIndex() -> getIndex
    int getSheetRef() -> getSheetRef
    void setSheetRef(int) -> setSheetRef
    jxl.write.biff.NameRecord$NameRange[] getRanges() -> getRanges
    void rowInserted(int,int) -> rowInserted
    boolean rowRemoved(int,int) -> rowRemoved
    boolean columnRemoved(int,int) -> columnRemoved
    void columnInserted(int,int) -> columnInserted
jxl.write.biff.NameRecord$NameRange -> jxl.write.biff.NameRecord$NameRange:
    int columnFirst -> columnFirst
    int rowFirst -> rowFirst
    int columnLast -> columnLast
    int rowLast -> rowLast
    int externalSheet -> externalSheet
    int getFirstColumn() -> getFirstColumn
    int getFirstRow() -> getFirstRow
    int getLastColumn() -> getLastColumn
    int getLastRow() -> getLastRow
    int getExternalSheet() -> getExternalSheet
    void incrementFirstRow() -> incrementFirstRow
    void incrementLastRow() -> incrementLastRow
    void decrementFirstRow() -> decrementFirstRow
    void decrementLastRow() -> decrementLastRow
    void incrementFirstColumn() -> incrementFirstColumn
    void incrementLastColumn() -> incrementLastColumn
    void decrementFirstColumn() -> decrementFirstColumn
    void decrementLastColumn() -> decrementLastColumn
    byte[] getData() -> getData
jxl.write.biff.NineteenFourRecord -> jxl.write.biff.NineteenFourRecord:
    boolean nineteenFourDate -> nineteenFourDate
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.NumberFormatRecord -> jxl.write.biff.NumberFormatRecord:
    jxl.common.Logger logger -> logger
    java.lang.String trimInvalidChars(java.lang.String) -> trimInvalidChars
jxl.write.biff.NumberFormatRecord$NonValidatingFormat -> jxl.write.biff.NumberFormatRecord$NonValidatingFormat:
jxl.write.biff.NumberRecord -> jxl.write.biff.NumberRecord:
    double value -> value
    java.text.NumberFormat format -> format
    java.text.DecimalFormat defaultFormat -> defaultFormat
    jxl.CellType getType() -> getType
    byte[] getData() -> getData
    java.lang.String getContents() -> getContents
    double getValue() -> getValue
    void setValue(double) -> setValue
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
jxl.write.biff.ObjProjRecord -> jxl.write.biff.ObjProjRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.ObjectProtectRecord -> jxl.write.biff.ObjectProtectRecord:
    boolean protection -> protection
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.PLSRecord -> jxl.write.biff.PLSRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.PaletteRecord -> jxl.write.biff.PaletteRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.PaneRecord -> jxl.write.biff.PaneRecord:
    int rowsVisible -> rowsVisible
    int columnsVisible -> columnsVisible
    int topLeftPane -> topLeftPane
    int bottomLeftPane -> bottomLeftPane
    int topRightPane -> topRightPane
    int bottomRightPane -> bottomRightPane
    byte[] getData() -> getData
jxl.write.biff.PasswordRecord -> jxl.write.biff.PasswordRecord:
    java.lang.String password -> password
    byte[] data -> data
    byte[] getData() -> getData
    int rotLeft15Bit(int,int) -> rotLeft15Bit
jxl.write.biff.PrecisionRecord -> jxl.write.biff.PrecisionRecord:
    boolean asDisplayed -> asDisplayed
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.PrintGridLinesRecord -> jxl.write.biff.PrintGridLinesRecord:
    byte[] data -> data
    boolean printGridLines -> printGridLines
    byte[] getData() -> getData
jxl.write.biff.PrintHeadersRecord -> jxl.write.biff.PrintHeadersRecord:
    byte[] data -> data
    boolean printHeaders -> printHeaders
    byte[] getData() -> getData
jxl.write.biff.Prot4RevPassRecord -> jxl.write.biff.Prot4RevPassRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.Prot4RevRecord -> jxl.write.biff.Prot4RevRecord:
    boolean protection -> protection
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.ProtectRecord -> jxl.write.biff.ProtectRecord:
    boolean protection -> protection
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.ReadBooleanFormulaRecord -> jxl.write.biff.ReadBooleanFormulaRecord:
    boolean getValue() -> getValue
jxl.write.biff.ReadDateFormulaRecord -> jxl.write.biff.ReadDateFormulaRecord:
    java.util.Date getDate() -> getDate
    boolean isTime() -> isTime
    java.text.DateFormat getDateFormat() -> getDateFormat
jxl.write.biff.ReadErrorFormulaRecord -> jxl.write.biff.ReadErrorFormulaRecord:
    jxl.common.Logger logger -> logger
    int getErrorCode() -> getErrorCode
    byte[] handleFormulaException() -> handleFormulaException
jxl.write.biff.ReadFormulaRecord -> jxl.write.biff.ReadFormulaRecord:
    jxl.common.Logger logger -> logger
    jxl.biff.FormulaData formula -> formula
    jxl.biff.formula.FormulaParser parser -> parser
    byte[] getCellData() -> getCellData
    byte[] handleFormulaException() -> handleFormulaException
    byte[] getData() -> getData
    jxl.CellType getType() -> getType
    java.lang.String getContents() -> getContents
    byte[] getFormulaData() -> getFormulaData
    byte[] getFormulaBytes() -> getFormulaBytes
    jxl.write.WritableCell copyTo(int,int) -> copyTo
    void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
    void columnInserted(jxl.Sheet,int,int) -> columnInserted
    void columnRemoved(jxl.Sheet,int,int) -> columnRemoved
    void rowInserted(jxl.Sheet,int,int) -> rowInserted
    void rowRemoved(jxl.Sheet,int,int) -> rowRemoved
    jxl.biff.FormulaData getReadFormula() -> getReadFormula
    java.lang.String getFormula() -> getFormula
    boolean handleImportedCellReferences(jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> handleImportedCellReferences
jxl.write.biff.ReadNumberFormulaRecord -> jxl.write.biff.ReadNumberFormulaRecord:
    jxl.common.Logger logger -> logger
    double getValue() -> getValue
    java.text.NumberFormat getNumberFormat() -> getNumberFormat
    byte[] handleFormulaException() -> handleFormulaException
jxl.write.biff.ReadStringFormulaRecord -> jxl.write.biff.ReadStringFormulaRecord:
    jxl.common.Logger logger -> logger
    java.lang.String getString() -> getString
    byte[] handleFormulaException() -> handleFormulaException
jxl.write.biff.RefModeRecord -> jxl.write.biff.RefModeRecord:
    byte[] getData() -> getData
jxl.write.biff.RefreshAllRecord -> jxl.write.biff.RefreshAllRecord:
    boolean refreshall -> refreshall
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.RightMarginRecord -> jxl.write.biff.RightMarginRecord:
jxl.write.biff.RowRecord -> jxl.write.biff.RowRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    jxl.write.biff.CellValue[] cells -> cells
    int rowHeight -> rowHeight
    boolean collapsed -> collapsed
    int rowNumber -> rowNumber
    int numColumns -> numColumns
    int xfIndex -> xfIndex
    jxl.biff.XFRecord style -> style
    boolean defaultFormat -> defaultFormat
    boolean matchesDefFontHeight -> matchesDefFontHeight
    int growSize -> growSize
    int maxRKValue -> maxRKValue
    int minRKValue -> minRKValue
    int defaultHeightIndicator -> defaultHeightIndicator
    int maxColumns -> maxColumns
    int outlineLevel -> outlineLevel
    boolean groupStart -> groupStart
    jxl.write.WritableSheet sheet -> sheet
    void setRowHeight(int) -> setRowHeight
    void setRowDetails(int,boolean,boolean,int,boolean,jxl.biff.XFRecord) -> setRowDetails
    void setCollapsed(boolean) -> setCollapsed
    int getRowNumber() -> getRowNumber
    void addCell(jxl.write.biff.CellValue) -> addCell
    void removeCell(int) -> removeCell
    void write(jxl.write.biff.File) -> write
    void writeCells(jxl.write.biff.File) -> writeCells
    void writeIntegerValues(java.util.ArrayList,jxl.write.biff.File) -> writeIntegerValues
    byte[] getData() -> getData
    int getMaxColumn() -> getMaxColumn
    jxl.write.biff.CellValue getCell(int) -> getCell
    void incrementRow() -> incrementRow
    void decrementRow() -> decrementRow
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    boolean isDefaultHeight() -> isDefaultHeight
    int getRowHeight() -> getRowHeight
    boolean isCollapsed() -> isCollapsed
    void rationalize(jxl.biff.IndexMapping) -> rationalize
    jxl.biff.XFRecord getStyle() -> getStyle
    boolean hasDefaultFormat() -> hasDefaultFormat
    boolean matchesDefaultFontHeight() -> matchesDefaultFontHeight
    int getOutlineLevel() -> getOutlineLevel
    boolean getGroupStart() -> getGroupStart
    void incrementOutlineLevel() -> incrementOutlineLevel
    void decrementOutlineLevel() -> decrementOutlineLevel
    void setOutlineLevel(int) -> setOutlineLevel
    void setGroupStart(boolean) -> setGroupStart
jxl.write.biff.RowsExceededException -> jxl.write.biff.RowsExceededException:
jxl.write.biff.SCLRecord -> jxl.write.biff.SCLRecord:
    int zoomFactor -> zoomFactor
    byte[] getData() -> getData
jxl.write.biff.SSTContinueRecord -> jxl.write.biff.SSTContinueRecord:
    java.lang.String firstString -> firstString
    boolean includeLength -> includeLength
    int firstStringLength -> firstStringLength
    java.util.ArrayList strings -> strings
    java.util.ArrayList stringLengths -> stringLengths
    byte[] data -> data
    int byteCount -> byteCount
    int maxBytes -> maxBytes
    int setFirstString(java.lang.String,boolean) -> setFirstString
    int getOffset() -> getOffset
    int add(java.lang.String) -> add
    byte[] getData() -> getData
jxl.write.biff.SSTRecord -> jxl.write.biff.SSTRecord:
    int numReferences -> numReferences
    int numStrings -> numStrings
    java.util.ArrayList strings -> strings
    java.util.ArrayList stringLengths -> stringLengths
    byte[] data -> data
    int byteCount -> byteCount
    int maxBytes -> maxBytes
    int add(java.lang.String) -> add
    int getOffset() -> getOffset
    byte[] getData() -> getData
jxl.write.biff.SaveRecalcRecord -> jxl.write.biff.SaveRecalcRecord:
    byte[] data -> data
    boolean recalc -> recalc
    byte[] getData() -> getData
jxl.write.biff.ScenarioProtectRecord -> jxl.write.biff.ScenarioProtectRecord:
    boolean protection -> protection
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.SelectionRecord -> jxl.write.biff.SelectionRecord:
    jxl.write.biff.SelectionRecord$PaneType pane -> pane
    int column -> column
    int row -> row
    jxl.write.biff.SelectionRecord$PaneType lowerRight -> lowerRight
    jxl.write.biff.SelectionRecord$PaneType upperRight -> upperRight
    jxl.write.biff.SelectionRecord$PaneType lowerLeft -> lowerLeft
    jxl.write.biff.SelectionRecord$PaneType upperLeft -> upperLeft
    byte[] getData() -> getData
jxl.write.biff.SelectionRecord$PaneType -> jxl.write.biff.SelectionRecord$PaneType:
    int val -> val
jxl.write.biff.SetupRecord -> jxl.write.biff.SetupRecord:
    jxl.common.Logger logger -> logger
    byte[] data -> data
    double headerMargin -> headerMargin
    double footerMargin -> footerMargin
    jxl.format.PageOrientation orientation -> orientation
    jxl.format.PageOrder order -> order
    int paperSize -> paperSize
    int scaleFactor -> scaleFactor
    int pageStart -> pageStart
    int fitWidth -> fitWidth
    int fitHeight -> fitHeight
    int horizontalPrintResolution -> horizontalPrintResolution
    int verticalPrintResolution -> verticalPrintResolution
    int copies -> copies
    boolean initialized -> initialized
    void setOrientation(jxl.format.PageOrientation) -> setOrientation
    void setOrder(jxl.format.PageOrder) -> setOrder
    void setMargins(double,double) -> setMargins
    void setPaperSize(jxl.format.PaperSize) -> setPaperSize
    byte[] getData() -> getData
jxl.write.biff.SharedStrings -> jxl.write.biff.SharedStrings:
    java.util.HashMap strings -> strings
    java.util.ArrayList stringList -> stringList
    int totalOccurrences -> totalOccurrences
    int getIndex(java.lang.String) -> getIndex
    java.lang.String get(int) -> get
    void write(jxl.write.biff.File) -> write
    jxl.write.biff.SSTContinueRecord createContinueRecord(java.lang.String,int,jxl.write.biff.File) -> createContinueRecord
jxl.write.biff.SheetCopier -> jxl.write.biff.SheetCopier:
    jxl.common.Logger logger -> logger
    jxl.read.biff.SheetImpl fromSheet -> fromSheet
    jxl.write.biff.WritableSheetImpl toSheet -> toSheet
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    java.util.TreeSet columnFormats -> columnFormats
    jxl.biff.FormattingRecords formatRecords -> formatRecords
    java.util.ArrayList hyperlinks -> hyperlinks
    jxl.write.biff.MergedCells mergedCells -> mergedCells
    java.util.ArrayList rowBreaks -> rowBreaks
    java.util.ArrayList columnBreaks -> columnBreaks
    jxl.write.biff.SheetWriter sheetWriter -> sheetWriter
    java.util.ArrayList drawings -> drawings
    java.util.ArrayList images -> images
    java.util.ArrayList conditionalFormats -> conditionalFormats
    java.util.ArrayList validatedCells -> validatedCells
    jxl.biff.AutoFilter autoFilter -> autoFilter
    jxl.biff.DataValidation dataValidation -> dataValidation
    jxl.biff.drawing.ComboBox comboBox -> comboBox
    jxl.write.biff.PLSRecord plsRecord -> plsRecord
    boolean chartOnly -> chartOnly
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    int numRows -> numRows
    int maxRowOutlineLevel -> maxRowOutlineLevel
    int maxColumnOutlineLevel -> maxColumnOutlineLevel
    java.util.HashMap xfRecords -> xfRecords
    java.util.HashMap fonts -> fonts
    java.util.HashMap formats -> formats
    void setColumnFormats(java.util.TreeSet) -> setColumnFormats
    void setFormatRecords(jxl.biff.FormattingRecords) -> setFormatRecords
    void setHyperlinks(java.util.ArrayList) -> setHyperlinks
    void setMergedCells(jxl.write.biff.MergedCells) -> setMergedCells
    void setRowBreaks(java.util.ArrayList) -> setRowBreaks
    void setColumnBreaks(java.util.ArrayList) -> setColumnBreaks
    void setSheetWriter(jxl.write.biff.SheetWriter) -> setSheetWriter
    void setDrawings(java.util.ArrayList) -> setDrawings
    void setImages(java.util.ArrayList) -> setImages
    void setConditionalFormats(java.util.ArrayList) -> setConditionalFormats
    void setValidatedCells(java.util.ArrayList) -> setValidatedCells
    jxl.biff.AutoFilter getAutoFilter() -> getAutoFilter
    jxl.biff.DataValidation getDataValidation() -> getDataValidation
    jxl.biff.drawing.ComboBox getComboBox() -> getComboBox
    jxl.write.biff.PLSRecord getPLSRecord() -> getPLSRecord
    boolean isChartOnly() -> isChartOnly
    jxl.write.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    void copySheet() -> copySheet
    void copyWritableSheet() -> copyWritableSheet
    void importSheet() -> importSheet
    jxl.write.WritableCell shallowCopyCell(jxl.Cell) -> shallowCopyCell
    jxl.write.WritableCell deepCopyCell(jxl.Cell) -> deepCopyCell
    void shallowCopyCells() -> shallowCopyCells
    void deepCopyCells() -> deepCopyCells
    jxl.write.WritableCellFormat copyCellFormat(jxl.format.CellFormat) -> copyCellFormat
    void importNames() -> importNames
    int getRows() -> getRows
    int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
jxl.write.biff.SheetWriter -> jxl.write.biff.SheetWriter:
    jxl.common.Logger logger -> logger
    jxl.write.biff.File outputFile -> outputFile
    jxl.write.biff.RowRecord[] rows -> rows
    int numRows -> numRows
    int numCols -> numCols
    jxl.write.biff.HeaderRecord header -> header
    jxl.write.biff.FooterRecord footer -> footer
    jxl.SheetSettings settings -> settings
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    java.util.ArrayList rowBreaks -> rowBreaks
    java.util.ArrayList columnBreaks -> columnBreaks
    java.util.ArrayList hyperlinks -> hyperlinks
    java.util.ArrayList conditionalFormats -> conditionalFormats
    jxl.biff.AutoFilter autoFilter -> autoFilter
    java.util.ArrayList validatedCells -> validatedCells
    jxl.biff.DataValidation dataValidation -> dataValidation
    jxl.write.biff.MergedCells mergedCells -> mergedCells
    jxl.write.biff.PLSRecord plsRecord -> plsRecord
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    jxl.biff.WorkspaceInformationRecord workspaceOptions -> workspaceOptions
    java.util.TreeSet columnFormats -> columnFormats
    jxl.biff.drawing.SheetDrawingWriter drawingWriter -> drawingWriter
    boolean chartOnly -> chartOnly
    int maxRowOutlineLevel -> maxRowOutlineLevel
    int maxColumnOutlineLevel -> maxColumnOutlineLevel
    jxl.write.biff.WritableSheetImpl sheet -> sheet
    void write() -> write
    jxl.write.biff.HeaderRecord getHeader() -> getHeader
    jxl.write.biff.FooterRecord getFooter() -> getFooter
    void setWriteData(jxl.write.biff.RowRecord[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,jxl.write.biff.MergedCells,java.util.TreeSet,int,int) -> setWriteData
    void setDimensions(int,int) -> setDimensions
    void setSettings(jxl.SheetSettings) -> setSettings
    jxl.biff.WorkspaceInformationRecord getWorkspaceOptions() -> getWorkspaceOptions
    void setWorkspaceOptions(jxl.biff.WorkspaceInformationRecord) -> setWorkspaceOptions
    void setCharts(jxl.biff.drawing.Chart[]) -> setCharts
    void setDrawings(java.util.ArrayList,boolean) -> setDrawings
    jxl.biff.drawing.Chart[] getCharts() -> getCharts
    void checkMergedBorders() -> checkMergedBorders
    jxl.Cell[] getColumn(int) -> getColumn
    void setChartOnly() -> setChartOnly
    void setPLS(jxl.write.biff.PLSRecord) -> setPLS
    void setButtonPropertySet(jxl.write.biff.ButtonPropertySetRecord) -> setButtonPropertySet
    void setDataValidation(jxl.biff.DataValidation,java.util.ArrayList) -> setDataValidation
    void setConditionalFormats(java.util.ArrayList) -> setConditionalFormats
    void setAutoFilter(jxl.biff.AutoFilter) -> setAutoFilter
    void writeDataValidation() -> writeDataValidation
jxl.write.biff.SortRecord -> jxl.write.biff.SortRecord:
    java.lang.String column1Name -> column1Name
    java.lang.String column2Name -> column2Name
    java.lang.String column3Name -> column3Name
    boolean sortColumns -> sortColumns
    boolean sortKey1Desc -> sortKey1Desc
    boolean sortKey2Desc -> sortKey2Desc
    boolean sortKey3Desc -> sortKey3Desc
    boolean sortCaseSensitive -> sortCaseSensitive
    byte[] getData() -> getData
jxl.write.biff.StringRecord -> jxl.write.biff.StringRecord:
    java.lang.String value -> value
    byte[] getData() -> getData
jxl.write.biff.StyleXFRecord -> jxl.write.biff.StyleXFRecord:
    void setCellOptions(int) -> setCellOptions
    void setLocked(boolean) -> setLocked
jxl.write.biff.Styles -> jxl.write.biff.Styles:
    jxl.common.Logger logger -> logger
    jxl.write.WritableFont arial10pt -> arial10pt
    jxl.write.WritableFont hyperlinkFont -> hyperlinkFont
    jxl.write.WritableCellFormat normalStyle -> normalStyle
    jxl.write.WritableCellFormat hyperlinkStyle -> hyperlinkStyle
    jxl.write.WritableCellFormat hiddenStyle -> hiddenStyle
    jxl.write.WritableCellFormat defaultDateFormat -> defaultDateFormat
    void initNormalStyle() -> initNormalStyle
    jxl.write.WritableCellFormat getNormalStyle() -> getNormalStyle
    void initHiddenStyle() -> initHiddenStyle
    jxl.write.WritableCellFormat getHiddenStyle() -> getHiddenStyle
    void initHyperlinkStyle() -> initHyperlinkStyle
    jxl.write.WritableCellFormat getHyperlinkStyle() -> getHyperlinkStyle
    void initArial10Pt() -> initArial10Pt
    jxl.write.WritableFont getArial10Pt() -> getArial10Pt
    void initHyperlinkFont() -> initHyperlinkFont
    jxl.write.WritableFont getHyperlinkFont() -> getHyperlinkFont
    void initDefaultDateFormat() -> initDefaultDateFormat
    jxl.write.WritableCellFormat getDefaultDateFormat() -> getDefaultDateFormat
    jxl.biff.XFRecord getFormat(jxl.biff.XFRecord) -> getFormat
jxl.write.biff.SupbookRecord -> jxl.write.biff.SupbookRecord:
    jxl.common.Logger logger -> logger
    jxl.write.biff.SupbookRecord$SupbookType type -> type
    byte[] data -> data
    int numSheets -> numSheets
    java.lang.String fileName -> fileName
    java.lang.String[] sheetNames -> sheetNames
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.write.biff.SupbookRecord$SupbookType INTERNAL -> INTERNAL
    jxl.write.biff.SupbookRecord$SupbookType EXTERNAL -> EXTERNAL
    jxl.write.biff.SupbookRecord$SupbookType ADDIN -> ADDIN
    jxl.write.biff.SupbookRecord$SupbookType LINK -> LINK
    jxl.write.biff.SupbookRecord$SupbookType UNKNOWN -> UNKNOWN
    void initInternal(jxl.read.biff.SupbookRecord) -> initInternal
    void initInternal() -> initInternal
    void adjustInternal(int) -> adjustInternal
    void initExternal() -> initExternal
    void initAddin() -> initAddin
    byte[] getData() -> getData
    jxl.write.biff.SupbookRecord$SupbookType getType() -> getType
    int getNumberOfSheets() -> getNumberOfSheets
    java.lang.String getFileName() -> getFileName
    int getSheetIndex(java.lang.String) -> getSheetIndex
    java.lang.String getSheetName(int) -> getSheetName
jxl.write.biff.SupbookRecord$1 -> jxl.write.biff.SupbookRecord$1:
jxl.write.biff.SupbookRecord$SupbookType -> jxl.write.biff.SupbookRecord$SupbookType:
jxl.write.biff.TabIdRecord -> jxl.write.biff.TabIdRecord:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.TemplateRecord -> jxl.write.biff.TemplateRecord:
    byte[] getData() -> getData
jxl.write.biff.TopMarginRecord -> jxl.write.biff.TopMarginRecord:
jxl.write.biff.UsesElfsRecord -> jxl.write.biff.UsesElfsRecord:
    byte[] data -> data
    boolean usesElfs -> usesElfs
    byte[] getData() -> getData
jxl.write.biff.VerticalCentreRecord -> jxl.write.biff.VerticalCentreRecord:
    byte[] data -> data
    boolean centre -> centre
    byte[] getData() -> getData
jxl.write.biff.VerticalPageBreaksRecord -> jxl.write.biff.VerticalPageBreaksRecord:
    int[] columnBreaks -> columnBreaks
    byte[] getData() -> getData
jxl.write.biff.Weird1Record -> jxl.write.biff.Weird1Record:
    byte[] getData() -> getData
jxl.write.biff.Window1Record -> jxl.write.biff.Window1Record:
    byte[] data -> data
    int selectedSheet -> selectedSheet
    byte[] getData() -> getData
jxl.write.biff.Window2Record -> jxl.write.biff.Window2Record:
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.WindowProtectRecord -> jxl.write.biff.WindowProtectRecord:
    boolean protection -> protection
    byte[] data -> data
    byte[] getData() -> getData
jxl.write.biff.WritableFontRecord -> jxl.write.biff.WritableFontRecord:
    void setPointSize(int) -> setPointSize
    void setBoldStyle(int) -> setBoldStyle
    void setItalic(boolean) -> setItalic
    void setUnderlineStyle(int) -> setUnderlineStyle
    void setColour(int) -> setColour
    void setScriptStyle(int) -> setScriptStyle
    void setStruckout(boolean) -> setStruckout
jxl.write.biff.WritableFonts -> jxl.write.biff.WritableFonts:
jxl.write.biff.WritableFormattingRecords -> jxl.write.biff.WritableFormattingRecords:
    jxl.write.WritableCellFormat normalStyle -> normalStyle
jxl.write.biff.WritableSheetCopier -> jxl.write.biff.WritableSheetCopier:
    jxl.common.Logger logger -> logger
    jxl.write.biff.WritableSheetImpl fromSheet -> fromSheet
    jxl.write.biff.WritableSheetImpl toSheet -> toSheet
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    java.util.TreeSet fromColumnFormats -> fromColumnFormats
    java.util.TreeSet toColumnFormats -> toColumnFormats
    jxl.write.biff.MergedCells fromMergedCells -> fromMergedCells
    jxl.write.biff.MergedCells toMergedCells -> toMergedCells
    jxl.write.biff.RowRecord[] fromRows -> fromRows
    java.util.ArrayList fromRowBreaks -> fromRowBreaks
    java.util.ArrayList fromColumnBreaks -> fromColumnBreaks
    java.util.ArrayList toRowBreaks -> toRowBreaks
    java.util.ArrayList toColumnBreaks -> toColumnBreaks
    jxl.biff.DataValidation fromDataValidation -> fromDataValidation
    jxl.biff.DataValidation toDataValidation -> toDataValidation
    jxl.write.biff.SheetWriter sheetWriter -> sheetWriter
    java.util.ArrayList fromDrawings -> fromDrawings
    java.util.ArrayList toDrawings -> toDrawings
    java.util.ArrayList toImages -> toImages
    jxl.biff.WorkspaceInformationRecord fromWorkspaceOptions -> fromWorkspaceOptions
    jxl.write.biff.PLSRecord fromPLSRecord -> fromPLSRecord
    jxl.write.biff.PLSRecord toPLSRecord -> toPLSRecord
    jxl.write.biff.ButtonPropertySetRecord fromButtonPropertySet -> fromButtonPropertySet
    jxl.write.biff.ButtonPropertySetRecord toButtonPropertySet -> toButtonPropertySet
    java.util.ArrayList fromHyperlinks -> fromHyperlinks
    java.util.ArrayList toHyperlinks -> toHyperlinks
    java.util.ArrayList validatedCells -> validatedCells
    int numRows -> numRows
    int maxRowOutlineLevel -> maxRowOutlineLevel
    int maxColumnOutlineLevel -> maxColumnOutlineLevel
    boolean chartOnly -> chartOnly
    jxl.biff.FormattingRecords formatRecords -> formatRecords
    java.util.HashMap xfRecords -> xfRecords
    java.util.HashMap fonts -> fonts
    java.util.HashMap formats -> formats
    void setColumnFormats(java.util.TreeSet,java.util.TreeSet) -> setColumnFormats
    void setMergedCells(jxl.write.biff.MergedCells,jxl.write.biff.MergedCells) -> setMergedCells
    void setRows(jxl.write.biff.RowRecord[]) -> setRows
    void setValidatedCells(java.util.ArrayList) -> setValidatedCells
    void setRowBreaks(java.util.ArrayList,java.util.ArrayList) -> setRowBreaks
    void setColumnBreaks(java.util.ArrayList,java.util.ArrayList) -> setColumnBreaks
    void setDrawings(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> setDrawings
    void setHyperlinks(java.util.ArrayList,java.util.ArrayList) -> setHyperlinks
    void setWorkspaceOptions(jxl.biff.WorkspaceInformationRecord) -> setWorkspaceOptions
    void setDataValidation(jxl.biff.DataValidation) -> setDataValidation
    void setPLSRecord(jxl.write.biff.PLSRecord) -> setPLSRecord
    void setButtonPropertySetRecord(jxl.write.biff.ButtonPropertySetRecord) -> setButtonPropertySetRecord
    void setSheetWriter(jxl.write.biff.SheetWriter) -> setSheetWriter
    jxl.biff.DataValidation getDataValidation() -> getDataValidation
    jxl.write.biff.PLSRecord getPLSRecord() -> getPLSRecord
    boolean isChartOnly() -> isChartOnly
    jxl.write.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    void copySheet() -> copySheet
    jxl.write.WritableCell shallowCopyCell(jxl.Cell) -> shallowCopyCell
    jxl.write.WritableCell deepCopyCell(jxl.Cell) -> deepCopyCell
    void shallowCopyCells() -> shallowCopyCells
    void deepCopyCells() -> deepCopyCells
    jxl.write.WritableCellFormat copyCellFormat(jxl.format.CellFormat) -> copyCellFormat
    int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
jxl.write.biff.WritableSheetImpl -> jxl.write.biff.WritableSheetImpl:
    jxl.common.Logger logger -> logger
    java.lang.String name -> name
    jxl.write.biff.File outputFile -> outputFile
    jxl.write.biff.RowRecord[] rows -> rows
    jxl.biff.FormattingRecords formatRecords -> formatRecords
    jxl.write.biff.SharedStrings sharedStrings -> sharedStrings
    java.util.TreeSet columnFormats -> columnFormats
    java.util.TreeSet autosizedColumns -> autosizedColumns
    java.util.ArrayList hyperlinks -> hyperlinks
    jxl.write.biff.MergedCells mergedCells -> mergedCells
    int numRows -> numRows
    int numColumns -> numColumns
    jxl.write.biff.PLSRecord plsRecord -> plsRecord
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    boolean chartOnly -> chartOnly
    jxl.biff.DataValidation dataValidation -> dataValidation
    java.util.ArrayList rowBreaks -> rowBreaks
    java.util.ArrayList columnBreaks -> columnBreaks
    java.util.ArrayList drawings -> drawings
    java.util.ArrayList images -> images
    java.util.ArrayList conditionalFormats -> conditionalFormats
    jxl.biff.AutoFilter autoFilter -> autoFilter
    java.util.ArrayList validatedCells -> validatedCells
    jxl.biff.drawing.ComboBox comboBox -> comboBox
    boolean drawingsModified -> drawingsModified
    int maxRowOutlineLevel -> maxRowOutlineLevel
    int maxColumnOutlineLevel -> maxColumnOutlineLevel
    jxl.SheetSettings settings -> settings
    jxl.write.biff.SheetWriter sheetWriter -> sheetWriter
    jxl.WorkbookSettings workbookSettings -> workbookSettings
    jxl.write.biff.WritableWorkbookImpl workbook -> workbook
    int rowGrowSize -> rowGrowSize
    int numRowsPerSheet -> numRowsPerSheet
    int maxSheetNameLength -> maxSheetNameLength
    char[] illegalSheetNameCharacters -> illegalSheetNameCharacters
    java.lang.String[] imageTypes -> imageTypes
    jxl.Cell getCell(java.lang.String) -> getCell
    jxl.Cell getCell(int,int) -> getCell
    jxl.write.WritableCell getWritableCell(java.lang.String) -> getWritableCell
    jxl.write.WritableCell getWritableCell(int,int) -> getWritableCell
    int getRows() -> getRows
    int getColumns() -> getColumns
    jxl.Cell findCell(java.lang.String) -> findCell
    jxl.Cell findCell(java.lang.String,int,int,int,int,boolean) -> findCell
    jxl.Cell findCell(java.util.regex.Pattern,int,int,int,int,boolean) -> findCell
    jxl.LabelCell findLabelCell(java.lang.String) -> findLabelCell
    jxl.Cell[] getRow(int) -> getRow
    jxl.Cell[] getColumn(int) -> getColumn
    java.lang.String getName() -> getName
    void insertRow(int) -> insertRow
    void insertColumn(int) -> insertColumn
    void removeColumn(int) -> removeColumn
    void removeRow(int) -> removeRow
    void addCell(jxl.write.WritableCell) -> addCell
    jxl.write.biff.RowRecord getRowRecord(int) -> getRowRecord
    jxl.write.biff.RowRecord getRowInfo(int) -> getRowInfo
    jxl.write.biff.ColumnInfoRecord getColumnInfo(int) -> getColumnInfo
    void setName(java.lang.String) -> setName
    void setHidden(boolean) -> setHidden
    void setProtected(boolean) -> setProtected
    void setSelected() -> setSelected
    boolean isHidden() -> isHidden
    void setColumnView(int,int) -> setColumnView
    void setColumnView(int,int,jxl.format.CellFormat) -> setColumnView
    void setColumnView(int,jxl.CellView) -> setColumnView
    void setRowView(int,int) -> setRowView
    void setRowView(int,boolean) -> setRowView
    void setRowView(int,int,boolean) -> setRowView
    void setRowView(int,jxl.CellView) -> setRowView
    void write() -> write
    void copy(jxl.Sheet) -> copy
    void copy(jxl.write.WritableSheet) -> copy
    jxl.write.biff.HeaderRecord getHeader() -> getHeader
    jxl.write.biff.FooterRecord getFooter() -> getFooter
    boolean isProtected() -> isProtected
    jxl.Hyperlink[] getHyperlinks() -> getHyperlinks
    jxl.Range[] getMergedCells() -> getMergedCells
    jxl.write.WritableHyperlink[] getWritableHyperlinks() -> getWritableHyperlinks
    void removeHyperlink(jxl.write.WritableHyperlink) -> removeHyperlink
    void removeHyperlink(jxl.write.WritableHyperlink,boolean) -> removeHyperlink
    void addHyperlink(jxl.write.WritableHyperlink) -> addHyperlink
    jxl.Range mergeCells(int,int,int,int) -> mergeCells
    void setRowGroup(int,int,boolean) -> setRowGroup
    void unsetRowGroup(int,int) -> unsetRowGroup
    void setColumnGroup(int,int,boolean) -> setColumnGroup
    void unsetColumnGroup(int,int) -> unsetColumnGroup
    void unmergeCells(jxl.Range) -> unmergeCells
    void setHeader(java.lang.String,java.lang.String,java.lang.String) -> setHeader
    void setFooter(java.lang.String,java.lang.String,java.lang.String) -> setFooter
    void setPageSetup(jxl.format.PageOrientation) -> setPageSetup
    void setPageSetup(jxl.format.PageOrientation,double,double) -> setPageSetup
    void setPageSetup(jxl.format.PageOrientation,jxl.format.PaperSize,double,double) -> setPageSetup
    jxl.SheetSettings getSettings() -> getSettings
    jxl.WorkbookSettings getWorkbookSettings() -> getWorkbookSettings
    void addRowPageBreak(int) -> addRowPageBreak
    void addColumnPageBreak(int) -> addColumnPageBreak
    jxl.biff.drawing.Chart[] getCharts() -> getCharts
    jxl.biff.drawing.DrawingGroupObject[] getDrawings() -> getDrawings
    void checkMergedBorders() -> checkMergedBorders
    jxl.biff.WorkspaceInformationRecord getWorkspaceOptions() -> getWorkspaceOptions
    void rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> rationalize
    jxl.write.biff.WritableWorkbookImpl getWorkbook() -> getWorkbook
    jxl.format.CellFormat getColumnFormat(int) -> getColumnFormat
    int getColumnWidth(int) -> getColumnWidth
    int getRowHeight(int) -> getRowHeight
    boolean isChartOnly() -> isChartOnly
    jxl.CellView getRowView(int) -> getRowView
    jxl.CellView getColumnView(int) -> getColumnView
    void addImage(jxl.write.WritableImage) -> addImage
    int getNumberOfImages() -> getNumberOfImages
    jxl.write.WritableImage getImage(int) -> getImage
    jxl.Image getDrawing(int) -> getDrawing
    void removeImage(jxl.write.WritableImage) -> removeImage
    java.lang.String validateName(java.lang.String) -> validateName
    void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> addDrawing
    void removeDrawing(jxl.biff.drawing.DrawingGroupObject) -> removeDrawing
    void removeDataValidation(jxl.write.biff.CellValue) -> removeDataValidation
    int[] getRowPageBreaks() -> getRowPageBreaks
    int[] getColumnPageBreaks() -> getColumnPageBreaks
    void addValidationCell(jxl.write.biff.CellValue) -> addValidationCell
    jxl.biff.drawing.ComboBox getComboBox() -> getComboBox
    void setComboBox(jxl.biff.drawing.ComboBox) -> setComboBox
    jxl.biff.DataValidation getDataValidation() -> getDataValidation
    void autosizeColumns() -> autosizeColumns
    void autosizeColumn(int) -> autosizeColumn
    void importSheet(jxl.Sheet) -> importSheet
    void applySharedDataValidation(jxl.write.WritableCell,int,int) -> applySharedDataValidation
    void removeSharedDataValidation(jxl.write.WritableCell) -> removeSharedDataValidation
jxl.write.biff.WritableSheetImpl$1 -> jxl.write.biff.WritableSheetImpl$1:
jxl.write.biff.WritableSheetImpl$ColumnInfoComparator -> jxl.write.biff.WritableSheetImpl$ColumnInfoComparator:
    boolean equals(java.lang.Object) -> equals
    int compare(java.lang.Object,java.lang.Object) -> compare
jxl.write.biff.WritableWorkbookImpl -> jxl.write.biff.WritableWorkbookImpl:
    jxl.common.Logger logger -> logger
    jxl.biff.FormattingRecords formatRecords -> formatRecords
    jxl.write.biff.File outputFile -> outputFile
    java.util.ArrayList sheets -> sheets
    jxl.biff.Fonts fonts -> fonts
    jxl.write.biff.ExternalSheetRecord externSheet -> externSheet
    java.util.ArrayList supbooks -> supbooks
    java.util.ArrayList names -> names
    java.util.HashMap nameRecords -> nameRecords
    jxl.write.biff.SharedStrings sharedStrings -> sharedStrings
    boolean closeStream -> closeStream
    boolean wbProtected -> wbProtected
    jxl.WorkbookSettings settings -> settings
    java.util.ArrayList rcirCells -> rcirCells
    jxl.biff.drawing.DrawingGroup drawingGroup -> drawingGroup
    jxl.write.biff.Styles styles -> styles
    boolean containsMacros -> containsMacros
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> buttonPropertySet
    jxl.write.biff.CountryRecord countryRecord -> countryRecord
    java.lang.Object SYNCHRONIZER -> SYNCHRONIZER
    java.lang.String[] addInFunctionNames -> addInFunctionNames
    jxl.biff.XCTRecord[] xctRecords -> xctRecords
    jxl.write.WritableSheet[] getSheets() -> getSheets
    java.lang.String[] getSheetNames() -> getSheetNames
    jxl.Sheet getReadSheet(int) -> getReadSheet
    jxl.write.WritableSheet getSheet(int) -> getSheet
    jxl.write.WritableSheet getSheet(java.lang.String) -> getSheet
    int getNumberOfSheets() -> getNumberOfSheets
    void close() -> close
    void setOutputFile(java.io.File) -> setOutputFile
    jxl.write.WritableSheet createSheet(java.lang.String,int,boolean) -> createSheet
    jxl.write.WritableSheet createSheet(java.lang.String,int) -> createSheet
    void removeSheet(int) -> removeSheet
    jxl.write.WritableSheet moveSheet(int,int) -> moveSheet
    void write() -> write
    void copyWorkbook(jxl.Workbook) -> copyWorkbook
    void copySheet(int,java.lang.String,int) -> copySheet
    void copySheet(java.lang.String,java.lang.String,int) -> copySheet
    void setProtected(boolean) -> setProtected
    void rationalize() -> rationalize
    int getInternalSheetIndex(java.lang.String) -> getInternalSheetIndex
    java.lang.String getExternalSheetName(int) -> getExternalSheetName
    java.lang.String getLastExternalSheetName(int) -> getLastExternalSheetName
    jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
    int getExternalSheetIndex(int) -> getExternalSheetIndex
    int getLastExternalSheetIndex(int) -> getLastExternalSheetIndex
    int getExternalSheetIndex(java.lang.String) -> getExternalSheetIndex
    int getLastExternalSheetIndex(java.lang.String) -> getLastExternalSheetIndex
    void setColourRGB(jxl.format.Colour,int,int,int) -> setColourRGB
    jxl.format.RGB getColourRGB(jxl.format.Colour) -> getColourRGB
    java.lang.String getName(int) -> getName
    int getNameIndex(java.lang.String) -> getNameIndex
    void addRCIRCell(jxl.write.biff.CellValue) -> addRCIRCell
    void columnInserted(jxl.write.biff.WritableSheetImpl,int) -> columnInserted
    void columnRemoved(jxl.write.biff.WritableSheetImpl,int) -> columnRemoved
    void rowInserted(jxl.write.biff.WritableSheetImpl,int) -> rowInserted
    void rowRemoved(jxl.write.biff.WritableSheetImpl,int) -> rowRemoved
    jxl.write.WritableCell findCellByName(java.lang.String) -> findCellByName
    jxl.Range[] findByName(java.lang.String) -> findByName
    void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> addDrawing
    void removeDrawing(jxl.biff.drawing.Drawing) -> removeDrawing
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    jxl.biff.drawing.DrawingGroup createDrawingGroup() -> createDrawingGroup
    java.lang.String[] getRangeNames() -> getRangeNames
    void removeRangeName(java.lang.String) -> removeRangeName
    jxl.write.biff.Styles getStyles() -> getStyles
    void addNameArea(java.lang.String,jxl.write.WritableSheet,int,int,int,int) -> addNameArea
    void addNameArea(java.lang.String,jxl.write.WritableSheet,int,int,int,int,boolean) -> addNameArea
    void addNameArea(jxl.biff.BuiltInName,jxl.write.WritableSheet,int,int,int,int,boolean) -> addNameArea
    void addNameArea(jxl.biff.BuiltInName,jxl.write.WritableSheet,int,int,int,int,int,int,int,int,boolean) -> addNameArea
    jxl.WorkbookSettings getSettings() -> getSettings
    jxl.write.WritableCell getWritableCell(java.lang.String) -> getWritableCell
    jxl.write.WritableSheet importSheet(java.lang.String,int,jxl.Sheet) -> importSheet
jxl.write.biff.WriteAccessRecord -> jxl.write.biff.WriteAccessRecord:
    byte[] data -> data
    java.lang.String authorString -> authorString
    java.lang.String userName -> userName
    byte[] getData() -> getData
